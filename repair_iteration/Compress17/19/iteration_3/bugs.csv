bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
2	[BUG]  [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
3	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
4	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  container[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
5	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  +  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  +  2;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  *  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  *  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
7	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  3;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  +  3;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  +  3;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
8	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  length;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  +  length;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
9	[BUG]  [BUGGY]  trailer  =  buffer[start  -  end];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start  -  end];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[start  -  end];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
10	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start  -  start  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[start  -  start  +  1];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
11	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end  -  start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  buffer[end  -  start];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
12	[BUG]  [BUGGY]  trailer  =  new  byte[length];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  byte[length];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  trailer  =  new  byte[buffer.length];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[buffer.length];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  byte[buffer.length];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  trailer  =  new  ByteArrayInputStream(buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  ByteArrayInputStream(buffer,  0,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  ByteArrayInputStream(buffer,  0,  length);	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  trailer  =  new  ByteArrayInputStream(buffer,  0,  end);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  ByteArrayInputStream(buffer,  0,  end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  ByteArrayInputStream(buffer,  0,  end);	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  trailer  =  this.trailer[start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  this.trailer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  this.trailer[start];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
17	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  &  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  &  2;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
18	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  |  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  |  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  |  1;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
19	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  3;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  &  3;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  &  3;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
20	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
21	[BUG]  [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
22	[BUG]  [BUGGY]  End--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
23	[BUG]  [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
24	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
25	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Thread.currentThread().interrupt();	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1],  trailer));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1],  trailer));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1],  trailer));	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1]));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1]));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.report(JSError.make(buffer,  offset,  length,  buffer[end-1]));	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[start]));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[start]));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.report(JSError.make(buffer,  offset,  length,  buffer[start]));	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.reportCodeChange();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.reportCodeChange();	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[start,  end));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer[start,  end));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.report(JSError.make(buffer,  offset,  length,  buffer[start,  end));	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start-1]  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start-1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start-1]  +  1;	  trailer    =    buffer[end    -    start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  trailer  =  buffer[end  -  end-1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  end-1];	  trailer    =    buffer[end    -    start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  trailer  =  trailer[length  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[length  -  1];	  trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
35	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
36	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  ==  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  ==  0  &&  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
37	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  ==  0  &&  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  ==  0  &&  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
38	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0  &&  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0  &&  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
39	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
40	[BUG]  [BUGGY]  while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
41	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  ==  0  &&  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
42	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  *  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  *  1;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  3;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  +  3;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  +  3;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  +  4;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  +  4;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  +  4;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  while((  trailer  ==  null)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  null)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  trailer  ==  null)&&(trailer!=  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  trailer  ==  null)&&(trailer.length  >  0))  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  Trailer  trailer  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  trailer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  trailer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
53	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
54	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =(trailer  ==  '['  ||  trailer  ==  ']')?  buffer[end  -  1]  :  null;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
55	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  trailer;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  trailer;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  trailer;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
56	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]);	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
57	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  *  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  *  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
58	[BUG]  [BUGGY]  trailer  =  buffer[end+1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  trailer  =  new  byte[length+1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  byte[length+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
60	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
61	[BUG]  [BUGGY]  End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
62	[BUG]  [BUGGY]  if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
63	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
64	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
65	[BUG]  [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
66	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start  +  2];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start  +  2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start  +  2];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
67	[BUG]  [BUGGY]  End  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  =  System.currentTimeMillis();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  =  System.currentTimeMillis();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  Thread.currentThread().setContentType(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Thread.currentThread().setContentType(buffer,  offset,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Thread.currentThread().setContentType(buffer,  offset,  length);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  cast(buffer,  offset,  length,  buffer[end-1]);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  cast(buffer,  offset,  length,  buffer[end-1]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	cast(buffer,  offset,  length,  buffer[end-1]);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  atterns.add( "-- ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  atterns.add( "-- ");  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	atterns.add( "-- ");	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
71	[BUG]  [BUGGY]  Context.codeBug();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Context.codeBug();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Context.codeBug();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
72	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
75	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  offset  +  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  offset  +  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  offset  +  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
76	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  offset;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  offset;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  offset;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
77	[BUG]  [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(length  >  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
78	[BUG]  [BUGGY]  final  int  length  =  trailer.length();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  int  length  =  trailer.length();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  int  length  =  trailer.length();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  final  int  length  =  trailer.length;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  int  length  =  trailer.length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  int  length  =  trailer.length;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  end--;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
81	[BUG]  [BUGGY]  End  <?>  end  =  getLength();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  getLength();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  getLength();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
82	[BUG]  [BUGGY]  final  int  length  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  int  length  =  trailer.length  -  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  int  length  =  trailer.length  -  start;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
83	[BUG]  [BUGGY]  End  <?>  end  =  getEnd();  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  getEnd();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  getEnd();	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
84	[BUG]  [BUGGY]  trailer  =  buffer[start  0];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start  0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[start  0];	  trailer    =    buffer[end    0];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  trailer  =  new  byte[length  -  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  new  byte[length  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  new  byte[length  -  1];	  trailer    =    buffer[end    0];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  *  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  *  2;	  trailer    =    buffer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
88	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
89	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
90	[BUG]  [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>terator  <  T>ter	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
91	[BUG]  [BUGGY]  while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
92	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
93	[BUG]  [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
94	[BUG]  [BUGGY]  while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
95	[BUG]  [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {  if(length  >  0)  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
97	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
98	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
99	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
100	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '7')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(trailer  ==  '0'  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(trailer  ==  '0'  ||  trailer  ==  '9')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
102	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start-1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  start-1];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
103	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  start  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  start  +  1];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
104	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  start]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  start]  +  1;	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
105	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[end-1];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
106	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  0];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[end  0];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
107	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  ];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  ];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[end  ];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
108	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[end  1];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
109	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start  1]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start  1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start  1]  +  1;	  trailer    =    buffer[end    -    start    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
110	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start  2];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start  2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start  2];	  trailer    =    buffer[end    -    start    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
111	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  *  BYTE_MASK  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  *  BYTE_MASK  +  1;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
112	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  /  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  /  BYTE_MASK;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
113	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  *  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  *  FALLBACK_ENCODING;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  *  FALLBACK_ENCODING;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
114	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  &  BYTE_MASK;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
115	[BUG]  [BUGGY]  trailer  =  buffer[0];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[0];	  trailer    =    buffer[end    ];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
116	[BUG]  [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  buffer[end];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  buffer[end];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =(end  <  0)?  buffer[start]  :  buffer[end];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
117	[BUG]  [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  end;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  end;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =(end  <  0)?  buffer[start]  :  end;	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
118	[BUG]  [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  buffer[end-1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(end  <  0)?  buffer[start]  :  buffer[end-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =(end  <  0)?  buffer[start]  :  buffer[end-1];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
119	[BUG]  [BUGGY]  terator  <  Object>  start  =  getStart();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  getStart();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  start  =  getStart();	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
120	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length));	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
121	[BUG]  [BUGGY]  terator  <  Object>  start  =  getEnd();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  getEnd();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  start  =  getEnd();	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
122	[BUG]  [BUGGY]  terator  <  Object>  start  =  buffer.get(start);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  buffer.get(start);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  start  =  buffer.get(start);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
123	[BUG]  [BUGGY]  terator  <  Object>  start  =  buffer.get(offset);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  buffer.get(offset);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  start  =  buffer.get(offset);	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
124	[BUG]  [BUGGY]  safeThan  <  =  false;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan  <  =  false;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan  <  =  false;	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
125	[BUG]  [BUGGY]  trailer  =  buffer[offset+1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[offset+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[offset+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
126	[BUG]  [BUGGY]  trailer  =  buffer[length+1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[length+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[length+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
127	[BUG]  [BUGGY]  trailer  =  buffer[start  -  start-1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start  -  start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[start  -  start-1];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
128	[BUG]  [BUGGY]  trailer  =  buffer[start  -  offset];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[start  -  offset];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[start  -  offset];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
129	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  *  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  *  BYTE_MASK;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
130	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
131	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
132	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]);  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
134	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  warning));  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  warning));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  warning));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
135	[BUG]  [BUGGY]  trailer  =  block[end  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  block[end  -  start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  block[end  -  start];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
136	[BUG]  [BUGGY]  trailer  =(end  -  start)+  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =(end  -  start)+  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =(end  -  start)+  1;	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
137	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  4;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  &  4;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  &  4;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
138	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  &  0;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  &  0;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
139	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
140	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length)>  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
141	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
142	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-2,  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-2,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-2,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
143	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
144	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
145	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
146	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
147	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
148	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
149	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  null;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  null;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
150	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
151	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
152	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
153	[BUG]  [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
154	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
155	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(trailer,  start,  length)>  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
157	[BUG]  [BUGGY]  if(length  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  <  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
158	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  start];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
159	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  2];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  buffer[start  -  2];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  buffer[start  -  2];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
160	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
161	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
162	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
163	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
164	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'e')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'e')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  <  =  length))  {  if(trailer  ==  0  ||  trailer  ==  'e')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
165	[BUG]  [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
166	[BUG]  [BUGGY]  End  i  =  start;  i  <  end;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  i  =  start;  i  <  end;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  i  =  start;  i  <  end;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
167	[BUG]  [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  i  =  start;  i  <  length;  ++i)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  i  =  start;  i  <  length;  ++i)  {  end--;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
168	[BUG]  [BUGGY]  Integer  end  =  getOffsetToSubtract(buffer,  offset,  length);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Integer  end  =  getOffsetToSubtract(buffer,  offset,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Integer  end  =  getOffsetToSubtract(buffer,  offset,  length);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
169	[BUG]  [BUGGY]  End  i  =  start;  i  <  end;  ++i)  {  end--;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  i  =  start;  i  <  end;  ++i)  {  end--;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  i  =  start;  i  <  end;  ++i)  {  end--;	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
170	[BUG]  [BUGGY]  Integer  end  =  new  Integer(length);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Integer  end  =  new  Integer(length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Integer  end  =  new  Integer(length);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
171	[BUG]  [BUGGY]  Integer  end  =  getOffsetToSubtract(offset,  length);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Integer  end  =  getOffsetToSubtract(offset,  length);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Integer  end  =  getOffsetToSubtract(offset,  length);	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
172	[BUG]  [BUGGY]  trailer  =  buffer[end  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  1];	  trailer    =    buffer[end    0];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
173	[BUG]  [BUGGY]  End  end  =  trailer.getEnd();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  trailer.getEnd();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  end  =  trailer.getEnd();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
174	[BUG]  [BUGGY]  terator  <  Object>  start  =  trailer.getStart();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  start  =  trailer.getStart();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  start  =  trailer.getStart();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
175	[BUG]  [BUGGY]  End  =  System.currentTimeMillis()  -  start;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  =  System.currentTimeMillis()  -  start;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  =  System.currentTimeMillis()  -  start;	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
176	[BUG]  [BUGGY]  End  end  =  trailer.getLength();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  trailer.getLength();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  end  =  trailer.getLength();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
177	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  null;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  null;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
178	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  ByteArrayInputStream(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  ByteArrayInputStream(buffer[i]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  ByteArrayInputStream(buffer[i]);  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
179	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  container[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  container[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  container[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
180	[BUG]  [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  byte[length];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  byte[length];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeMultiply(buffer,  offset,  length)>  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  new  byte[length];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
181	[BUG]  [BUGGY]  while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
182	[BUG]  [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
183	[BUG]  [BUGGY]  if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  >  0)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
184	[BUG]  [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
185	[BUG]  [BUGGY]  while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer  >=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
186	[BUG]  [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '>')  {  end--;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '>')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while(trailer!=  '.')  {  if(length  >  0)  {  if(trailer  ==  0  ||  trailer  ==  '>')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
187	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start-1]  +  length;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start-1]  +  length;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start-1]  +  length;	  trailer    =    buffer[end    -    start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
188	[BUG]  [BUGGY]  Trailer  trailer  =  this.buffer[end  -  1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  this.buffer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  this.buffer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
189	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  buffer[start  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
190	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  buffer[end  -  1]  +  1;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
191	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
192	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  }	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
193	[BUG]  [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  stop[start]);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  stop[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	safeThan!=  terrified)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  stop[start]);  }	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
194	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  byte  trailer  =  buffer[start];	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
195	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start-1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[start-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  byte  trailer  =  buffer[start-1];	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
196	[BUG]  [BUGGY]  final  byte  trailer  =  buffer[start].getByte();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  final  byte  trailer  =  buffer[start].getByte();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	final  byte  trailer  =  buffer[start].getByte();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
197	[BUG]  [BUGGY]  End  end  =  getEnd();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  end  =  getEnd();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  end  =  getEnd();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
198	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  1L;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  +  1L;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  +  1L;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
199	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  +  4;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  +  4;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  +  4;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
200	[BUG]  [BUGGY]  terator  <  Object>  iterator  =  exceptions.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  terator  <  Object>  iterator  =  exceptions.iterator();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	terator  <  Object>  iterator  =  exceptions.iterator();	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
201	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  container[start]);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  container[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  container[start]);	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
202	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer);	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
203	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  buffer[start]));	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
204	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  trailer[start]);	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
205	[BUG]  [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  =  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));	  if(trailer    ==    '.')    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
206	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  start]  *  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  start]  *  BYTE_MASK;	  trailer    =    trailer[end    -    1]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
207	[BUG]  [BUGGY]  End  <?>  end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  End  <?>  end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	End  <?>  end  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
208	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  =  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
209	[BUG]  [BUGGY]  while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
210	[BUG]  [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  =  length)&&(end  <  =  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  =  length)&&(end  <  =  length))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
211	[BUG]  [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
212	[BUG]  [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
213	[BUG]  [BUGGY]  while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  <  0))  {  if(length  >  0)  {  for(int  i  =  start;  i  <  start;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    end;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
214	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  &  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  &  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  &  1;	  trailer    =    trailer[end    -    1]    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
215	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  &  BYTE_MASK;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  &  BYTE_MASK;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
216	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  &  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  &  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  &  1;	  trailer    =    buffer[end    -    1]    &    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
217	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
218	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end-1]));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
219	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[end-1]	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
220	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
221	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end-1],  trailer));  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end-1],  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end-1],  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end-1],    trailer));    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
222	[BUG]  [BUGGY]  trailer  =  buffer[end  -  offset-1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  offset-1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  offset-1];	  trailer    =    buffer[end    -    start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
223	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start0];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start0];	  trailer    =    buffer[end    -    start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
224	[BUG]  [BUGGY]  Annotations.checkState(trailer  ==  0);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.checkState(trailer  ==  0);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.checkState(trailer  ==  0);	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
225	[BUG]  [BUGGY]  Annotations.checkNotNull(end);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.checkNotNull(end);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.checkNotNull(end);	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
226	[BUG]  [BUGGY]  end  =  trailer.length();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  end  =  trailer.length();  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	end  =  trailer.length();	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
227	[BUG]  [BUGGY]  Annotations.checkState(trailer!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.checkState(trailer!=  null);  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.checkState(trailer!=  null);	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
228	[BUG]  [BUGGY]  trailer  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[start  -  start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[start  -  start];	  trailer    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
229	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
230	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
231	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(trailer  <  =  0))  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
232	[BUG]  [BUGGY]  while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  end  <  length)&&(trailer  ==  0))  {  if(trailer  ==  0  ||  trailer  ==  '/')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
233	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(trailer  ==  0))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
234	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  2  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  *  2  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  *  2  +  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
235	[BUG]  [BUGGY]  trailer  =  buffer[end  -  start]  *  1  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  start]  *  1  +  1;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  start]  *  1  +  1;	  trailer    =    buffer[end    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
236	[BUG]  [BUGGY]  Trailer  trailer  =(end  -  1)?  buffer[end  -  1]  :  null;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =(end  -  1)?  buffer[end  -  1]  :  null;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =(end  -  1)?  buffer[end  -  1]  :  null;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
237	[BUG]  [BUGGY]  Trailer  trailer  =  this.trailer[end  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  trailer  =  this.trailer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  trailer  =  this.trailer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
238	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
239	[BUG]  [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
240	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  end;  i++)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    i++)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
241	[BUG]  [BUGGY]  trailer  =  trailer[end  0];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  0];	  trailer    =    buffer[end    0];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
242	[BUG]  [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(start  <  length)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(end    <    length)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
243	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
244	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '7')&&(end  <  length))  {  end--;  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '7')&&(end  <  length))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '7')&&(end  <  length))  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
245	[BUG]  [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Annotations.size()  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
246	[BUG]  [BUGGY]  while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '9')&&(end  <  length))  {  end--;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '9')&&(end  <  length))  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(trailer  ==  '0'  ||  trailer  ==  '9')&&(end  <  length))  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
247	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  /  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  /  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  /  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
248	[BUG]  [BUGGY]  trailer  =  trailer[end  -  1]  &  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  1]  &  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  1]  &  2;	  trailer    =    trailer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
249	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  <  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
250	[BUG]  [BUGGY]  if(end  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
251	[BUG]  [BUGGY]  if(end  <  =  0)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  =  0)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  <  =  0)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
252	[BUG]  [BUGGY]  if(end  <  length)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  <  length)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  <  length)  {  if(trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
253	[BUG]  [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  buffer[start]);  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[start]);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
254	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <  T>  trailer  =  trailer[end  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <  T>  trailer  =  trailer[end  -  1];	  Trailer    <    T>    trailer    =    buffer[end    -    2];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
255	[BUG]  [BUGGY]  if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  7)  {  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }	  if(length    >    0)    {    if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
256	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  *  4;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  *  4;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  *  4;	  trailer    =    buffer[end    -    1]    +    4;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
257	[BUG]  [BUGGY]  trailer  =  trailer[end  -  offset];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  offset];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  offset];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
258	[BUG]  [BUGGY]  trailer  =  trailer[end  -  start  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end  -  start  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end  -  start  1];	  trailer    =    trailer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
259	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  /  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  1]  /  2;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  1]  /  2;	  trailer    =    buffer[end    -    1]    +    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
260	[BUG]  [BUGGY]  trailer  =  buffer[end  -  offset  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  buffer[end  -  offset  +  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  buffer[end  -  offset  +  1];	  trailer    =    buffer[end    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	16	None	replace
261	[BUG]  [BUGGY]  trailer  =  trailer[end];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
262	[BUG]  [BUGGY]  trailer  =  trailer;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer;  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer;	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
263	[BUG]  [BUGGY]  trailer  =  trailer[start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[start];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
264	[BUG]  [BUGGY]  Trailer  <?>  trailer  =  buffer[start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  Trailer  <?>  trailer  =  buffer[start];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	Trailer  <?>  trailer  =  buffer[start];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
265	[BUG]  [BUGGY]  trailer  =  trailer[0];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[0];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[0];	  trailer    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
266	[BUG]  [BUGGY]  }  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
267	[BUG]  [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
268	[BUG]  [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  -1)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  -1)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  '.')  {  if(end  ==  -1)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
269	[BUG]  [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  '.')  {  if(end  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    end-1,    trailer));    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
270	[BUG]  [BUGGY]  trailer  =  trailer[offset  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[offset  -  1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[offset  -  1];	  trailer    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
271	[BUG]  [BUGGY]  trailer  =  trailer[start+1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[start+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[start+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
272	[BUG]  [BUGGY]  trailer  =  trailer[end+1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  trailer  =  trailer[end+1];  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	trailer  =  trailer[end+1];	  trailer    =    buffer[start+1];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
274	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
275	[BUG]  [BUGGY]  if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
276	[BUG]  [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
277	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  length  -  1;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
278	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  0)  {  for(int  i  =  start  +  length;  i  <  length;  ++i)  {  end--;  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    end--;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
279	[BUG]  [BUGGY]  }  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
280	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
281	[BUG]  [BUGGY]  }  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  0  ||  trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
282	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  >  0))  {  if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
283	[BUG]  [BUGGY]  while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
284	[BUG]  [BUGGY]  while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  <  =  length))  {  if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
285	[BUG]  [BUGGY]  }  else  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  }  else  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	}  else  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
286	[BUG]  [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  0)  {  for(int  i  =  start;  i  <  end;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
287	[BUG]  [BUGGY]  if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  <  =  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
288	[BUG]  [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(end  >  0)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
289	[BUG]  [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  length)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
290	[BUG]  [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	while((  start  <  end)&&(end  >  0))  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
291	[BUG]  [BUGGY]  if(length  >  7)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]        byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }        [BUGGY]  if(length  >  7)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }  [BUGGY]      if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	134	134	1	replace	if(length  >  7)  {  for(int  i  =  start;  i  <  length;  ++i)  {  trailer  =  buffer[i];  }	  if(length    >    0)    {    for(int    i    =    start;    i    <    length;    ++i)    {    trailer    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
