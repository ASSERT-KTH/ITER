bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  return  result;  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  return  result;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  1);  return  result;	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
2	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(length  <  <  3)+(result  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(length  <  <  3)+(result  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
3	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(currentByte  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
4	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  2);  return  result;  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  2);  return  result;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  2);  return  result;	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
5	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0')+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0')+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0')+  1;	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
6	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer.length);	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
7	[BUG]  [BUGGY]  end  =  trailer[start  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer[start  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer[start  -  1];	  end    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
8	[BUG]  [BUGGY]  end  =  buffer[length  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[length  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[length  -  1];	  end    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
9	[BUG]  [BUGGY]  end  =  buffer[start  -  1]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[start  -  1]  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[start  -  1]  +  1;	  end    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
10	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '-'));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
11	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '-'));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
12	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '-'));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
13	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '-'));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
14	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '-')+  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '-')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '-')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
15	[BUG]  [BUGGY]  end  -=  -1L;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  -1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  -1L;	  end    =    -1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
16	[BUG]  [BUGGY]  end  =  -1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1);	  end    =    -1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
17	[BUG]  [BUGGY]  end  =  -2;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -2;	  end    =    -1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
18	[BUG]  [BUGGY]  end  =  trailer.trim()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.trim()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.trim()  +  1;	  end    =    trailer.trim();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
19	[BUG]  [BUGGY]  end  =  trailer.trim()  -  1;  [CE]  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.trim()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.trim()  -  1;	  end    =    trailer.trim();    	non-compiled	[CE]  	58	None	replace
20	[BUG]  [BUGGY]  end  =  trailer.substring(0,  length);  [CE]  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.substring(0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.substring(0,  length);	  end    =    trailer.trim();    	non-compiled	[CE]  	58	None	replace
21	[BUG]  [BUGGY]  end  =  trailer.trim()  -  2;  [CE]  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.trim()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.trim()  -  2;	  end    =    trailer.trim();    	non-compiled	[CE]  	58	None	replace
22	[BUG]  [BUGGY]  end  =  trailer.next();  [CE]  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.next();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.next();	  end    =    trailer.trim();    	non-compiled	[CE]  	58	None	replace
23	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-')+  1);  [CE]  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  	68	None	replace
24	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-',  end));  [CE]  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-',  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '-',  end));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  	68	None	replace
25	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-',  trailer,  '-'));  [CE]  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-',  trailer,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-',  trailer,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  	68	None	replace
26	[BUG]  [BUGGY]  end  =  trailer.length()  /  BYTE_MASK;  [CE]  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  /  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  	40	None	replace
27	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  +  1;  [CE]  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  *  BYTE_MASK  +  1;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  	40	None	replace
28	[BUG]  [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [CE]  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  -  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  	40	None	replace
29	[BUG]  [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [CE]  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  +  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  	40	None	replace
30	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1));  [CE]  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  1));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  1));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
31	[BUG]  [BUGGY]  result  =(length  <  <  3)+(result  -  '0'));  [CE]  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(length  <  <  3)+(result  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(length  <  <  3)+(result  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
32	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length));  [CE]  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer.length));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer.length));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
33	[BUG]  [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [CE]  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(currentByte  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(currentByte  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
34	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0')+  1);  [CE]  [FE]                                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0')+  1);	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
35	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length));  [CE]  [FE]                                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0',  trailer.length));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  	23	None	replace
36	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0'));  [CE]  class,  interface,  or  enum  expected  [FE]                                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(length  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  3)+(length  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
37	[BUG]  [BUGGY]  trailer  =  buffer[end  -  2];  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  2];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  buffer[end  -  2];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
38	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  1;  [CE]  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  1]  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  buffer[end  -  1]  +  1;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  	22	None	replace
39	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[start  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  buffer[start  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
40	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  1]  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  buffer[end  -  1]  +  2;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
41	[BUG]  [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  -1;	  End    =    -1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
42	[BUG]  [BUGGY]  End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  -1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  -1;	  End    =    -1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
43	[BUG]  [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(trailer  ==  '0'  ||  trailer  ==  '7')?  -1  :  1;	  End    =    -1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
44	[BUG]  [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(trailer  ==  '0'  ||  trailer  ==  '9')?  -1  :  -1;	  End    =    -1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
45	[BUG]  [BUGGY]  End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(trailer  ==  '-'  ||  trailer  ==  '+')?  -1  :  1;	  End    =    -1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
46	[BUG]  [BUGGY]  end  =  buffer.length  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length  -  2;	  end    =    buffer.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
47	[BUG]  [BUGGY]  end  -=  buffer.length;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  buffer.length;	  end    =    buffer.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
48	[BUG]  [BUGGY]  end  =  buffer.length  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length  +  1;	  end    =    buffer.length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
49	[BUG]  [BUGGY]  start  =  trailer.length()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  -  1;	  start    =    trailer.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
50	[BUG]  [BUGGY]  start  =  trailer.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  +  1;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
51	[BUG]  [BUGGY]  start  =  trailer.length()  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  -  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  start  =  trailer.length()  *  2;  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  *  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]  start  =  trailer.length()  +  2;  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  +  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
54	[BUG]  [BUGGY]  start  =  trailer.length()  /  2;  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  /  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  /  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
55	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1],  trailer);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1],  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1],  trailer);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
56	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
57	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
58	[BUG]  [BUGGY]  End  -=  4;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  4;	  End    -=    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
59	[BUG]  [BUGGY]  End  -=  7;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  7;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  7;	  End    -=    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
60	[BUG]  [BUGGY]  End  -=  8;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  8;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  8;	  End    -=    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
61	[BUG]  [BUGGY]  End  -=  6;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  6;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  6;	  End    -=    2;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
62	[BUG]  [BUGGY]  End  =  trailer.length()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  -  1;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
63	[BUG]  [BUGGY]  End  =  trailer.length()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  +  1;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  End  =  trailer.length()  -  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  -  2;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  End  =  trailer.length()  *  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  *  2;	  End    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  End  =  trailer.length()  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  +  2;	  End    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  End  =  trailer.length()  /  2;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  /  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length()  /  2;	  End    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  end  =  trailer.length  /  1  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  end  =  buffer.length  -  1  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length  -  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
70	[BUG]  [BUGGY]  end  =  trailer.length  *  1  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  *  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
72	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?   "true "  : "false ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
73	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
74	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : "null ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
75	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(currentByte));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(currentByte));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
76	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  ' "'  : " ");  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  ' "'  : " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  ' "'  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
77	[BUG]  [BUGGY]  end  -=  trailer.length  -  1L;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  -  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  end  =  trailer.length  /  1L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  end  =  trailer.length  -  128;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  128;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  -  128;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/')+  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
81	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '/'));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '/'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '/'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
82	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  DEFAULT_ENCODING));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  DEFAULT_ENCODING));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  DEFAULT_ENCODING));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
83	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  end));  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  end));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
84	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '/'));  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '/'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '/'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
85	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer,  '/'));  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer,  '/'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer,  '/'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
86	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[Delete]	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
87	[BUG]  [BUGGY]  allowNonLocalSideEffects(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSideEffects(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSideEffects(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
88	[BUG]  [BUGGY]  allowNonLocalSide(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSide(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSide(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
89	[BUG]  [BUGGY]  allowNonLocalSideEffects(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSideEffects(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSideEffects(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
90	[BUG]  [BUGGY]  allowNonLocalSideEffects(trailer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSideEffects(trailer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSideEffects(trailer,  offset,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
91	[BUG]  [BUGGY]  allowNonLocalSide(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSide(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSide(trailer,  length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
92	[BUG]  [BUGGY]  allowNonLocalSide(trailer,  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSide(trailer,  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSide(trailer,  length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
93	[BUG]  [BUGGY]  end  -=  0L;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  0L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  0L;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
94	[BUG]  [BUGGY]  end  =  0L  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  0L  +  1;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
95	[BUG]  [BUGGY]  end  =  0l;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0l;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  0l;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
96	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2  +  1;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  end  =  trailer.length  /  3;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  3;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  end  =  trailer.length  /  2L;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2L;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
99	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  2;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2  *  2;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  end  =  trailer.length  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  1;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
101	[BUG]  [BUGGY]  End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
102	[BUG]  [BUGGY]  End  <  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
103	[BUG]  [BUGGY]  End  <?>  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  type  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <?>  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <?>  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
104	[BUG]  [BUGGY]  End  <  0  ||  end  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
105	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n')+  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    'n'));    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
106	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  'n'));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  'n'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  'n'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    'n'));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
107	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n',  end));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n',  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'n',  end));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    'n'));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
108	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'e'));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'e'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  'e'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    'n'));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
109	[BUG]  [BUGGY]  allowNumberOctal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNumberOctal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNumberOctal())  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
110	[BUG]  [BUGGY]  allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
111	[BUG]  [BUGGY]  allowNonLocalSide(trailer,  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSide(trailer,  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSide(trailer,  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
112	[BUG]  [BUGGY]  allowNonLocalSide(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSide(trailer)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSide(trailer)  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
113	[BUG]  [BUGGY]  allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ".equals(trailer));  }  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ".equals(trailer));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonEmpty(trailer)  {  throw  new  IllegalArgumentException( " ".equals(trailer));  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
114	[BUG]  [BUGGY]  end  =  trailer  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
115	[BUG]  [BUGGY]  end  =  length  -  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  length  -  2;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
116	[BUG]  [BUGGY]  end  =  start  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  start  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  start  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
117	[BUG]  [BUGGY]  end  =  length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  length  -  1  +  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
118	[BUG]  [BUGGY]  end  -=  trailer.length  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  +  1;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
119	[BUG]  [BUGGY]  end  -=  trailer.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  -  2;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
120	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  *  BYTE_MASK;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
121	[BUG]  [BUGGY]  end  -=  trailer.length  *  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  *  2;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
122	[BUG]  [BUGGY]  end  -=  trailer.length  -  3;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  -  3;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
123	[BUG]  [BUGGY]  end  -=  trailer.length  -  4;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  -  4;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
124	[BUG]  [BUGGY]  end  -=  trailer.length  -  1  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  -  1  +  1;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
125	[BUG]  [BUGGY]  end  -=  trailer.length  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length  /  1;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
126	[BUG]  [BUGGY]  result  =  trailer[start  -  1];  [CE]  illegal  start  of  type  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  trailer[start  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  trailer[start  -  1];	  result    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
127	[BUG]  [BUGGY]  result  =  buffer[length  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[length  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[length  -  1];	  result    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
128	[BUG]  [BUGGY]  result  =  trailer[end  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  trailer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  trailer[end  -  1];	  result    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
129	[BUG]  [BUGGY]  result  =  buffer[start  -  1]  +  length;  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[start  -  1]  +  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[start  -  1]  +  length;	  result    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
130	[BUG]  [BUGGY]  result  =  buffer[start  -  1]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[start  -  1]  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[start  -  1]  +  1;	  result    =    buffer[start    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
131	[BUG]  [BUGGY]  end  =  buffer.length  -  3;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length  -  3;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
132	[BUG]  [BUGGY]  end  =  buffer.length  -  1L;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length  -  1L;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
133	[BUG]  [BUGGY]  end  =  trailer.length()  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  /  2;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
134	[BUG]  [BUGGY]  end  =  trailer.length()  *  2  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  *  2  +  1;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
135	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '0'));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  buffer,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
136	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '0'));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  buffer,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
137	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '0'));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(trailer,  start,  length,  buffer,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
138	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '0'));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  container,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
139	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0')+  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
140	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  K,  V>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
141	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
142	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1],  trailer);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
143	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]  +  1);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
144	[BUG]  [BUGGY]  end  =  trailer.length  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  +  2;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
145	[BUG]  [BUGGY]  end  =  trailer.length  +  3;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  +  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  +  3;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
146	[BUG]  [BUGGY]  end  =  trailer.length  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  *  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
147	[BUG]  [BUGGY]  end  -=  length  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  length  -  1;	  end    -=    length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
148	[BUG]  [BUGGY]  end  -=  length  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  length  +  1;	  end    -=    length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
149	[BUG]  [BUGGY]  end  -=  length  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  length  -  2;	  end    -=    length;    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
150	[BUG]  [BUGGY]  end  -=  start;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  start;	  end    -=    length;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
151	[BUG]  [BUGGY]  end  =  Trailer.length();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  Trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  Trailer.length();	  end    =    trailer.length()    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
152	[BUG]  [BUGGY]  >>  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >>  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>>  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
153	[BUG]  [BUGGY]  ==  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ==  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	==  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
154	[BUG]  [BUGGY]  >=  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >=  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>=  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
155	[BUG]  [BUGGY]  !=  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  !=  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	!=  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
156	[BUG]  [BUGGY]  [BUGGY]  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [BUGGY]  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[BUGGY]  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
157	[BUG]  [BUGGY]  [CONTEXT]  [Delete]  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [CONTEXT]  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[CONTEXT]  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
158	[BUG]  [BUGGY]  End  -=  5;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  5;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  5;	  End    -=    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
159	[BUG]  [BUGGY]  end--  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end--  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end--  +  1;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
160	[BUG]  [BUGGY]  end  -  1,  length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  length  -  1;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
161	[BUG]  [BUGGY]  end  -  1,  length  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  length  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  length  +  1;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
162	[BUG]  [BUGGY]  End  =  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  1;	  End    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
163	[BUG]  [BUGGY]  End  =  0L;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  0L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  0L;	  End    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
164	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsBoolean( "UTF-8 ");  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsBoolean( "UTF-8 ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsBoolean( "UTF-8 ");	  End    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
165	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer);	  End    =    0;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
166	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  end);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsByte(trailer,  end);	  End    =    0;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
167	[BUG]  [BUGGY]  result  =  buffer[end  -  2];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  2];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  2];	  result    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
168	[BUG]  [BUGGY]  result  =  buffer[end  -  1]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  1]  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  1]  +  1;	  result    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
169	[BUG]  [BUGGY]  result  =  buffer[end  -  1]  +  trailer;  [CE]  illegal  start  of  type  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  1]  +  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  1]  +  trailer;	  result    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
170	[BUG]  [BUGGY]  result  =  buffer[end  -  1]  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  1]  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  1]  +  2;	  result    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
171	[BUG]  [BUGGY]  end  =  container.length()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  container.length()  -  1;	  end    =    container.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
172	[BUG]  [BUGGY]  end  =  container.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  container.length()  +  1;	  end    =    container.length();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
173	[BUG]  [BUGGY]  end  -=  container.length();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  container.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  container.length();	  end    =    container.length();    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
174	[BUG]  [BUGGY]  result  =(result  -  3)+(length  -  '0');  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  3)+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
175	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
176	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  trailer.length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0',  trailer.length);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
177	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  1);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
178	[BUG]  [BUGGY]  end  =  trailer[end  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer[end  -  1];	  end    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
179	[BUG]  [BUGGY]  end  =  buffer[end  -  2];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  2];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  2];	  end    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
180	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  1;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
181	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  trailer;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  trailer;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
182	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");	  End    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
183	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
184	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  throw  new  IllegalArgumentException( " ");  }	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
185	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
186	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  '0')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  '0')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  '0')  {  throw  new  IllegalArgumentException( " ");	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
187	[BUG]  [BUGGY]  End  -  1  ||  trailer  ==  '+')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  ||  trailer  ==  '+')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  ||  trailer  ==  '+')  {  throw  new  IllegalArgumentException( " ");	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
188	[BUG]  [BUGGY]  end  =(end  <  <  3)?  1  :  end;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  1  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  1  :  end;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
189	[BUG]  [BUGGY]  end  =(end  <  <  3)?  0  :  trailer;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  0  :  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  0  :  trailer;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
190	[BUG]  [BUGGY]  end  =(end  <  <  3)?  0  :  trailer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  0  :  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  0  :  trailer.length;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
191	[BUG]  [BUGGY]  end  =(end  <  <  4)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  4)?  0  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  4)?  0  :  end;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
192	[BUG]  [BUGGY]  end  =(end  <  <  3)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  0  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  0  :  1;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
193	[BUG]  [BUGGY]  end  =(end  <  <  3)?  trailer  :  end;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  trailer  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  trailer  :  end;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
194	[BUG]  [BUGGY]  end  =  buffer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length()  -  1;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
195	[BUG]  [BUGGY]  end  =  buffer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length()  +  1;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
196	[BUG]  [BUGGY]  end  =  buffer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length()  -  2;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
197	[BUG]  [BUGGY]  end  -=  buffer.length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  buffer.length();	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
198	[BUG]  [BUGGY]  end  =  buffer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.length()  *  2;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
199	[BUG]  [BUGGY]  End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
200	[BUG]  [BUGGY]  End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
201	[BUG]  [BUGGY]  End  <  0  ||  end  >  7)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  7)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  7)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
202	[BUG]  [BUGGY]  End  <  0  ||  end  >  10)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  10)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  10)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
203	[BUG]  [BUGGY]  End  <  =  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  =  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  =  0  ||  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
204	[BUG]  [BUGGY]  end  =  trailer.length()  /  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  /  1;	  end    =    trailer.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
205	[BUG]  [BUGGY]  end  =  -start  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -start  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -start  +  1;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
206	[BUG]  [BUGGY]  end  =  -length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -length;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
207	[BUG]  [BUGGY]  end  =  -trailer;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -trailer;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
208	[BUG]  [BUGGY]  end  =  -end;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -end;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
209	[BUG]  [BUGGY]  end  -=  -start;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  -start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  -start;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
210	[BUG]  [BUGGY]  end  =  -l;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -l;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -l;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
211	[BUG]  [BUGGY]  End  -=  '0'  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  +  1;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
212	[BUG]  [BUGGY]  End  -=  '0'  +  trailer;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  +  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  +  trailer;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
213	[BUG]  [BUGGY]  End  -=  '0'  +  trailer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  +  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  +  trailer.length;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
214	[BUG]  [BUGGY]  End  -=  '0'  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  -  1;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
215	[BUG]  [BUGGY]  End  -=  '0'  ||  trailer  ==  '7';  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  trailer  ==  '7';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  trailer  ==  '7';	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
216	[BUG]  [BUGGY]  End  -=  '0'  ||  trailer  ==  '9';  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  trailer  ==  '9';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  trailer  ==  '9';	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
217	[BUG]  [BUGGY]  end  -=  trailer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  +  1;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
218	[BUG]  [BUGGY]  end  -=  trailer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  -  1;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
219	[BUG]  [BUGGY]  end  -=  trailer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  *  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
220	[BUG]  [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  *  BYTE_MASK;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
221	[BUG]  [BUGGY]  end  -=  trailer.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  +  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
222	[BUG]  [BUGGY]  end  -=  trailer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.length()  -  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
223	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0')+  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0')+  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0')+  1);	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
224	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  end));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  end));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
225	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  0));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  0));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
226	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0',  trailer));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0',  trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0',  trailer));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
227	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  trailer;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  trailer;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
228	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  trailer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  trailer.length;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
229	[BUG]  [BUGGY]  end  =(end  <  <  1)?  1  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  1  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  1  :  end;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
230	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  1;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
231	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  buffer[end  -  1];	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
232	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  length;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
233	[BUG]  [BUGGY]  End  =  trailer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  2;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
234	[BUG]  [BUGGY]  End  =  trailer.length  -  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  3;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
235	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  1  +  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
236	[BUG]  [BUGGY]  End  =  trailer.length  -  4;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  4;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
237	[BUG]  [BUGGY]  End  =  trailer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  1L;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
238	[BUG]  [BUGGY]  End  =  trailer.length  /  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  /  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  /  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
239	[BUG]  [BUGGY]  result  =(result  -  3)+(byte  -  '0');  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  3)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
240	[BUG]  [BUGGY]  result  =(result  <  <  1)+(byte  -  '0');  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  1)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  1)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
241	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(end  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(end  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
242	[BUG]  [BUGGY]  result  =(result  <  <  3)+(byte)-  '0';  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(byte)-  '0';  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(byte)-  '0';	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
243	[BUG]  [BUGGY]  result  =(result  <  <  3)+(byte)0;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(byte)0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(byte)0;	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
244	[BUG]  [BUGGY]  end  =  trailer.length  -  4;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  -  4;	  end    =    trailer.length    -    3;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
245	[BUG]  [BUGGY]  End  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  2;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
246	[BUG]  [BUGGY]  End  -  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  3;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
247	[BUG]  [BUGGY]  End  -  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1L;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1L;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
248	[BUG]  [BUGGY]  End  -  1l;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1l;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1l;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
249	[BUG]  [BUGGY]  End  -  1  +;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1  +;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  1  +;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
250	[BUG]  [BUGGY]  End  -  4;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -  4;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
251	[BUG]  [BUGGY]  end  =(end  <  <  3)?  0  :  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  0  :  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  0  :  buffer[end  -  1];	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
252	[BUG]  [BUGGY]  end  =(end  <  <  3)?  0  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  3)?  0  :  buffer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  3)?  0  :  buffer.length;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
253	[BUG]  [BUGGY]  end  =  trailer.length  -  1L  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  1L  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  -  1L  +  1;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
254	[BUG]  [BUGGY]  end  =  buffer[start  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[start  -  1]  +  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[start  -  1]  +  length;	  end    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
255	[BUG]  [BUGGY]  End  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  buffer[end  -  1];	  end    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
256	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0'));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
257	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  trailer,  '0'));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  trailer,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  trailer,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
258	[BUG]  [BUGGY]  End  =(end  >  0)?  -1  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  >  0)?  -1  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  >  0)?  -1  :  end;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
259	[BUG]  [BUGGY]  End  =(end  <  <  1)?  -1  :  end;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  <  <  1)?  -1  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  <  <  1)?  -1  :  end;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
260	[BUG]  [BUGGY]  End  =(end  <  <  1)?  -1  :  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  <  <  1)?  -1  :  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  <  <  1)?  -1  :  1;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
261	[BUG]  [BUGGY]  End  =(end  <  <  1)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  <  <  1)?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  <  <  1)?  -1  :  -1;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
262	[BUG]  [BUGGY]  End  =(end  >  0)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  >  0)?  -1  :  -1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  >  0)?  -1  :  -1;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
263	[BUG]  [BUGGY]  End  -=  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  length;	  End    -=    0;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
264	[BUG]  [BUGGY]  end  =  -0;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -0;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -0;	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
265	[BUG]  [BUGGY]  End  -=  2  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  2  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  2  +  1;	  End    -=    2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
266	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0'));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(trailer  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
267	[BUG]  [BUGGY]  result  =(result  <  <  3)+(start  -  '0'));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(start  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(start  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
268	[BUG]  [BUGGY]  result  =(result  -  offset)+(length  -  '0'));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  offset)+(length  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  offset)+(length  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
269	[BUG]  [BUGGY]  end  =  trailer;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer;	  end    =    2;    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
270	[BUG]  [BUGGY]  end  -  1,  trailer  =  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer  =  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer  =  BYTE_MASK;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
271	[BUG]  [BUGGY]  end  -  1,  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer  =  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer  =  buffer[end  -  1];	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
272	[BUG]  [BUGGY]  end  -  1,  trailer  =  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer  =  BYTE_MASK  +  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer  =  BYTE_MASK  +  1;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
273	[BUG]  [BUGGY]  end  -  1,  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer  =  buffer[start  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer  =  buffer[start  -  1];	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
274	[BUG]  [BUGGY]  end  -  1,  trailer  =  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer  =  buffer[start  +  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer  =  buffer[start  +  1];	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
275	[BUG]  [BUGGY]  end  =  trailer.length  /  2  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2  *  BYTE_MASK;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
276	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  start;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2  +  start;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
277	[BUG]  [BUGGY]  end  =  trailer.length  /  2  +  4;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2  +  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length  /  2  +  4;	  end    =    trailer.length    /    2;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
278	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '0'));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
279	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '0'));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '0'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
280	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  return  result;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  return  result;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(trailer  -  '0');  return  result;	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
281	[BUG]  [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(trailer  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
282	[BUG]  [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  '0')+(length  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  '0')+(length  -  '0');	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
283	[BUG]  [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  return  result;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  return  result;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(start  -  '0');  return  result;	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
284	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]  +  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
285	[BUG]  [BUGGY]  End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
286	[BUG]  [BUGGY]  End  <  =  0?  end  -  1  :  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  =  0?  end  -  1  :  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  =  0?  end  -  1  :  end  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
287	[BUG]  [BUGGY]  End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
288	[BUG]  [BUGGY]  result  =  buffer[end  -  1]  +  trailer.length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  1]  +  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  1]  +  trailer.length;	  result    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
290	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ". ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( ". ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
291	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "+trailer);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " "+trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( " "+trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
292	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( "Byte  ' "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
293	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  length;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
294	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  2;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
295	[BUG]  [BUGGY]  End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  0  ||  end  >  BYTE_MASK)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
296	[BUG]  [BUGGY]  End  =  JsonEncoding.getInstance();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonEncoding.getInstance();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonEncoding.getInstance();	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
297	[BUG]  [BUGGY]  End  =(end  >  0)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  >  0)?  0  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  >  0)?  0  :  end;	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
298	[BUG]  [BUGGY]  End  =(end  <  <  1)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  <  <  1)?  0  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  <  <  1)?  0  :  end;	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
299	[BUG]  [BUGGY]  end  -=  trailer.trim();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.trim();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  trailer.trim();	  end    =    trailer.trim();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
300	[BUG]  [BUGGY]  end  =  buffer.trim();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.trim();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer.trim();	  end    =    trailer.trim();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
301	[BUG]  [BUGGY]  result  =(result  -  3)+(trailer  -  '0');  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  -  3)+(trailer  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  -  3)+(trailer  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
302	[BUG]  [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(start  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(start  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
303	[BUG]  [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0');  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(TRUE  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(TRUE  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
304	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  *  BYTE_MASK  -  1;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
305	[BUG]  [BUGGY]  end  =  trailer.length()  *  4;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  4;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  *  4;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
306	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  buffer[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end-1,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
307	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end1,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end1,  buffer[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end1,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
308	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  buffer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  buffer.length;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
309	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  BYTE_MASK;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
310	[BUG]  [BUGGY]  end  =(end  <  <  1)?  0  :  start;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  1)?  0  :  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  1)?  0  :  start;	  end    =(end    <    <    1)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
311	[BUG]  [BUGGY]  End  =  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  buffer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  buffer.length  -  1;	  end    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
312	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-'));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
313	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  '-'));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  start,  length,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
314	[BUG]  [BUGGY]  result  =  buffer[start  -  1]  +  trailer;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[start  -  1]  +  trailer;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[start  -  1]  +  trailer;	  result    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
315	[BUG]  [BUGGY]  result  =  buffer[start  -  1]  +  2;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[start  -  1]  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[start  -  1]  +  2;	  result    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
316	[BUG]  [BUGGY]  !=  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  !=  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	!=	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
317	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '-'));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
318	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '-'));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  end,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
319	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  0,  '-'));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  0,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  0,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
320	[BUG]  [BUGGY]  start  =  buffer.length();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  buffer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  buffer.length();	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
321	[BUG]  [BUGGY]  start  =  this.trailer.length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  this.trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  this.trailer.length();	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
322	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  start;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1  +  start;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length  -  1  +  start;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
323	[BUG]  [BUGGY]  end  =  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  3;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  3;	  end    =    1;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
324	[BUG]  [BUGGY]  End  -=  '0'  +  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  +  2;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  +  2;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
325	[BUG]  [BUGGY]  End  -=  '0'  +  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  +  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  +  length;	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
326	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
327	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  '.')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
328	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  0)  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  0)  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  0)  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
329	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  '-')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  '-')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  '-')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
330	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  'n')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
331	[BUG]  [BUGGY]  Trailer  }  else  if(trailer  ==  '[')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  }  else  if(trailer  ==  '[')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  }  else  if(trailer  ==  '[')  {  trailer  =  buffer[end  -  1];  }  else  {  throw  new  IllegalArgumentException( " ");  }	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
332	[BUG]  [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNegatives(false)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
333	[BUG]  [BUGGY]  allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSideEffects(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
334	[BUG]  [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonEmpty(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
335	[BUG]  [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNegatives(true)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
336	[BUG]  [BUGGY]  allowNonLocalSideEffects( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNonLocalSideEffects( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNonLocalSideEffects( " "))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
337	[BUG]  [BUGGY]  allowNegate()  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegate()  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	allowNegate()  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
338	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '/'));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '/'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length  -  1,  '/'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
339	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  '/',  trailer));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
340	[BUG]  [BUGGY]  end  =  -start  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -start  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -start  -  1;	  end    =    -start;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
341	[BUG]  [BUGGY]  end  =  0L  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  0L  *  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
342	[BUG]  [BUGGY]  end  =  0L  |  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  |  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  0L  |  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
343	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '-'));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
344	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '9'));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '9'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '9'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
345	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  'e'));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  'e'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  'e'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
346	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '7'));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '7'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '0',  '7'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
347	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  offset,  length,  '-'));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  offset,  length,  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  offset,  length,  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
348	[BUG]  [BUGGY]  start  =  trailer.length()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.length()  *  BYTE_MASK;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
349	[BUG]  [BUGGY]  start  =  trailer.getLength();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.getLength();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	start  =  trailer.getLength();	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
350	[BUG]  [BUGGY]  >=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
351	[BUG]  [BUGGY]  >>  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >>  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>>  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
352	[BUG]  [BUGGY]  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
353	[BUG]  [BUGGY]  [Delete]  else  if(end  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [Delete]  else  if(end  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[Delete]  else  if(end  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
354	[BUG]  [BUGGY]  >=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>=  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
355	[BUG]  [BUGGY]  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	[Delete]  else  if(end  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
356	[BUG]  [BUGGY]  End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");  }	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
357	[BUG]  [BUGGY]  End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  end  >  '7')  {  throw  new  IllegalArgumentException( " ");	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
358	[BUG]  [BUGGY]  End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");  }	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
359	[BUG]  [BUGGY]  End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  '0'  ||  trailer  >  '7')  {  throw  new  IllegalArgumentException( " ");	  End    -=    '0';    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
360	[BUG]  [BUGGY]  end  =(end  <  <  6)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  6)?  0  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  6)?  0  :  end;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
361	[BUG]  [BUGGY]  end  =(end  <  <  2)?  0  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  <  <  2)?  0  :  end;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =(end  <  <  2)?  0  :  end;	  end    =(end    <    <    3)?    0    :    end;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
362	[BUG]  [BUGGY]  remainder(trailer.length  -  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(trailer.length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(trailer.length  -  1);	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
363	[BUG]  [BUGGY]  remainder(result.length  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(result.length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(result.length  -  1);	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
364	[BUG]  [BUGGY]  remainder(result.length  -  1,  start,  length);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(result.length  -  1,  start,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(result.length  -  1,  start,  length);	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
365	[BUG]  [BUGGY]  remainder(result);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(result);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(result);	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
366	[BUG]  [BUGGY]  remainder(result.length  -  1,  start,  end));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(result.length  -  1,  start,  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(result.length  -  1,  start,  end));	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
367	[BUG]  [BUGGY]  remainder(result.length  -  1,  start,  end);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  remainder(result.length  -  1,  start,  end);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	remainder(result.length  -  1,  start,  end);	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
368	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]).returnZero();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]).returnZero();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]).returnZero();	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
369	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1])+  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1])+  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1])+  1;	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
370	[BUG]  [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
371	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerEncoding.UTF8;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  TrailerEncoding.UTF8;	  end    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
372	[BUG]  [BUGGY]  End  =  trailer.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  trailer.length;	  end    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
373	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  trailer.length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  trailer.length;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
374	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  *  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  *  BYTE_MASK;	  end    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
375	[BUG]  [BUGGY]  end  =  buffer[end  -  1]  +  trailer.toByteArray();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1]  +  trailer.toByteArray();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  buffer[end  -  1]  +  trailer.toByteArray();	  end    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
376	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0',  '-'));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0',  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  start,  length,  trailer,  '0',  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    start,    length,    trailer,    '0'));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
377	[BUG]  [BUGGY]  end  -=  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length  -  1;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -=  buffer.length  -  1;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
378	[BUG]  [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  N,  V>  trailer  =  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  N,  V>  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
379	[BUG]  [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  K,  V>  trailer  =  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  K,  V>  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
380	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
381	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0'  +  trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0'  +  trailer);	  result    =(result    <    <    3)+(length    -    '0');    return    result;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
382	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsISOControl(trailer);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsISOControl(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsISOControl(trailer);	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
383	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsString(result);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsString(result);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsString(result);	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
384	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsObject(trailer);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().encodeAsObject(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().encodeAsObject(trailer);	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
385	[BUG]  [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsString(trailer);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  JsonStringEncoder.getInstance().quoteAsString(trailer);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =  JsonStringEncoder.getInstance().quoteAsString(trailer);	  End    =    0;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
386	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '+'));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '+'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '+'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '-'));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
387	[BUG]  [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1)  {  throw  new  IllegalArgumentException( " ");  }	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
388	[BUG]  [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1)  {  throw  new  IllegalArgumentException( " ");	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
389	[BUG]  [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
390	[BUG]  [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Byte  can  not  convert  '0'  to  '1' ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Byte  can  not  convert  '0'  to  '1' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1)  {  throw  new  IllegalArgumentException( "Byte  can  not  convert  '0'  to  '1' ");	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
391	[BUG]  [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  -1)  {  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass().getName());  }	  end    =    -1L;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
392	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  2);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  2);	  result    =(result    <    <    3)+(length    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
393	[BUG]  [BUGGY]  end  =  container[start  -  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container[start  -  1];  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  container[start  -  1];	  end    =    buffer[start    -    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
394	[BUG]  [BUGGY]  result  =(result  <  <  3)+(end  -  '0'));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(end  -  '0'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(end  -  '0'));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
395	[BUG]  [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  end));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  3)+(length  -  '0',  end));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  3)+(length  -  '0',  end));	  result    =(result    <    <    3)+(length    -    '0'));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
396	[BUG]  [BUGGY]  End  =(end  -  1)*  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =(end  -  1)*  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  =(end  -  1)*  BYTE_MASK;	  End    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
397	[BUG]  [BUGGY]  end  =  trailer.length()  &  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  &  BYTE_MASK;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.length()  &  BYTE_MASK;	  end    =    container.length();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
398	[BUG]  [BUGGY]  end  =  trailer.size();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.size();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.size();	  end    =    trailer.length()    +    2;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
399	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
400	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass());  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getClass());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
401	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( "Byte  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
402	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getName());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getName());  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer.getName());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
403	[BUG]  [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	trailer  =  exceptionMessage(buffer,  offset,  length,  end[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
404	[BUG]  [BUGGY]  Trailer  <  N,>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  N,>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Trailer  <  N,>  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	  trailer    =    exceptionMessage(buffer,    offset,    length,    buffer[start    -    1]);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
405	[BUG]  [BUGGY]  End  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  <  =  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(end    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
406	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '-'));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '-'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '-'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
407	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '+'));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '+'));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  '+'));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
408	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  JsonEncoding.UTF8));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  JsonEncoding.UTF8));  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,  offset,  length,  trailer,  '/',  JsonEncoding.UTF8));	  Thread.currentThread().getContextClassLoader().report(JSError.make(buffer,    offset,    length,    trailer,    '/'));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
409	[BUG]  [BUGGY]  End  -=  trailer.length();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	End  -=  trailer.length();	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
410	[BUG]  [BUGGY]  end  =  trailer.subtract(offset,  length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.subtract(offset,  length  -  1);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.subtract(offset,  length  -  1);	  end    =    trailer.trim();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
411	[BUG]  [BUGGY]  end  =  trailer.subtract(offset,  length  -  start);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.subtract(offset,  length  -  start);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.subtract(offset,  length  -  start);	  end    =    trailer.trim();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
412	[BUG]  [BUGGY]  end  =  trailer.subtract(offset,  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.subtract(offset,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  =  trailer.subtract(offset,  length);	  end    =    trailer.trim();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
413	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidArgumentException( " ");	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
414	[BUG]  [BUGGY]  aughtInvalidByte( "msg.js.internal.length ",  trailer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidByte( "msg.js.internal.length ",  trailer,  0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidByte( "msg.js.internal.length ",  trailer,  0,  length);	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
415	[BUG]  [BUGGY]  aughtInvalidByte( "msg.js.internal.length ",  trailer,  0);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidByte( "msg.js.internal.length ",  trailer,  0);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidByte( "msg.js.internal.length ",  trailer,  0);	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
416	[BUG]  [BUGGY]  aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0,  length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0,  length);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0,  length);	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
417	[BUG]  [BUGGY]  aughtInvalidByte( "msg.js.invalid.length ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidByte( "msg.js.invalid.length ");  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidByte( "msg.js.invalid.length ");	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
418	[BUG]  [BUGGY]  aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0);  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	aughtInvalidByte( "msg.js.internal.entities ",  trailer,  0);	  if(length    >    7)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
419	[BUG]  [BUGGY]  {  [Delete]  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  {  [Delete]  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	{  [Delete]	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
420	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >>  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	>>	  if(end    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
421	[BUG]  [BUGGY]  result  =  buffer[end  -  1]  +  trailer.toByteArray();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  buffer[end  -  1]  +  trailer.toByteArray();  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =  buffer[end  -  1]  +  trailer.toByteArray();	  result    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
422	[BUG]  [BUGGY]  end  -  1,  trailer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  trailer.length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  trailer.length;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
423	[BUG]  [BUGGY]  end  -  1,  length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1,  length;  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	end  -  1,  length;	  end    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
424	[BUG]  [BUGGY]  result  =(result  <  <  4)+(byte  -  '0');  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =(result  <  <  4)+(byte  -  '0');  [BUGGY]      }  for  (  ;start  <  end;  start++)  {  final  byte  currentByte  =  buffer[start];  if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.7071067811865475	136	136	1	replace	result  =(result  <  <  4)+(byte  -  '0');	  result    =(result    <    <    3)+(byte    -    '0');    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
