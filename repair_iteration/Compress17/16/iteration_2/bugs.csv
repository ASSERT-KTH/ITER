bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  &  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[start-1]  &  BYTE_MASK;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[start-1]  &  BYTE_MASK;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  &  BYTE_MASK  +  1;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  trailer  =  buffer[start-1]  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[start-1]  +  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[start-1]  +  1;	  trailer    =    buffer[end-1]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  -  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  -  1;	  trailer    =    buffer[end-1]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[start  -  1];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  byte  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[end  -  1];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[start  +  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[start  +  1];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  byte  trailer  =  buffer[start];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[start];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[start];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  int  end  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  int  end  =  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	int  end  =  buffer[start  -  1];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset++];  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[offset++];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[offset++];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  byte  trailer  =  buffer[offset];  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[offset];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[offset];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  buffer[start  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[start  -  1]  :  buffer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  null;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  block[end  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  block[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  block[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[start  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =(trailer  ==  0)?  buffer[end  -  1]  :  buffer[start  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  trailer  =  buffer[offset-1];  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[offset-1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[offset-1];	  trailer    =    buffer[start-1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  trailer  =  buffer[length-1];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[length-1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[length-1];	  trailer    =    buffer[start-1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  byte  trailer  =  buffer[start  -  start];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  buffer[start  -  start];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  buffer[start  -  start];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  int  end  =  buffer.length  -  start;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  int  end  =  buffer.length  -  start;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	int  end  =  buffer.length  -  start;	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  +  BYTE_MASK;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  +  BYTE_MASK;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  +  0;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  +  0;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  +  0;	  trailer    =    buffer[end-1]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  start];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  buffer[end  -  start];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  buffer[end  -  start];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  Trailer  trailer  =  this.buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  this.buffer[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  this.buffer[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  buffer[end  -  1]  +  start;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  buffer[end  -  1]  +  start;	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  Trailer  trailer  =  start[end  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  start[end  -  1];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  start[end  -  1];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  2];  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  Trailer  trailer  =  buffer[end  -  2];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	Trailer  trailer  =  buffer[end  -  2];	  Trailer    trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  &  1;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  &  1;	  trailer    =    buffer[end-1]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  trailer  =  buffer[end-1]  &  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  trailer  =  buffer[end-1]  &  FALLBACK_ENCODING;  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	trailer  =  buffer[end-1]  &  FALLBACK_ENCODING;	  trailer    =    buffer[end-1]    &    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  byte  trailer  =  getCurrentToken();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  byte  trailer  =  getCurrentToken();  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	byte  trailer  =  getCurrentToken();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  int  end  =  buffer[start  -  start];  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    while  (start  <  end){  if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;    [BUGGY]  int  end  =  buffer[start  -  start];  [BUGGY]    if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	126	126	1	replace	int  end  =  buffer[start  -  start];	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
