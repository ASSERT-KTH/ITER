bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
2	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
3	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
4	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
5	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  2;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
6	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  3;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  3;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  3;	  final    byte    currentByte    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
7	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  4;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  4;	  final    byte    currentByte    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
8	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  2];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  2];	  final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  *  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  *  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1]  *  2;	  final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[end  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[end  +  1];	  final    byte    currentByte    =    buffer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
12	[BUG]  [BUGGY]  final  byte  currentByte  =  this.currentByte;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  this.currentByte;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.currentByte;	  final    byte    currentByte    =    buffer;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
13	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  start-1];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  start-1];	  final    byte    currentByte    =    buffer[start    +    start-1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
14	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  length-1];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  length-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  length-1];	  final    byte    currentByte    =    buffer[start    +    start-1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
15	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  end-1];  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  end-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  end-1];	  final    byte    currentByte    =    buffer[start    +    start-1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
16	[BUG]  [BUGGY]  int  currentByte  =  trailer[start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  trailer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  trailer[start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
17	[BUG]  [BUGGY]  int  currentByte  =  trailer.length;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  trailer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  trailer.length;	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
18	[BUG]  [BUGGY]  long  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  buffer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  buffer[start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
19	[BUG]  [BUGGY]  int  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[start  -  start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
20	[BUG]  [BUGGY]  int  currentByte  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  buffer[start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[start  +  1];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
21	[BUG]  [BUGGY]  int  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  buffer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[start  -  1];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
22	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[end];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  buffer[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[end];	  static    final    byte    currentByte    =    buffer[end];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  end];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  end];	  final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  length];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  length];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  length];	  final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  start  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  start  +  1];	  final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
27	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  +  start];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  +  start];	  final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  long  currentByte  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  trailer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  trailer[start  -  1];	  long    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	74	None	replace
29	[BUG]  [BUGGY]  short  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  short  currentByte  =  buffer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	short  currentByte  =  buffer[start  -  1];	  long    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	74	None	replace
30	[BUG]  [BUGGY]  byte  currentByte  =  trailer[end];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[end];	  byte    currentByte    =    buffer[end];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
31	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
32	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  1;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
33	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  1;  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
34	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  2;  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  2;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
35	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  1;  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
36	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  1;  [CE]  <identifier>  expected  [FE]                                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
37	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start  +  1];	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
38	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start  +  1);	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
39	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(end];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(end];	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
40	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start];  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start];	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
41	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  start];  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start  +  start];	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
42	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start++);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start++);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start++);	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
43	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start  +  1];	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
44	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end  -  start];	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
45	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
46	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start]  +  1;	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
47	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[end  -  1];	  final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  10;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  10;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  10;	  final    byte    currentByte    =    trailer.length    -    10;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
49	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  5;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  5;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  5;	  final    byte    currentByte    =    trailer.length    -    10;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
50	[BUG]  [BUGGY]  final  byte  currentByte  =  start  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  start  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start  +  1;	  final    byte    currentByte    =    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
51	[BUG]  [BUGGY]  static  final  byte  currentByte  =  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  start;	  final    byte    currentByte    =    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
52	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  end];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  end];	  final    byte    currentByte    =    buffer[start    +    end];    	non-compiled	[CE]  <identifier>  expected	28	None	replace
53	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  start  +  1];	  final    byte    currentByte    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
54	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  end];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  end];	  final    byte    currentByte    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
55	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[end  -  start];	  final    byte    currentByte    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
56	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  end];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  end];	  final    byte    currentByte    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
57	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start  +  1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start  +  1];	  byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start  -  start];	  byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
59	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start]  +  1;	  byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
60	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start]  +  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start]  +  start;	  byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
61	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte,  trailer);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte,  trailer);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte,  trailer);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
62	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  this.currentByte);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  this.currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  this.currentByte);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
63	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
64	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  this.currentByte);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  this.currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  this.currentByte);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
65	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  this.currentByte);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  this.currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  this.currentByte);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
66	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer.length;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer.length;	  static    final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
67	[BUG]  [BUGGY]  static  final  byte  currentByte  =  end;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  end;	  static    final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
68	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer;	  static    final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  +  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  +  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  +  1]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
70	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end  +  1];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
71	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  +  2];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  +  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  +  2];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
72	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[1];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[1];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
73	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  '0';  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
74	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0');  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0');  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  '0');	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
75	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  '0';  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  '0';  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  '0')+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  7)+  '0';  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  7)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  7)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
78	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  '0';  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  0)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
79	[BUG]  [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
80	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
81	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
82	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
83	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  0);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  0);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
84	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  start  +  1];	  static    final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
85	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  start  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  start  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  start  +  1;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
86	[BUG]  [BUGGY]  final  byte  currentByte  =  start  -  trailer.length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  start  -  trailer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start  -  trailer.length;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
87	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  start;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  start;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
88	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  start  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  start  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  start  +  2;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
89	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer.length  -  start;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer.length  -  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer.length  -  start;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
90	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray()  +  1;	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
91	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  +  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray()  +  start;	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
92	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray(start);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.toByteArray(start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray(start);	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
93	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.toByteArray()  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray()  *  BYTE_MASK;	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
94	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.toByteArray();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.toByteArray();	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
95	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByteArray();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByteArray();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByteArray();	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
96	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer.length  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer.length  -  1;	  final    byte    currentByte    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
97	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start  -  1];	  byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
98	[BUG]  [BUGGY]  byte  currentByte  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[end  -  1];	  byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
100	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
101	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer.length);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
102	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  start  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  start  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  start  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
103	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  trailer);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
104	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  +  1);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
105	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end++];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[end++];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end++];	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
106	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  +  1;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
108	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  0xffff;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  0xffff;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  &  0xffff;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  length;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  +  length;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  0xff;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  0xff;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  &  0xff;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  byte  currentByte  =  buffer[end  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[end  +  1];	  byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
112	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[end  -  1]);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[end  -  1]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[end  -  1]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
113	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[start  -  1]);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[start  -  1]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[start  -  1]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  1]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
116	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[start  -  1]);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[start  -  1]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  trailer[start  -  1]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
117	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  buffer.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end,  buffer.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
118	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  buffer.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  buffer.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  buffer.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
119	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
120	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  end);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
121	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  length];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  length];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  length];	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
122	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  end];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  end];	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
123	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  start]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
124	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  start  +  1];	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
125	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
126	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[0];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[0];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[0];	  final    byte    currentByte    =    trailer[end];    	non-compiled	[CE]  <identifier>  expected	20	None	replace
127	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
128	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
129	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
130	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
131	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
132	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_INT;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_INT;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_INT;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
133	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  end);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
134	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
135	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
136	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
137	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  0);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
138	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  -1);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  -1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  -1);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
139	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  end));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  end));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
140	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  end,  currentByte));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
141	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
142	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  end,  start,  currentByte));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  '0'));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  '0'));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0));  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  0));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  0));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
145	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  -  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
146	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  /  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  /  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  /  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
147	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  *  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
148	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  1;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
149	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1]  +  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
150	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end  -  1];	  static    final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
151	[BUG]  [BUGGY]  byte  currentByte  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer.length  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer.length  -  1;	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
152	[BUG]  [BUGGY]  byte  currentByte  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer.length  -  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer.length  -  start;	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
153	[BUG]  [BUGGY]  byte  currentByte  =  buffer.length;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer.length;	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
154	[BUG]  [BUGGY]  byte  currentByte  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer.length  -  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer.length  -  2;	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
155	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length[end];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length[end];	  final    byte    currentByte    =    start[end];    	non-compiled	[CE]  <identifier>  expected	59	None	replace
156	[BUG]  [BUGGY]  static  final  byte  currentByte  =  start[end];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  start[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  start[end];	  final    byte    currentByte    =    start[end];    	non-compiled	[CE]  <identifier>  expected	59	None	replace
157	[BUG]  [BUGGY]  final  byte  currentByte  =  DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  DEFAULT_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  DEFAULT_ENCODING;	  final    byte    currentByte    =    FALLBACK_ENCODING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
158	[BUG]  [BUGGY]  static  final  byte  currentByte  =  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  FALLBACK_ENCODING;	  final    byte    currentByte    =    FALLBACK_ENCODING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
159	[BUG]  [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING  |  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING  |  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  FALLBACK_ENCODING  |  BYTE_MASK;	  final    byte    currentByte    =    FALLBACK_ENCODING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
160	[BUG]  [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING  +  start;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  FALLBACK_ENCODING  +  start;	  final    byte    currentByte    =    FALLBACK_ENCODING;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
161	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  start  +  1];	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
162	[BUG]  [BUGGY]  byte  currentByte  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[end  -  start];	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
163	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
164	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
165	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
166	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  +  2;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
167	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
168	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[0];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[0];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[0];	  static    final    byte    currentByte    =    trailer[end];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
169	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[1];	  static    final    byte    currentByte    =    trailer[end];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
170	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start  +  start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start  +  start];	  byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
171	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  end];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  +  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  end];	  byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
172	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  length];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  +  length];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  length];	  byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
173	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start-1]  +  1;	  static    final    byte    currentByte    =    trailer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
174	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  2];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  2];	  static    final    byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
175	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start  +  1];	  final    byte    currentByte    =    buffer[start    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
176	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  start  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  start  +  1];	  final    byte    currentByte    =    buffer[start    -    start    +    1];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
177	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  end;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
178	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  trailer;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  trailer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  +  trailer;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
179	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  +  length;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
180	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  start;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
181	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  1]  +  end;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
182	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  3];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  3];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  3];	  final    byte    currentByte    =    buffer[start    +    2];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
183	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  1;	  final    byte    currentByte    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
184	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  +  2;	  final    byte    currentByte    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
185	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  +  3;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  +  3;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  +  3;	  final    byte    currentByte    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
186	[BUG]  [BUGGY]  final  byte  currentByte  =  Trailer.DEFAULT_ENCODING;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  Trailer.DEFAULT_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  Trailer.DEFAULT_ENCODING;	  final    byte    currentByte    =    end;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
187	[BUG]  [BUGGY]  static  final  long  currentByte  =  trailer[start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  trailer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  trailer[start];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
188	[BUG]  [BUGGY]  static  final  int  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  int  currentByte  =  buffer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  int  currentByte  =  buffer[start];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
189	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  buffer[start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[start  +  1];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
190	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[start  -  start];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
191	[BUG]  [BUGGY]  static  final  long  currentByte  =  trailer.length;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  trailer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  trailer.length;	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
192	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  1;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
193	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  end]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  end]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  end]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
194	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK  +  2;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
195	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK,  end;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK,  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK,  end;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
196	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
197	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
198	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
199	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
200	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
201	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  1);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
202	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  2);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
203	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  0);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
204	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  4);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  4);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  4);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
205	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  3);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  3);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  3);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
206	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
207	[BUG]  [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
208	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  -  start);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
209	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
210	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
211	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
212	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
213	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
214	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK,  end;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK,  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  *  BYTE_MASK,  end;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
215	[BUG]  [BUGGY]  final  long  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  trailer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  trailer[start  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
216	[BUG]  [BUGGY]  final  int  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  int  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  int  currentByte  =  buffer[start  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
217	[BUG]  [BUGGY]  final  double  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  double  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  double  currentByte  =  buffer[start  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
218	[BUG]  [BUGGY]  final  long  currentByte  =  trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  trailer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  trailer[end  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
219	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  1;	  final    byte    currentByte    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
220	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  length;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  length;	  final    byte    currentByte    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
221	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  length];  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  length];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  length];	  static    final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
222	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start  +  1];  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  start  +  1];	  static    final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
223	[BUG]  [BUGGY]  byte  currentByte  =  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  start;	  byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
224	[BUG]  [BUGGY]  byte  currentByte  =  end;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  end;	  byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
225	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  1]  +  start;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  1]  +  start;	  final    byte    currentByte    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
226	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  1]  +  start;	  final    byte    currentByte    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
227	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  1L;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  1L;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  1L;	  final    byte    currentByte    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
228	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  1  +  start;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  1  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  1  +  start;	  final    byte    currentByte    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
229	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length();	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
230	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.intValue()  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.intValue()  +  1;	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
231	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.longValue();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.longValue();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.longValue();	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
232	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.intValue()  +  start;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.intValue()  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.intValue()  +  start;	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
233	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.doubleValue();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.doubleValue();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.doubleValue();	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
234	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
235	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
236	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  end,  length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
237	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
238	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
239	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  -  1;	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
240	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  -  start;	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
241	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  -  2;	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
242	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  +  1;	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
243	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  /  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  /  2;	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
244	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  1;	  static    final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
245	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  /  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
246	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK  +  2;	  static    final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
247	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  1;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
248	[BUG]  [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
249	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  2;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  2;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
250	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)-  1;  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)-  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)-  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
251	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end)+  1;  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  end)+  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
252	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start)+  1;  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start)+  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
253	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
254	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  2];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  2];	  static    final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
255	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  0xffff;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  0xffff;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1]  &  0xffff;	  static    final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
256	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  2  +  1;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
257	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  +  start;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  2  +  start;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
258	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  2L;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  2L;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  2L;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
259	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  4;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  4;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  4;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
260	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  3;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  3;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  3;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
261	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  end  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  end  +  1];	  final    byte    currentByte    =    buffer[start    +    start    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
262	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  length  +  1];  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  length  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  length  +  1];	  final    byte    currentByte    =    buffer[start    +    start    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
263	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start  +  2];  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start  +  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start  +  2];	  final    byte    currentByte    =    buffer[start    +    start    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
264	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  +  start  +  1];  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  +  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  +  start  +  1];	  final    byte    currentByte    =    buffer[start    +    start    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
265	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  1;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
266	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_FALLBACK_ENCODING;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
267	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  +  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
268	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_SIZE;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
269	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  BYTE_END;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
270	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
271	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
272	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
273	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  1]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
274	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  -  1]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  1]  +  1;	  final    byte    currentByte    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
275	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  end,  start));	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
276	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1));  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-1));	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
277	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1));  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end  +  1));	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
278	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end));  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer.length,  start,  end));	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
279	[BUG]  [BUGGY]  final  byte  currentByte  =  this.trailer.length;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  this.trailer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.trailer.length;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
280	[BUG]  [BUGGY]  static  final  byte  currentByte  =  this.trailer;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  this.trailer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  this.trailer;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
281	[BUG]  [BUGGY]  final  byte  currentByte  =  this.trailer  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  this.trailer  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.trailer  +  1;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
282	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte(start);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByte(start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte(start);	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
283	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte(0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByte(0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte(0);	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
284	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getBytes();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getBytes();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getBytes();	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
285	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte(end);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByte(end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte(end);	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
286	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.getByte();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.getByte();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.getByte();	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
287	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start  +  1);	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
288	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(end);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(end);	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
289	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  +  1));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start  +  1));	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
290	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start++);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start++);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start++);	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
291	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start,  end);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start,  end);	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
292	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end++];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end++];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end++];	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
293	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  +  1;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
294	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
295	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  start;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  +  start;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  length;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  +  length;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
297	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  -  1;	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
298	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  /  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  /  1;	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
299	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  1;	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
300	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  *  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  *  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  *  1;	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
301	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1]  +  1;	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
302	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.trailer;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.trailer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.trailer;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
303	[BUG]  [BUGGY]  final  byte  currentByte  =  this.trailer  +  start;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  this.trailer  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.trailer  +  start;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
304	[BUG]  [BUGGY]  final  byte  currentByte  =  end  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  end  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  end  +  1;	  final    byte    currentByte    =    end;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
305	[BUG]  [BUGGY]  final  byte  currentByte  =  end  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  end  -  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  end  -  1;	  final    byte    currentByte    =    end;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
306	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.byteValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.byteValue();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.byteValue();	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
307	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByteValue();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByteValue();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByteValue();	  final    byte    currentByte    =    trailer.intValue();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
308	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start);	  static    final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
309	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start-1]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
310	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  +  start;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start-1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start-1]  +  start;	  static    final    byte    currentByte    =    trailer[start-1];    	non-compiled	[CE]  <identifier>  expected	15	None	replace
311	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
312	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
313	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  1L;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  1L;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  +  1L;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
314	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  *  start;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  *  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  *  start;	  final    byte    currentByte    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
315	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end,  buffer.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end,  buffer.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
316	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer,  start);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
317	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end.length);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end.length);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end.length);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
318	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  start-1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  start-1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  start-1;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
319	[BUG]  [BUGGY]  byte  currentByte  =  buffer;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer;	  byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
320	[BUG]  [BUGGY]  byte  currentByte  =  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  FALLBACK_ENCODING;	  byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
321	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  '0';  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  +  '0';	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
322	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start]  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start]  +  1;	  static    final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
323	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  1]  +  start;	  byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
324	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  -  1]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  1]  +  end;	  byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
325	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  +  length];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  +  length];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  +  length];	  final    byte    currentByte    =    buffer[start    +    length];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
326	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  1);	  final    byte    currentByte    =    buffer[start    +    length];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
327	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  start]  +  1;	  static    final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
328	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  start,  end);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
329	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  +  end;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
330	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  +  start;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
331	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
332	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  +  end;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
333	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  *  end;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  *  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  *  end;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
334	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start-1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start-1];	  final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
335	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  buffer[start  -  start]);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    buffer[end    -    1]);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
336	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start-1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  start-1];	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
337	[BUG]  [BUGGY]  final  long  currentByte  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  buffer[start  -  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer[start  -  start  +  1];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
338	[BUG]  [BUGGY]  final  byte  currentByte  =  start[start  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  start[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start[start  -  1];	  final    byte    currentByte    =    start[end];    	non-compiled	[CE]  <identifier>  expected	59	None	replace
339	[BUG]  [BUGGY]  final  byte  currentByte  =  start[start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  start[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start[start];	  final    byte    currentByte    =    start[end];    	non-compiled	[CE]  <identifier>  expected	59	None	replace
340	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  buffer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[start  -  1];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
341	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[start  +  start];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  buffer[start  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[start  +  start];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
342	[BUG]  [BUGGY]  long  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  buffer[start  -  start];	  long    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	74	None	replace
343	[BUG]  [BUGGY]  long  currentByte  =  buffer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  buffer[start  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  buffer[start  -  1]  +  start;	  long    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	74	None	replace
344	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1L;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1L;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1L;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
345	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  0;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  0;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  0;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
346	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray(0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.toByteArray(0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray(0);	  final    byte    currentByte    =    trailer.toByteArray();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
347	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
348	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  start]  +  1;	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
349	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start-1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start-1];	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
350	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length,  this.currentByte);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length,  this.currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length,  this.currentByte);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    this.currentByte);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
351	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-start);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end-start);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
352	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  2  +  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  2  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  2  +  start;	  final    byte    currentByte    =    trailer.length    -    2;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
353	[BUG]  [BUGGY]  int  currentByte  =  buffer[start  +  start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  buffer[start  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[start  +  start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
354	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  10);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  10);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  10);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
355	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;	  byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
356	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  start-1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  buffer[start  +  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  start-1];	  byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	64	None	replace
357	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte));  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte));	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
358	[BUG]  [BUGGY]  byte  currentByte  =  trailer.charAt(start);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer.charAt(start);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer.charAt(start);	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
359	[BUG]  [BUGGY]  byte  currentByte  =  start.length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  start.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  start.length;	  byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
360	[BUG]  [BUGGY]  byte  currentByte  =  start[end];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  start[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  start[end];	  byte    currentByte    =    buffer[end];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
361	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  *  FALLBACK_ENCODING;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
362	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  length]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  length]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  length]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
363	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
364	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  byte)+  '0';  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  byte)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  byte)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
365	[BUG]  [BUGGY]  final  byte  currentByte  =  start  +  length;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  start  +  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start  +  length;	  final    byte    currentByte    =    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
366	[BUG]  [BUGGY]  final  byte  currentByte  =  length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  length;	  final    byte    currentByte    =    start;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
367	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
368	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.charAt(start  -  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start  -  1);	  final    byte    currentByte    =    trailer.charAt(start);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
369	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  start]  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
370	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
371	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  *  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  *  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  *  2;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
372	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;	  static    final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
373	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  start]  &  BYTE_MASK;	  static    final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
374	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  0x7F;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  0x7F;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1]  &  0x7F;	  static    final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
375	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  1]  *  BYTE_MASK;	  static    final    byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
376	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  +  '0';  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  +  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  +  '0';	  final    byte    currentByte    =    trailer[start]    +    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
377	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  end;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  +  end;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
378	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start++];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start++];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start++];	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
379	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  +  start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[end  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  +  start];	  final    byte    currentByte    =    buffer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
380	[BUG]  [BUGGY]  final  byte  currentByte  =  container[end  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  container[end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  container[end  +  1];	  final    byte    currentByte    =    buffer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	38	None	replace
381	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1]  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  1]  +  start;	  static    final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
382	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  1]  +  end;	  static    final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
383	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  FALLBACK_ENCODING;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
384	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  4;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  4;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK  +  4;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
385	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  end  +  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
386	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  end);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  end);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1,  end);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    length,    start    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
387	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  +  2;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
388	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
389	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  <  <  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  <  <  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  <  <  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
390	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  -  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length  -  1);	  byte    currentByte    =    exceptionMessage(buffer,    offset,    start,    length);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
391	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  *  start;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  /  2  *  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  2  *  start;	  final    byte    currentByte    =    trailer.length    /    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
392	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  2];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  -  2];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  2];	  final    byte    currentByte    =    buffer[start    +    2];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
393	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
394	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  *  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  *  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  *  1;	  final    byte    currentByte    =    trailer.length    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
395	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1)];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  1)];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1)];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
396	[BUG]  [BUGGY]  final  byte  currentByte  =  this.trailer.getByte();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  this.trailer.getByte();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.trailer.getByte();	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
397	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte(1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByte(1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte(1);	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
398	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte()  +  start;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.getByte()  +  start;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte()  +  start;	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
399	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
400	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
401	[BUG]  [BUGGY]  short  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  short  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	short  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
402	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start-1];  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start-1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  start-1];	  final    byte    currentByte    =    buffer[start    +    start-1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
403	[BUG]  [BUGGY]  byte  currentByte  =  trailer[end  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[end  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[end  +  1];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
404	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  *  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  *  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  *  1];	  final    byte    currentByte    =    trailer[end    +    1];    	non-compiled	[CE]  <identifier>  expected	88	None	replace
405	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
406	[BUG]  [BUGGY]  byte  currentByte  =  this.trailer;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  this.trailer;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  this.trailer;	  final    byte    currentByte    =    this.trailer;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
407	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;	  final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
408	[BUG]  [BUGGY]  final  long  currentByte  =  buffer.length;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  buffer.length;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer.length;	  final    byte    currentByte    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
409	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  line);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  line);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  line);	  Integer    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
410	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
411	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  +  start  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[end  +  start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  +  start  +  1];	  final    byte    currentByte    =    buffer[start    +    start    +    1];    	non-compiled	[CE]  <identifier>  expected	30	None	replace
412	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end  +  start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[end  +  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end  +  start];	  static    final    byte    currentByte    =    trailer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
413	[BUG]  [BUGGY]  final  long  currentByte  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  buffer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer[end  -  start];	  final    byte    currentByte    =    buffer[end    -    start];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
414	[BUG]  [BUGGY]  int  currentByte  =  buffer[end];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  int  currentByte  =  buffer[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[end];	  byte    currentByte    =    buffer[end];    	non-compiled	[CE]  <identifier>  expected	65	None	replace
415	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  /  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  /  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    +    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
416	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
417	[BUG]  [BUGGY]  static  final  long  currentByte  =  trailer[end];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  trailer[end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  trailer[end];	  static    final    byte    currentByte    =    trailer[end];    	non-compiled	[CE]  <identifier>  expected	13	None	replace
418	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1]  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
419	[BUG]  [BUGGY]  byte  currentByte  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[end  -  1];	  final    byte    currentByte    =    trailer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
420	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  2  +  1;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  2  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)/  2  +  1;	  long    currentByte    =    exceptionMessage(buffer,    offset,    length,    start,    end)+    1;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
421	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  -  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
422	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start]  &  FALLBACK_ENCODING;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  FALLBACK_ENCODING;	  final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
423	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  start,  end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.length  -  start,  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  start,  end;	  final    byte    currentByte    =    trailer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
424	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.decodeBase64Variants();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer.decodeBase64Variants();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.decodeBase64Variants();	  final    byte    currentByte    =    trailer.getByte();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
425	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  1]  +  end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  1]  +  end;	  final    byte    currentByte    =    buffer[start    -    1]    +    end;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
426	[BUG]  [BUGGY]  long  currentByte  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  buffer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  buffer[end  -  1];	  final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
427	[BUG]  [BUGGY]  short  currentByte  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  short  currentByte  =  buffer[end  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	short  currentByte  =  buffer[end  -  1];	  final    byte    currentByte    =    buffer[end    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
428	[BUG]  [BUGGY]  short  currentByte  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  short  currentByte  =  trailer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	short  currentByte  =  trailer[start  -  1];	  long    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	74	None	replace
429	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start++];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start++];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start++];	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
430	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++]  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start++];    	non-compiled	[CE]  <identifier>  expected	22	None	replace
431	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  begin;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  begin;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  begin;	  final    byte    currentByte    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
432	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  buffer[end;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  trailer[start  -  1]  +  buffer[end;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1]  +  buffer[end;	  final    byte    currentByte    =    buffer[start    -    1]    +    start;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
433	[BUG]  [BUGGY]  final  byte  currentByte  =  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  byte  currentByte  =  TrailerEncoding.UTF8;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  TrailerEncoding.UTF8;	  final    byte    currentByte    =    end;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
434	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)/  1;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)/  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)/  1;	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
435	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start,  end];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start,  end];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start,  end];	  static    final    byte    currentByte    =    trailer.charAt(start];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
436	[BUG]  [BUGGY]  Byte  currentByte  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Byte  currentByte  =  trailer[start  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Byte  currentByte  =  trailer[start  -  1];	  byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
437	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  '0';  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  buffer,  start,  currentByte)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
438	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte)+  '0';  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte)+  '0';  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte)+  '0';	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte)+    '0';    	non-compiled	[CE]  <identifier>  expected	35	None	replace
439	[BUG]  [BUGGY]  static  final  double  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  double  currentByte  =  buffer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  double  currentByte  =  buffer[start];	  static    final    long    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	79	None	replace
440	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK  |  1;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
441	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start]    &    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
442	[BUG]  [BUGGY]  static  final  int  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  int  currentByte  =  buffer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  int  currentByte  =  buffer[start  -  start];	  static    final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
443	[BUG]  [BUGGY]  static  final  byte  currentByte  =  this.currentByte;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  this.currentByte;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  this.currentByte;	  static    final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
444	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.intValue();  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.intValue();	  static    final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
445	[BUG]  [BUGGY]  final  long  currentByte  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  buffer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer[start  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
446	[BUG]  [BUGGY]  final  int  currentByte  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  int  currentByte  =  buffer[start  -  start]  +  1;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  int  currentByte  =  buffer[start  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start]    +    1;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
447	[BUG]  [BUGGY]  Byte  currentByte  =  trailer[start  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Byte  currentByte  =  trailer[start  +  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Byte  currentByte  =  trailer[start  +  1];	  byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
448	[BUG]  [BUGGY]  short  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  short  currentByte  =  buffer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	short  currentByte  =  buffer[start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
449	[BUG]  [BUGGY]  double  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  double  currentByte  =  buffer[start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	double  currentByte  =  buffer[start];	  int    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	78	None	replace
450	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte  +  1);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte  +  1);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
451	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte);  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  start,  end,  currentByte);	  result    =    exceptionMessage(buffer,    offset,    length,    start,    currentByte);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
452	[BUG]  [BUGGY]  byte  currentByte  =  trailer[end  -  start];  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[end  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[end  -  start];	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
453	[BUG]  [BUGGY]  Byte  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  Byte  currentByte  =  trailer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Byte  currentByte  =  trailer[start  -  start];	  byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
454	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start]  &  BYTE_MASK;	  byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
455	[BUG]  [BUGGY]  static  final  long  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  long  currentByte  =  trailer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  trailer[start  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
456	[BUG]  [BUGGY]  long  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  long  currentByte  =  trailer[start  -  start];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  trailer[start  -  start];	  final    long    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	81	None	replace
457	[BUG]  [BUGGY]  final  long  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  final  long  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    -    start]    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
458	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {      [BUGGY]  static  final  byte  currentByte  =  trailer.length  -  1];  [BUGGY]        if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length  -  1];	  static    final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
