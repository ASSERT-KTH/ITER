bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer;	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.length;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer.length;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.length;	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  1];	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[end];  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  buffer[end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[end];	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start];  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  buffer[start  +  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  +  start];	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  1];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[end  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  1];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[end  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  buffer[start  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  1];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start++];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start++];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start++];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[end];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[end];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start  +  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  +  start];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start-1];  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start-1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start-1];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start]  +  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  +  1;	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  1];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  1];	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  +  start];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start  +  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  +  start];	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end];	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start]  +  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  +  1;	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start++];  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start++];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start++];	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  byte  currentByte  =  trailer[start];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  trailer[start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer[start];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  1];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  buffer[start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  1];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  byte  currentByte  =  trailer.length;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  trailer.length;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer.length;	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  byte  currentByte  =  trailer;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  trailer;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  trailer;	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  buffer[start  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  -  start];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  end];  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  end];	  final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  length];  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  length];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  length];	  final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start  +  1];	  final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  this.currentByte);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  '0';	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[end  -  1]);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[end  -  1]);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer[end  -  1]);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  1;  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	result  =  exceptionMessage(buffer,  offset,  length,  start,  currentByte)+  1;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[end  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  +  1];	  final    byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  2];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  2];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  2];	  final    byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  -  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  1;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  -  start;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  start;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  -  2;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  2;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  +  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  +  1;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  /  2;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  /  2;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.length  -  10;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.length  -  10;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.length  -  10;	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start  -  start];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  -  start];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[end  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  -  start];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start  +  1];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  -  start  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start  +  1];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  buffer[start  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  buffer[start  -  start];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[end  -  start];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[end  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[end  -  start];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  final  byte  currentByte  =  start;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  start;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer.length;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer.length;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer.length;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  final  byte  currentByte  =  end;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  end;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  end;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  final  byte  currentByte  =  this.trailer;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  this.trailer;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  this.trailer;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  start,  length);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer.length);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  buffer.length);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start  +  1);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  final  byte  currentByte  =  start[end];  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  start[end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  start[end];	  final    byte    currentByte    =    buffer[end];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
61	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  -  start]  +  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  start]  +  1;	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
62	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.charAt(start);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.charAt(start);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.charAt(start);	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start  -  start];	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  byte  currentByte  =  buffer[start  +  start];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  buffer[start  +  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[start  +  start];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
65	[BUG]  [BUGGY]  byte  currentByte  =  buffer[end];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  buffer[end];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  buffer[end];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
66	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start]  *  BYTE_MASK;	  final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  +  start-1];  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  +  start-1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  +  start-1];	  final    byte    currentByte    =    buffer[start    +    start];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  FALLBACK_ENCODING;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  FALLBACK_ENCODING;	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  start;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  start;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  +  start;	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  end;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  buffer[start  -  1]  +  end;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  buffer[start  -  1]  +  end;	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.getByte();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.getByte();  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.getByte();	  final    byte    currentByte    =    trailer.length;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
72	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.toByteArray();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.toByteArray();  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.toByteArray();	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer.intValue();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer.intValue();  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer.intValue();	  final    byte    currentByte    =    trailer;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  long  currentByte  =  buffer[start  -  1];  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  long  currentByte  =  buffer[start  -  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  buffer[start  -  1];	  final    byte    currentByte    =    buffer[start    -    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
75	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer[start]  *  BYTE_MASK;	  static    final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[start]  &  BYTE_MASK;	  final    byte    currentByte    =    trailer[start];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  int  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  int  currentByte  =  buffer[start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	int  currentByte  =  buffer[start];	  byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
79	[BUG]  [BUGGY]  static  final  long  currentByte  =  buffer[start];  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  long  currentByte  =  buffer[start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  long  currentByte  =  buffer[start];	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
80	[BUG]  [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start];  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  static  final  byte  currentByte  =  trailer.charAt(start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	static  final  byte  currentByte  =  trailer.charAt(start];	  static    final    byte    currentByte    =    buffer[start];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
81	[BUG]  [BUGGY]  final  long  currentByte  =  buffer[start  -  start];  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  long  currentByte  =  buffer[start  -  start];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  long  currentByte  =  buffer[start  -  start];	  final    byte    currentByte    =    buffer[start    -    start];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	Integer  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  0);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end));  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end));  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	byte  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
87	[BUG]  [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	long  currentByte  =  exceptionMessage(buffer,  offset,  length,  start,  end)+  1;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
88	[BUG]  [BUGGY]  final  byte  currentByte  =  trailer[end  +  1];  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  for  (  ;start  <  end;  start++)  {    [BUGGY]  final  byte  currentByte  =  trailer[end  +  1];  [BUGGY]      if  (currentByte  <  '0'  ||  currentByte  >  '7'){  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  start,  currentByte));  }  result  =  (result  <<  3)  +  (currentByte  -  '0');  //  convert  from  ASCII  }  return  result;  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	140	140	1	replace	final  byte  currentByte  =  trailer[end  +  1];	  final    byte    currentByte    =    buffer[start    +    1];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
