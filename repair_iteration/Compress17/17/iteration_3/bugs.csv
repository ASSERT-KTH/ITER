bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
2	[BUG]  [BUGGY]  if(start  >=  0  &&  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  &&  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  &&  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
3	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
4	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer  ==  'n')  {	  if(trailer!=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  if(end  ==  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  ==  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  ==  0  ||  trailer  ==  'n')  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
12	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!=  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!=  'n')  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!=  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!=  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!='')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!='')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!='')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  =='')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  =='')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  =='')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  =='')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  =='')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  end--;	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!=  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!=  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer!=  'e')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer!=  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer!=  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  if(trailer  ==  start  +|  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +|  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +|  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer!=  'E')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer!=  'E')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'e'  ||  trailer!=  'E')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer!=  'r')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer!=  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer!=  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
34	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer!=  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer!=  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer!=  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
35	[BUG]  [BUGGY]  if(trailer!=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
36	[BUG]  [BUGGY]  if(trailer  >=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
37	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  >=  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  >=  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
38	[BUG]  [BUGGY]  if(start  >  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >  0  ||  trailer  ==  '')  {	  if(trailer    >    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
39	[BUG]  [BUGGY]  if(trailer  <  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  <  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  <  0  ||  trailer  ==  '')  {	  if(trailer    >    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
40	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(start  ==  0  ||  end  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  end  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  end  ==  '.')  {	  if(trailer    ==    0    ||    end    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
46	[BUG]  [BUGGY]  if(end  ==  0  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  ==  0  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  ==  0  ||  trailer  ==  '.')  {	  if(trailer    ==    0    ||    end    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
47	[BUG]  [BUGGY]  if(trailer  ==  start  ||  end  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  end  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  end  ==  '.')  {	  if(trailer    ==    0    ||    end    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
48	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
49	[BUG]  [BUGGY]  if(start  >=  0  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  ||  end  ==  'n')  {	  if(trailer    >=    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
50	[BUG]  [BUGGY]  if(end  >=  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  >=  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  >=  0  ||  trailer  ==  'n')  {	  if(trailer    >=    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
51	[BUG]  [BUGGY]  if(trailer!=  0  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  end  ==  'n')  {	  if(trailer    >=    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
52	[BUG]  [BUGGY]  if(length  >  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  >  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  >  0  ||  trailer  ==  'n')  {	  if(length    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer!=  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer!=  'n')  {	  if(length    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
54	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  end  ==  '')  {	  if(trailer    ==    start    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
55	[BUG]  [BUGGY]  if(trailer  ==  start  &&  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  &&  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  &&  end  ==  '')  {	  if(trailer    ==    start    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  length);	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  ||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  ||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
63	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
64	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  'e')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!=  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!=  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
65	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'E')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'E')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer!=  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer!=  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  if(start  ==  trailer  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  trailer  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  trailer  ||  trailer  ==  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  if(trailer!=  start  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  ||  trailer  ==  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  ',')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  ',')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  ',')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer!=  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer!=  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  if(trailer  ==  start  +|  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +|  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +|  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  if(start  ==  trailer  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  trailer  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  trailer  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  if(trailer!=  start  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
79	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
81	[BUG]  [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
82	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  'n')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  1  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  1  ||  trailer  ==  '/')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer!=  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer!=  'n')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  if(trailer  ==  start  +|  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +|  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +|  trailer  ==  'n')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'A')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'A')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'A')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  bucket!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  bucket!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	bucket!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
94	[BUG]  [BUGGY]  bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	bucket  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
95	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
97	[BUG]  [BUGGY]  if(start  ==  0  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  end  ==  'n')  {	  if(trailer    ==    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
98	[BUG]  [BUGGY]  if(trailer  ==  start  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  end  ==  'n')  {	  if(trailer    ==    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
99	[BUG]  [BUGGY]  if(trailer  >=  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  end  ==  '')  {	  if(start    >=    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
100	[BUG]  [BUGGY]  if(trailer!=  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  end  ==  '')  {	  if(start    >=    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
101	[BUG]  [BUGGY]  if(length  >=  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  >=  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  >=  0  ||  end  ==  '')  {	  if(start    >=    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
102	[BUG]  [BUGGY]  if(start  >=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
103	[BUG]  [BUGGY]  if(start!=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start!=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start!=  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
104	[BUG]  [BUGGY]  if(length!=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length!=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length!=  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
105	[BUG]  [BUGGY]  if(length  ==  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
106	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  =='')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  =='')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  =='')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
112	[BUG]  [BUGGY]  if(trailer  <  =  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  <  =  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  <  =  0  ||  trailer  ==  '')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  if(length  <  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  <  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  <  0  ||  trailer  ==  '')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  &&  trailer  ==  '')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
115	[BUG]  [BUGGY]  if(start  ==  trailer  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  trailer  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  trailer  &&  trailer  ==  '')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
116	[BUG]  [BUGGY]  if(trailer  ==  end  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  end  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  end  &&  trailer  ==  '')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
117	[BUG]  [BUGGY]  if(trailer  ==  start  &&  trailer!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  &&  trailer!=  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  &&  trailer!=  'n')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  if(length  >=  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  >=  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  >=  0  ||  trailer  ==  'n')  {	  if(start    >=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
119	[BUG]  [BUGGY]  if(length  ==  0  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
120	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer!=  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer!=  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
125	[BUG]  [BUGGY]  if(start  ==  0  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  end  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  end  ==  '-')  {	  if(trailer    ==    0    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
126	[BUG]  [BUGGY]  if(end  ==  0  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  ==  0  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  ==  0  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
127	[BUG]  [BUGGY]  if(trailer  ==  start  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  end  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  end  ==  '-')  {	  if(trailer    ==    0    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
128	[BUG]  [BUGGY]  if(start  ==  length  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  length  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  length  ||  trailer  ==  '')  {	  if(start    ==    trailer    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  if(start  >=  length  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  length  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  length  ||  trailer  ==  '')  {	  if(start    ==    trailer    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
130	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
131	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
132	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
133	[BUG]  [BUGGY]  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
134	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
135	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
136	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer!=  '')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
137	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer  ==  'e')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
138	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer  ==  'n')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
139	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer  ==  '-')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
140	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
141	[BUG]  [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  ==  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  ==  0  &&  trailer  ==  '')  {	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
142	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
143	[BUG]  [BUGGY]  if(start  ==  start  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
144	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
145	[BUG]  [BUGGY]  if(start  ==  0  ||  start  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  start  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  start  ==  'n')  {	  if(length    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
146	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
147	[BUG]  [BUGGY]  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
148	[BUG]  [BUGGY]  if(start  ==  0  ||  start  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  start  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  start  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
149	[BUG]  [BUGGY]  if(start  <  =  0  ||  start  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0  ||  start  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0  ||  start  >  trailer.length)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'n')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
151	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
152	[BUG]  [BUGGY]  if(trailer  ==  start  -  1  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  -  1  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  -  1  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
153	[BUG]  [BUGGY]  if(start  ==  start  +  1  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  +  1  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  +  1  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
154	[BUG]  [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
155	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
156	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
157	[BUG]  [BUGGY]  if(length  ==  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  ==  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  ==  0  ||  end  ==  '')  {	  if(start    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
158	[BUG]  [BUGGY]  if(trailer  ==  0  ||  start  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  start  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  start  ==  '')  {	  if(start    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
159	[BUG]  [BUGGY]  if(start  >=  0  ||  end  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  ||  end  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  ||  end  ==  '-')  {	  if(start    ==    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
160	[BUG]  [BUGGY]  if(trailer  ==  0  &&  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  &&  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  &&  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
161	[BUG]  [BUGGY]  if(start!=  0  &&  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start!=  0  &&  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start!=  0  &&  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
162	[BUG]  [BUGGY]  if(length!=  0  &&  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length!=  0  &&  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length!=  0  &&  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
163	[BUG]  [BUGGY]  if(trailer  ==  0  ||  start  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  start  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  start  ==  '-')  {	  if(trailer    ==    0    ||    end    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
165	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
166	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'r')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'r')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
167	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
168	[BUG]  [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  'n'  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  'n'  ||  trailer  ==  'n')  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
169	[BUG]  [BUGGY]  if(start  >  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >  0  ||  end  ==  '')  {	  if(start    >=    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
170	[BUG]  [BUGGY]  if(trailer  ==  0  ||  start  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  start  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  start  ==  'n')  {	  if(trailer!=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
171	[BUG]  [BUGGY]  if(trailer  ==  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
172	[BUG]  [BUGGY]  if(trailer  ==  0  &&  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  &&  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  &&  end  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
173	[BUG]  [BUGGY]  if(trailer  ==  0  ||  start  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  start  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  start  ==  '.')  {	  if(trailer    ==    0    ||    end    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
174	[BUG]  [BUGGY]  if(start  ==  0  ||  start  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  start  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  start  ==  '.')  {	  if(trailer    ==    0    ||    end    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
175	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
176	[BUG]  [BUGGY]  if(start  >=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
177	[BUG]  [BUGGY]  if(trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
178	[BUG]  [BUGGY]  if(start  ==  0  ||  start  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  start  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  start  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
179	[BUG]  [BUGGY]  if(start  <  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  0  ||  trailer  ==  'n')  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
180	[BUG]  [BUGGY]  if(start  >=  0  ||  end  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  ||  end  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  ||  end  ==  '.')  {	  if(trailer    ==    0    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
181	[BUG]  [BUGGY]  if(trailer  ==  0  ||  end  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  end  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  end  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
182	[BUG]  [BUGGY]  if(start  ==  0  ||  end  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  end  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  end  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
183	[BUG]  [BUGGY]  if(start  >=  start)  {  if(trailer!=  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  start)  {  if(trailer!=  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  start)  {  if(trailer!=  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
184	[BUG]  [BUGGY]  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
185	[BUG]  [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  =='')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
186	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
188	[BUG]  [BUGGY]  if(trailer  ==  start)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start)  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
189	[BUG]  [BUGGY]  if(trailer  =='')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  =='')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  =='')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
190	[BUG]  [BUGGY]  if(start  ==  end  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  end  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  end  ||  end  ==  '')  {	  if(trailer    ==    start    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
191	[BUG]  [BUGGY]  if(start  ==  start  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  ||  end  ==  '')  {	  if(trailer    ==    start    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
192	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer  ==  '.')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
193	[BUG]  [BUGGY]  if(start  ==  trailer  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  trailer  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  trailer  ||  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
194	[BUG]  [BUGGY]  if(trailer  ==  start  ||  end  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  end  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  end  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
195	[BUG]  [BUGGY]  if(start  ==  start  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  ||  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
196	[BUG]  [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0  ||  trailer  ==  '')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
197	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
198	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
199	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
200	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  =='')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  =='')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  =='')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
201	[BUG]  [BUGGY]  if(trailer  ==  0)  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
202	[BUG]  [BUGGY]  if(trailer  ==  0  ||  end  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  end  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  end  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
203	[BUG]  [BUGGY]  if(start  ==  0  ||  end  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  end  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  end  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
204	[BUG]  [BUGGY]  if(start  ==  0  ||  start  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  start  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  start  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
205	[BUG]  [BUGGY]  if(trailer  ==  0  ||  start  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  start  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  start  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
206	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
207	[BUG]  [BUGGY]  if(start  ==  start  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  ||  trailer  ==  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
208	[BUG]  [BUGGY]  if(end  >  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  >  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  >  0  ||  trailer  ==  '')  {	  if(trailer    >    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
209	[BUG]  [BUGGY]  if(start  ==  start  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  start  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  start  &&  trailer  ==  '')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
210	[BUG]  [BUGGY]  if(start  >  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >  0  ||  trailer  ==  'n')  {	  if(start    >=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
211	[BUG]  [BUGGY]  if(start  >=  start  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  start  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  start  ||  end  ==  'n')  {	  if(trailer    >=    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
213	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
214	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n'  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
215	[BUG]  [BUGGY]  if(trailer  ==  start  &&  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  &&  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  &&  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
216	[BUG]  [BUGGY]  if(trailer  >=  start  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  start  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  start  ||  trailer  ==  '-')  {	  if(trailer    ==    start    ||    trailer    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
217	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {	  if(trailer    ==    start    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
218	[BUG]  [BUGGY]  if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  '-')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  '-')  {	  if(trailer    ==    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
219	[BUG]  [BUGGY]  if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  end  ==  'n'  ||  trailer  ==  'a'  ||  trailer  ==  'a'  ||  trailer  ==  'a')  {	  if(trailer    ==    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
220	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
221	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
222	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
223	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '-')  {  start++;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
224	[BUG]  [BUGGY]  if(end  ==  0  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  ==  0  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  ==  0  ||  trailer  ==  '/')  {	  if(trailer    ==    0    ||    trailer    ==    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
225	[BUG]  [BUGGY]  if(end  <  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  <  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  <  0  ||  trailer  ==  '')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
226	[BUG]  [BUGGY]  if(length  <  =  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  <  =  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  <  =  0  ||  trailer  ==  'n')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
227	[BUG]  [BUGGY]  if(start  <  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  0  ||  trailer  ==  '')  {	  if(length    <    =    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
228	[BUG]  [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
229	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
230	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'n')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
231	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
232	[BUG]  [BUGGY]  if(trailer  >=  start  +  1  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  start  +  1  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  start  +  1  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
233	[BUG]  [BUGGY]  if(trailer  <  start  +  1  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  <  start  +  1  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  <  start  +  1  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
234	[BUG]  [BUGGY]  if(trailer!=  start  +  1  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  +  1  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  +  1  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    1    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
235	[BUG]  [BUGGY]  if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  }	  if(trailer    ==    0    ||    trailer    =='')    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
236	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
237	[BUG]  [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  >=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
238	[BUG]  [BUGGY]  while(trailer  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer  <  =  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
239	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  if(end!=  0  &&  trailer!=  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end!=  0  &&  trailer!=  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end!=  0  &&  trailer!=  '')  {	  if(trailer!=    0    &&    trailer!=    '')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
241	[BUG]  [BUGGY]  if(start  >=  start  +  length  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  start  +  length  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  start  +  length  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
242	[BUG]  [BUGGY]  if(trailer!=  start  +  length  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  +  length  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  +  length  ||  trailer  ==  '')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
243	[BUG]  [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  +  length  ||  trailer  ==  '/')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  +  length  ||  trailer  ==  '/')  {	  if(trailer    ==    start    +    length    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
244	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '/')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
245	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ',')  {  start++;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  ',')  {  start++;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  ',')  {  start++;  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
246	[BUG]  [BUGGY]  if(trailer!=  0  &&  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  &&  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  &&  trailer  ==  'n')  {	  if(trailer!=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
247	[BUG]  [BUGGY]  if(start!=  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start!=  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start!=  0  ||  trailer  ==  'n')  {	  if(trailer!=    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
248	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
249	[BUG]  [BUGGY]  if(end  ==  0  ||  trailer  ==  '')  {  end--;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end  ==  0  ||  trailer  ==  '')  {  end--;  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end  ==  0  ||  trailer  ==  '')  {  end--;  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
250	[BUG]  [BUGGY]  if(end!=  0  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(end!=  0  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(end!=  0  &&  trailer  ==  '')  {	  if(trailer!=    0    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
251	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
252	[BUG]  [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
253	[BUG]  [BUGGY]  if(start  >=  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  >=  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  >=  0  ||  trailer  ==  '')  {  start++;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  }	  if(trailer    ==    0    ||    trailer    =='')    {    start++;    }    else    {    throw    new    IllegalArgumentException(    exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
254	[BUG]  [BUGGY]  if(length  >  0  ||  end  ==  '')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(length  >  0  ||  end  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(length  >  0  ||  end  ==  '')  {	  if(start    >=    0    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
255	[BUG]  [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  length)  {  if(trailer  ==  0  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
256	[BUG]  [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  ||  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
257	[BUG]  [BUGGY]  while(trailer!=  end  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  end  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  end  &&  trailer  ==  '')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
258	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  '-')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer    ==    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
259	[BUG]  [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  0  ||  trailer  ==  'e'  ||  trailer  ==  'E')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
260	[BUG]  [BUGGY]  if(trailer  >=  0  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  0  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  0  ||  trailer  ==  'e')  {	  if(trailer    ==    0    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
261	[BUG]  [BUGGY]  if(trailer  <  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  <  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  <  start  ||  trailer  ==  'n'  ||  trailer  ==  'r')  {	  if(trailer    ==    start    ||    trailer    ==    'n'    ||    trailer    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
262	[BUG]  [BUGGY]  if(trailer  >=  start  ||  trailer  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >=  start  ||  trailer  ==  '.')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >=  start  ||  trailer  ==  '.')  {	  if(trailer    ==    start    ||    trailer    ==    '.')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
263	[BUG]  [BUGGY]  if(strailer  ==  0  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(strailer  ==  0  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(strailer  ==  0  ||  trailer  ==  '')  {	  if(end    ==    0    ||    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
264	[BUG]  [BUGGY]  if(trailer  ==  start  &&  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  ==  start  &&  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  ==  start  &&  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
265	[BUG]  [BUGGY]  if(trailer!=  start  ||  trailer  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  ||  trailer  ==  'e')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  ||  trailer  ==  'e')  {	  if(trailer    ==    start    ||    trailer    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
266	[BUG]  [BUGGY]  if(start  ==  end  ||  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  end  ||  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  end  ||  trailer  ==  '')  {	  if(trailer    ==    start    ||    end    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
267	[BUG]  [BUGGY]  if(trailer!=  start  &&  trailer  ==  '')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  start  &&  trailer  ==  '')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  start  &&  trailer  ==  '')  {	  if(trailer    ==    start    &&    trailer    ==    '')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
268	[BUG]  [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  while(trailer!=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	while(trailer!=  0  &&  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
269	[BUG]  [BUGGY]  if(start!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start!=  0  ||  trailer  ==  '')  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
270	[BUG]  [BUGGY]  if(trailer!=  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer!=  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer!=  0  ||  trailer  ==  '.')  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(trailer!=    0    ||    trailer    =='')    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
271	[BUG]  [BUGGY]  if(start  <  =  0  ||  trailer  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  <  =  0  ||  trailer  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  <  =  0  ||  trailer  ==  'n')  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
272	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  start  >  trailer.length)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  start  >  trailer.length)  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  'n'  ||  start  >  trailer.length)  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
273	[BUG]  [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  end  >  trailer.length)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(start  ==  0  ||  trailer  ==  'n'  ||  end  >  trailer.length)  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(start  ==  0  ||  trailer  ==  'n'  ||  end  >  trailer.length)  {	  if(start    ==    0    ||    trailer    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
274	[BUG]  [BUGGY]  if(trailer  >  0  ||  end  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (buffer[start]  ==  '  '){  start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];      [BUGGY]  if(trailer  >  0  ||  end  ==  'n')  {  [BUGGY]      end--;  }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	127	127	1	replace	if(trailer  >  0  ||  end  ==  'n')  {	  if(trailer    >=    0    ||    end    ==    'n')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
