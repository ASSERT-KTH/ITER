bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(;  len  >=  0;  len--)  {  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  >=  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  >=  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
2	[BUG]  [BUGGY]  for(;  len  <  0;  len--)  {  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  <  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  <  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
3	[BUG]  [BUGGY]  for(;  len  ==  0;  len--)  {  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  ==  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  ==  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
4	[BUG]  [BUGGY]  for(;  len!=  0;  len--)  {  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len!=  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len!=  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
5	[BUG]  [BUGGY]  for(;  len  <  =  0;  len--)  {  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  <  =  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  <  =  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
6	[BUG]  [BUGGY]  for(;  len  >>  0;  len--)  {  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  >>  0;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  >>  0;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]    [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	  	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
8	[BUG]  [BUGGY]  for(;  len  <  1;  len--)  {  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  static  String  parseName(byte[]  buffer,  final  int  offset,  final  int  length,  final  ZipEncoding  encoding)  throws  IOException  {  int  len  =  length;  [BUGGY]  for(;  len  <  1;  len--)  {  [BUGGY]  if  (buffer[offset  +  len  -  1]  !=  0)  {  break;  }  }  if  (len  >  0)  {  byte[]  b  =  new  byte[len];  System.arraycopy(buffer,  offset,  b,  0,  len);  return  encoding.decode(b);  }  return   " ";  [CLASS]  TarUtils  1  [METHOD]  parseName  [RETURN_TYPE]  String  byte[]  buffer  final  int  offset  final  int  length  ZipEncoding  encoding  [VARIABLES]  byte[]  b  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  current  end  i  len  length  offset  start  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	288	288	1	replace	for(;  len  <  1;  len--)  {	for  (;  len  >  0;  len--)  {  	non-compiled	[CE]  <identifier>  expected	57	None	replace
