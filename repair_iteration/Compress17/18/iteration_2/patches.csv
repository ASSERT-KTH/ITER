bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  end  =  trailer.length()  -  start  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  start  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start  1  +  1;	  end    =    trailer.length()    -    start    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  end  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer[end  -  1];	  end    =    trailer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
3	[BUG]  [BUGGY]  end  =  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length;	  end    =    trailer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
4	[BUG]  [BUGGY]  end  =  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  BYTE_MASK;	  end    =    trailer;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
5	[BUG]  [BUGGY]  End  =  trailer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  -  1;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
6	[BUG]  [BUGGY]  End  =  trailer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  +  1;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
7	[BUG]  [BUGGY]  End  =  trailer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  *  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  *  2;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
8	[BUG]  [BUGGY]  End  =  trailer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  -  2;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
9	[BUG]  [BUGGY]  End  =  trailer.length()  -  start;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  -  start;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
10	[BUG]  [BUGGY]  End  =  trailer.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  +  2;	  End    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
11	[BUG]  [BUGGY]  End  -=  trailer.length  /  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  /  2;	  End    -=    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  End  -=  trailer.length  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  +  2;	  End    -=    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  End  -=  trailer.length  -  4;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  -  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  4;	  End    -=    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  End  -=  trailer.length  -  3;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  -  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  3;	  End    -=    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  trailer  =  buffer[start  -  1];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[start  -  1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	trailer  =  buffer[start  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
16	[BUG]  [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  trailer  =  buffer[end  -  1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Trailer  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
17	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  1;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  1]  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	trailer  =  buffer[end  -  1]  +  1;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  length;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  1]  +  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	trailer  =  buffer[end  -  1]  +  length;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
19	[BUG]  [BUGGY]  end  -=  trailer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  +  1;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
20	[BUG]  [BUGGY]  end  -=  trailer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  *  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  *  BYTE_MASK;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  end  -=  trailer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  -  1;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  end  -=  trailer.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  +  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  end  -=  trailer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length()  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length()  -  2;	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  End  -  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  2;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
26	[BUG]  [BUGGY]  End  -=  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  1;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
27	[BUG]  [BUGGY]  End  -  3;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  3;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
28	[BUG]  [BUGGY]  End  -  1l;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1l;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1l;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
29	[BUG]  [BUGGY]  End  -  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1L;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
30	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
31	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
32	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
34	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
35	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
36	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  trailer.length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
39	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  trailer));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  length));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1/,  length));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1/,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1/,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
42	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container,  end-1,  length));  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container,  end-1,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  container,  end-1,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
43	[BUG]  [BUGGY]  end  =  trailer.length()  +  start  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  +  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  +  start  +  1;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  end  =  trailer.length()  *  start  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  start  +  1;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  end  =  trailer.length()  -  start  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  start  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start  +  2;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  end  =  trailer.length()  /  start  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  /  start  +  1;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  end  -=  trailer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  1  +  1;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  end  -=  trailer.length  -  3;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  3;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  +  1;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
50	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  1;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
51	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer.length;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
52	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  +  trailer.length;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  +  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  +  trailer.length;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
53	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  /  BYTE_MASK;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
54	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  /  2;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  /  2;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
55	[BUG]  [BUGGY]  end  -=  trailer.length  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  +  2;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
56	[BUG]  [BUGGY]  end  -=  trailer.length  /  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  /  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  /  1;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
57	[BUG]  [BUGGY]  end  -=  trailer.length  *  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  1;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
58	[BUG]  [BUGGY]  end  -=  trailer.length  +  3;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  +  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  +  3;	  end    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
59	[BUG]  [BUGGY]  end  =(length  -  trailer)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  trailer)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  trailer)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
60	[BUG]  [BUGGY]  end  =(trailer  -  start)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  start)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(trailer  -  start)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
61	[BUG]  [BUGGY]  end  =(end  -  start)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  start)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  start)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
62	[BUG]  [BUGGY]  end  =(length  -  start)?  0  :  -1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)?  0  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  0  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
63	[BUG]  [BUGGY]  end  =(length  -  offset)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  offset)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  offset)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
64	[BUG]  [BUGGY]  end  =(start  -  length)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  length)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(start  -  length)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
65	[BUG]  [BUGGY]  End  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  0;	  end    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
66	[BUG]  [BUGGY]  end  =(length  -  1)%  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)%  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)%  BYTE_MASK  +  1;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  end  =(end  -  1)%  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)%  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)%  BYTE_MASK;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  end  =(length  -  1)%  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)%  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)%  2;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  end  =(length  -  1)%  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)%  FALLBACK_ENCODING;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)%  FALLBACK_ENCODING;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
70	[BUG]  [BUGGY]  end  =(start  -  1)%  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  1)%  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(start  -  1)%  BYTE_MASK;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  end  =(trailer  -  1)%  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  1)%  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(trailer  -  1)%  BYTE_MASK;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  end  =(length  -  trailer)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  trailer)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  trailer)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
73	[BUG]  [BUGGY]  end  =(length  -  start)/  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)/  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)/  2;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
74	[BUG]  [BUGGY]  end  =(end  -  start)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  start)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  start)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
75	[BUG]  [BUGGY]  end  =(end  -  trailer)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  trailer)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  trailer)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
76	[BUG]  [BUGGY]  end  =(end  -  length)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  length)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  length)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
77	[BUG]  [BUGGY]  end  =(trailer  -  start)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(trailer  -  start)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(trailer  -  start)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
78	[BUG]  [BUGGY]  end  =(length  -  offset)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  offset)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  offset)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
79	[BUG]  [BUGGY]  end  =  trailer.length()  /  start-1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  /  start-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
80	[BUG]  [BUGGY]  end  =  trailer.length()  *  start-1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  start-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  end  =  trailer.length()  -  offset-1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  offset-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  offset-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  [Delete]  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	[Delete]	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
83	[BUG]  [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
84	[BUG]  [BUGGY]  bucket  <  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket  <  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket  <  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
85	[BUG]  [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  bucket  <  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket  <  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket  <  0  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
87	[BUG]  [BUGGY]  bucket  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  bucket  ==  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  bucket  ==  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	bucket  ==  0  ||  length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
89	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,''));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,''));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
90	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,''));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,''));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
91	[BUG]  [BUGGY]  end  =  trailer  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  end  =  length  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  2;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  end  =  start  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  start  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  start  -  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  end  -=  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  buffer.length  -  1;	  end    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
95	[BUG]  [BUGGY]  end  -=  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  buffer.length  +  1;	  end    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
96	[BUG]  [BUGGY]  end  -=  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  buffer.length  -  2;	  end    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
97	[BUG]  [BUGGY]  End  =  buffer.length();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  buffer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  buffer.length();	  end    =    buffer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  end  =  buffer[end  -  1].length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer[end  -  1].length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer[end  -  1].length();	  end    =    buffer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  end  =  block.length();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  block.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  block.length();	  end    =    buffer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
100	[BUG]  [BUGGY]  end  -=  0L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  0L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  0L;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
101	[BUG]  [BUGGY]  End  -=  0L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  0L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  0L;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
102	[BUG]  [BUGGY]  End  =  0L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  0L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  0L;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  BYTE_MASK  +  1;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
104	[BUG]  [BUGGY]  end  -=  trailer.length  *  4;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  4;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
105	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  2;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  BYTE_MASK  +  2;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
106	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  length;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  BYTE_MASK  +  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  BYTE_MASK  +  length;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
107	[BUG]  [BUGGY]  end  -=  4;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  4;	  end    -=    2;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
108	[BUG]  [BUGGY]  end  -=  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  3;	  end    -=    2;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
109	[BUG]  [BUGGY]  end  -=  8;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  8;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  8;	  end    -=    2;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
110	[BUG]  [BUGGY]  start  =  trailer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  -  1;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
111	[BUG]  [BUGGY]  start  =  trailer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  +  1;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
112	[BUG]  [BUGGY]  start  =  trailer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  *  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  *  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
113	[BUG]  [BUGGY]  start  =  trailer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  -  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
114	[BUG]  [BUGGY]  start  =  this.currentByte.length();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  this.currentByte.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  this.currentByte.length();	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
115	[BUG]  [BUGGY]  start  =  trailer.length()  +  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  +  2;	  start    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
116	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
117	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
118	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  -  trailer;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  -  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  -  trailer;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
119	[BUG]  [BUGGY]  End  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
120	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start  +  1;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
121	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  trailer.length;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  trailer.length;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
122	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  BYTE_MASK));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  BYTE_MASK));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  BYTE_MASK));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
123	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,''));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,''));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
124	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  0));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
125	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  false));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  false));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  false));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
126	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  '-'));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  '-'));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  '-'));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
127	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length));  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
128	[BUG]  [BUGGY]  end  =  trailer.length  /  3;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  3;	  end    =    trailer.length    -    3;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  end  =  trailer.length  -  start  1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  start  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start  1  +  1;	  end    =    trailer.length    -    start    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
130	[BUG]  [BUGGY]  end  =  trailer.length  -  offset  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  offset  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  offset  1;	  end    =    trailer.length    -    start    1;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
131	[BUG]  [BUGGY]  End  -=  trailer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  -  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  1  +  1;	  End    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
132	[BUG]  [BUGGY]  End  -=  trailer.length  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  /  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  /  1;	  End    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
133	[BUG]  [BUGGY]  end  =  buffer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  offset;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  offset;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
134	[BUG]  [BUGGY]  end  =  length  -  trailer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  trailer.length;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
135	[BUG]  [BUGGY]  end  =  trailer.length  -  offset  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  offset  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  offset  +  1;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
136	[BUG]  [BUGGY]  end  =  trailer.length  -  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  length;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
137	[BUG]  [BUGGY]  ==  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ==  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	==  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
139	[BUG]  [BUGGY]  End--;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End--;	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
140	[BUG]  [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
141	[BUG]  [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	endsWith(length  -  1))  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
142	[BUG]  [BUGGY]  End  -=  trailer.length  *  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  1;	  End    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  End  -=  trailer.length  +  3;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  +  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  +  3;	  End    -=    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
144	[BUG]  [BUGGY]  end  =  trailer.length()  -  length;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  length;	  end    =    trailer.length()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
145	[BUG]  [BUGGY]  end  =  trailer.length()  /  offset;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  offset;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  /  offset;	  end    =    trailer.length()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
146	[BUG]  [BUGGY]  end  =  buffer.length()  -  offset;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  offset;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  offset;	  end    =    trailer.length()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
147	[BUG]  [BUGGY]  end  =  buffer.length  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  2;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
148	[BUG]  [BUGGY]  end  =  buffer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  1  +  1;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
149	[BUG]  [BUGGY]  end  =  container.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  container.length  -  1;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
150	[BUG]  [BUGGY]  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
151	[BUG]  [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  'n')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
152	[BUG]  [BUGGY]  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '/')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
153	[BUG]  [BUGGY]  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
154	[BUG]  [BUGGY]  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  '[')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
155	[BUG]  [BUGGY]  end  =(end  -  1)*  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)*  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)*  BYTE_MASK;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
156	[BUG]  [BUGGY]  end  =(length  -  1)*  trailer;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  trailer;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
157	[BUG]  [BUGGY]  end  =(length  -  1)*  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  FALLBACK_ENCODING;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  FALLBACK_ENCODING;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
158	[BUG]  [BUGGY]  end  =(length  -  1)*  trailer.length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  trailer.length;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
159	[BUG]  [BUGGY]  end  =(start  -  1)*  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  1)*  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(start  -  1)*  BYTE_MASK;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
160	[BUG]  [BUGGY]  end  =(length  -  1)*  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  BYTE_MASK  +  1;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
161	[BUG]  [BUGGY]  end  =(end  -  1)*  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)*  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)*  BYTE_MASK  +  1;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
162	[BUG]  [BUGGY]  end  =  buffer.length  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  start  +  1;	  end    =    buffer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
163	[BUG]  [BUGGY]  end  =  buffer.length  -  trailer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  trailer.length;	  end    =    buffer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  end  =  buffer.length  -  start-1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  start-1;	  end    =    buffer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
165	[BUG]  [BUGGY]  result  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  result  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	result  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
166	[BUG]  [BUGGY]  if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
167	[BUG]  [BUGGY]  if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(trailer  ==  0)  {  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
168	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  1;  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  1;  end  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  1;  end  =  System.currentTimeMillis();	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
169	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.length;  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.length;  end  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer.length;  end  =  System.currentTimeMillis();	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
170	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  trailer;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  trailer;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
171	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  trailer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  trailer.length;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  end  =(length  <  0)?  -1  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  0)?  -1  :  end;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  <  0)?  -1  :  end;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
173	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  BYTE_MASK;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
174	[BUG]  [BUGGY]  end  =(end  >  0)?  -1  :  trailer;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  >  0)?  -1  :  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  >  0)?  -1  :  trailer;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
175	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  length;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
176	[BUG]  [BUGGY]  end  =(length  >  0)?  1  :  end;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  1  :  end;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  1  :  end;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
177	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
178	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
179	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
180	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
181	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--;  end--;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--;  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--;  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
182	[BUG]  [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  0,  length):  0;  end--;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  0,  length):  0;  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  0,  length):  0;  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
183	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end--;  end--;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end--;  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  0,  end--;  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
184	[BUG]  [BUGGY]  End  -=  trailer;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
185	[BUG]  [BUGGY]  End  -=  length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  length;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
186	[BUG]  [BUGGY]  End  -=  start  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start  +  1;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
187	[BUG]  [BUGGY]  End  -=  end;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  end;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  end;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
188	[BUG]  [BUGGY]  End  -=  start  +  length;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  start  +  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start  +  length;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
189	[BUG]  [BUGGY]  End  -=  start  +  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  start  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start  +  2;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
190	[BUG]  [BUGGY]  Context.reportError( "Unexpected  start  of  expression: "  +  trailer);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Unexpected  start  of  expression: "  +  trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Unexpected  start  of  expression: "  +  trailer);	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
191	[BUG]  [BUGGY]  Context.reportError( "Unexpected  end  of  expression: "  +  trailer);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Unexpected  end  of  expression: "  +  trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Unexpected  end  of  expression: "  +  trailer);	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
192	[BUG]  [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "+trailer+ "' ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "+trailer+ "' ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Unexpected  length  of  trailer  ' "+trailer+ "' ");	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
193	[BUG]  [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  length);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  length);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  length);	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
194	[BUG]  [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  start);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  start);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Unexpected  length  of  trailer  ' "  +  trailer  + "': "  +  start);	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
195	[BUG]  [BUGGY]  end  =  trailer.length  /  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
196	[BUG]  [BUGGY]  end  =  trailer.length  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  +  2;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
197	[BUG]  [BUGGY]  end  =  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  +  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
198	[BUG]  [BUGGY]  end  =  trailer.length  *  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  *  1;	  end    =    trailer.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
199	[BUG]  [BUGGY]  end  =  trailer.length  -  start  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  start  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start  +  2;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
200	[BUG]  [BUGGY]  end  =  length  -  trailer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  trailer.length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  trailer.length  +  1;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
201	[BUG]  [BUGGY]  end  =  trailer.length  /  start  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  start  +  1;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
202	[BUG]  [BUGGY]  end  -=  trailer.length  /  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  /  2;	  end    -=    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
203	[BUG]  [BUGGY]  End  =  trailer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  2;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
204	[BUG]  [BUGGY]  End  =  trailer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  1  +  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
205	[BUG]  [BUGGY]  End  =  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  buffer.length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  buffer.length  -  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
206	[BUG]  [BUGGY]  End  =  trailer.length  -  3;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  3;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
207	[BUG]  [BUGGY]  End  =  trailer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  1L;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
208	[BUG]  [BUGGY]  End  =  trailer.length  -  4;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  4;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
209	[BUG]  [BUGGY]  end  -=  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  1L;	  end    -=    1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
210	[BUG]  [BUGGY]  end  =  trailer.length()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  /  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
211	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  BYTE_MASK  +  1;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
212	[BUG]  [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
213	[BUG]  [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  +  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  +  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
214	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  -  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  BYTE_MASK  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  BYTE_MASK  -  1;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
215	[BUG]  [BUGGY]  end  =  Trailer.length();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  Trailer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  Trailer.length();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
216	[BUG]  [BUGGY]  end  =  trailer.length  /  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
217	[BUG]  [BUGGY]  end  =  trailer.length  -  128;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  128;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  128;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
218	[BUG]  [BUGGY]  end  =  buffer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  1L;	  end    =    trailer.length    -    1L;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
221	[BUG]  [BUGGY]  rackBlock(buffer,  offset,  length);  end--;  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  rackBlock(buffer,  offset,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	rackBlock(buffer,  offset,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
222	[BUG]  [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  end,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  end,  length):  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  end,  length):  0;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
223	[BUG]  [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  start,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  start,  length):  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  start,  length):  0;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
224	[BUG]  [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  start,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  start,  length):  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End-1  <  =  0?  System.arraycopy(buffer,  offset,  trailer,  start,  length):  0;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
225	[BUG]  [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  end,  length):  0;  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  end,  length):  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End-1  <  =  0?  System.arraycopy(buffer,  offset,  buffer,  end,  length):  0;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
226	[BUG]  [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  BYTE_MASK  +  1;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
227	[BUG]  [BUGGY]  End  -=  trailer.length  *  4;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  4;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
228	[BUG]  [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  BYTE_MASK  +  2;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
229	[BUG]  [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  length;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  BYTE_MASK  +  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  BYTE_MASK  +  length;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
230	[BUG]  [BUGGY]  End  -=  trailer.length  *  BYTE_SIZE;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  BYTE_SIZE;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  BYTE_SIZE;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
231	[BUG]  [BUGGY]  end  =  trailer.length  /  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  2;	  end    =    trailer.length    -    2;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
232	[BUG]  [BUGGY]  end  -=  length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length  -  1;	  end    -=    length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
233	[BUG]  [BUGGY]  end  -=  length  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length  +  1;	  end    -=    length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
234	[BUG]  [BUGGY]  end  -=  length  *  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  *  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length  *  2;	  end    -=    length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
235	[BUG]  [BUGGY]  end  -=  length  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length  -  2;	  end    -=    length;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
236	[BUG]  [BUGGY]  end  -=  trailer.length  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  2  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  2  +  1;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
237	[BUG]  [BUGGY]  end  -=  trailer.length  *  2  +  4;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  2  +  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  2  +  4;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
238	[BUG]  [BUGGY]  end  =  buffer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  +  1;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
239	[BUG]  [BUGGY]  end  -=  buffer.length();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  buffer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  buffer.length();	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
240	[BUG]  [BUGGY]  end  =  buffer.length()  -  start;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  start;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
241	[BUG]  [BUGGY]  End  =  trailer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length;	  end    =    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
242	[BUG]  [BUGGY]  End  -=  trailer.length  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  2  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  2  +  1;	  End    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
243	[BUG]  [BUGGY]  End  -=  trailer.length  *  2  +  4;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  2  +  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  2  +  4;	  End    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
244	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
245	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
246	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  trailer: "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
247	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( " ".equals(trailer)?  null  : " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
248	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer  + "': ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer  + "': ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Unexpected  length  of  trailer  ' "  +  trailer  + "': ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
249	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  trailer: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
250	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  +  1;	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
251	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  -  1;	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
252	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  /  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  /  BYTE_MASK;	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
253	[BUG]  [BUGGY]  End  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  System.currentTimeMillis();	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
254	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  +  trailer.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  +  trailer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  +  trailer.length;	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
255	[BUG]  [BUGGY]  end  =  trailer.length  -  offset-1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  offset-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  offset-1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
256	[BUG]  [BUGGY]  end  =  trailer.length  -  start-1  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  start-1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start-1  +  1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
257	[BUG]  [BUGGY]  end  =  length  -  trailer.length-1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  trailer.length-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  trailer.length-1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
258	[BUG]  [BUGGY]  end  =  trailer.length  /  start-1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  start-1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
259	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer[end  -  1]));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer[end  -  1]));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer[end  -  1]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
260	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer[end  -  1]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
261	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end[end  -  1]));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end[end  -  1]));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end[end  -  1]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
262	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end  -  1]));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end  -  1]));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end  -  1]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
263	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  buffer[end  -  1]));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  buffer[end  -  1]));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1,  buffer[end  -  1]));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
264	[BUG]  [BUGGY]  end  =  trailer.length()  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  /  2;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
265	[BUG]  [BUGGY]  end  =  trailer.length()  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  2  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  2  +  1;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
266	[BUG]  [BUGGY]  end  =  container.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length()  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  container.length()  -  1;	  end    =    container.length();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
267	[BUG]  [BUGGY]  end  -=  container.length();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  container.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  container.length();	  end    =    container.length();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
268	[BUG]  [BUGGY]  end  =  container.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  container.length()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  container.length()  +  1;	  end    =    container.length();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
269	[BUG]  [BUGGY]  end  =(length  -  1)/  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)/  2;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
270	[BUG]  [BUGGY]  end  =(end  -  1)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)/  BYTE_MASK;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
271	[BUG]  [BUGGY]  end  =(length  -  1)/  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)/  BYTE_MASK  +  1;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
272	[BUG]  [BUGGY]  end  =(end  -  1)/  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)/  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)/  BYTE_MASK  +  1;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
273	[BUG]  [BUGGY]  end  =(start  -  1)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  1)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(start  -  1)/  BYTE_MASK;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
274	[BUG]  [BUGGY]  end  =(length  -  1)/  4;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)/  4;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
275	[BUG]  [BUGGY]  End  -=  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  buffer.length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  buffer.length  -  1;	  End    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
276	[BUG]  [BUGGY]  End  -=  buffer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  buffer.length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  buffer.length  +  1;	  End    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
277	[BUG]  [BUGGY]  End  -=  buffer.length  *  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  buffer.length  *  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  buffer.length  *  2;	  End    -=    buffer.length;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
278	[BUG]  [BUGGY]  end  =  trailer.length  /  1  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  /  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  /  1  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
279	[BUG]  [BUGGY]  end  =  trailer.length  -  2  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  -  2  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  2  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
280	[BUG]  [BUGGY]  end  =  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  2;	  end    =    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
281	[BUG]  [BUGGY]  end  =(end  -  1)%  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)%  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)%  BYTE_MASK  +  1;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
282	[BUG]  [BUGGY]  End  -  start;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  start;	  End    -    1;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
283	[BUG]  [BUGGY]  end  -=  trailer.length  *  2L;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  2L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  2L;	  end    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
284	[BUG]  [BUGGY]  allowNegatives(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegatives(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	allowNegatives(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
285	[BUG]  [BUGGY]  allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	allowNegatives(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
286	[BUG]  [BUGGY]  allowNegate(length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegate(length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	allowNegate(length)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
287	[BUG]  [BUGGY]  allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	allowNegate(start)  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
288	[BUG]  [BUGGY]  end  =(length  -  1)/  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)/  FALLBACK_ENCODING;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)/  FALLBACK_ENCODING;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
289	[BUG]  [BUGGY]  end  =  length  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  start  +  1;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
290	[BUG]  [BUGGY]  end  =  start  -  trailer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  start  -  trailer.length  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  start  -  trailer.length  +  1;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
291	[BUG]  [BUGGY]  end  =  buffer.length()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  *  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
292	[BUG]  [BUGGY]  End  =  trailer.length()  /  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  /  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  /  BYTE_MASK;	  end    =    trailer.length()    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
293	[BUG]  [BUGGY]  end  =  trailer.trim();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.trim();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.trim();	  end    =    trailer.length()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
294	[BUG]  [BUGGY]  End  -=  trailer.length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length();	  end    -=    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
295	[BUG]  [BUGGY]  End  -=  trailer.length  *  2  +  length;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  2  +  length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  2  +  length;	  End    -=    trailer.length    *    2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
296	[BUG]  [BUGGY]  end  =  length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  1  +  1;	  end    =    length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
297	[BUG]  [BUGGY]  end  =  buffer.length  -  start  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length  -  start  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  start  1;	  end    =    buffer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
298	[BUG]  [BUGGY]  end  =  trailer.length()  *  offset;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  *  offset;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  offset;	  end    =    trailer.length()    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
299	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
300	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  loadMillis();	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
301	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  loadMillis(buffer,  offset,  length);	  start    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
302	[BUG]  [BUGGY]  end  =(end  >  0)?  -1  :  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  >  0)?  -1  :  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  >  0)?  -1  :  BYTE_MASK;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
303	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  buffer.length;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  buffer.length;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
304	[BUG]  [BUGGY]  end  =(length  <  =  0)?  -1  :  end;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  <  =  0)?  -1  :  end;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  <  =  0)?  -1  :  end;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
305	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  start;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  start;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
306	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  buffer[end-1];  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  buffer[end-1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  buffer[end-1];	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
307	[BUG]  [BUGGY]  end  -=  trailer;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer;	  end    -=    0;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
308	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  start-1,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
309	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
310	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  trailer));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-2,  trailer));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
311	[BUG]  [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Trailer  <  T>  trailer  =  buffer[end  -  1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Trailer  <  T>  trailer  =  buffer[end  -  1];	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
312	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1]  +  start;  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  trailer  =  buffer[end  -  1]  +  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	trailer  =  buffer[end  -  1]  +  start;	  trailer    =    buffer[end    -    1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
313	[BUG]  [BUGGY]  end  =  0L  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  0L  *  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
314	[BUG]  [BUGGY]  end  =  0L  |  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  |  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  0L  |  BYTE_MASK;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
315	[BUG]  [BUGGY]  end  =  0L  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  0L  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  0L  +  1;	  end    =    0L;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
316	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
317	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end-1);  end--;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end-1);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end-1);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
318	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
319	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
320	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start-1;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start-1;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
321	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis(trailer);  end  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  loadMillis(trailer);  end  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  loadMillis(trailer);  end  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
322	[BUG]  [BUGGY]  End  -=  start-1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start-1;	  End    -=    start;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
323	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  +  1;  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  +  1;  end  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  +  1;  end  =  System.currentTimeMillis();	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
324	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer;  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer;  end  =  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer;  end  =  System.currentTimeMillis();	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
325	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  +  1;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
326	[BUG]  [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
327	[BUG]  [BUGGY]  End  >  0)  {  start--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  start--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  start--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
328	[BUG]  [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ", ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
329	[BUG]  [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
330	[BUG]  [BUGGY]  end  =  buffer.length()  -  start-1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  start-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
331	[BUG]  [BUGGY]  end  =  trailer.length()  -  start-1  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  start-1  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start-1  +  1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
332	[BUG]  [BUGGY]  end  =  trailer.length()  -  start0;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  start0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start0;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
333	[BUG]  [BUGGY]  End  =  trailer.length()  -  start-1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length()  -  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length()  -  start-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
334	[BUG]  [BUGGY]  end  =  buffer.length(1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length(1);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length(1);	  end    =    buffer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
335	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: "  +  trailer);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: "  +  trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
336	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  ' "  +  trailer);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  ' "  +  trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  ' "  +  trailer);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
337	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
338	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
339	[BUG]  [BUGGY]  end  =  buffer.length()  /  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  /  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  /  2;	  end    =    trailer.length()    *    2;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
340	[BUG]  [BUGGY]  end  -=  trailer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  1L;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
341	[BUG]  [BUGGY]  end  =  buffer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  2;	  end    =    buffer.length();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
342	[BUG]  [BUGGY]  Context.report(start,  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(start,  BYTE_MASK);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(start,  BYTE_MASK);	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
343	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  end));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  trailer,  end));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  trailer,  end));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
344	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer,  end));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  offset,  length,  buffer,  end));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  offset,  length,  buffer,  end));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
345	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  0,  start,  length));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  0,  start,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  0,  start,  length));	  Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
346	[BUG]  [BUGGY]  End  -=  trailer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  -  1L;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  1L;	  End    -=    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
347	[BUG]  [BUGGY]  end  =  trailer.length()  -  start2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  start2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start2;	  end    =    trailer.length()    -    start    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
348	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  start,  length));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  start,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  start,  length));	  Context.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
349	[BUG]  [BUGGY]  end  =  length  -  start;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  start;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
350	[BUG]  [BUGGY]  end  =  length  -  trailer;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  trailer;	  end    =    trailer.length    -    offset;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
351	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '/'));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '/'));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  '/'));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
352	[BUG]  [BUGGY]  end  =(length  -  start)?  -1  :  0;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)?  -1  :  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  -1  :  0;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
353	[BUG]  [BUGGY]  end  =(length  -  start)?  1  :  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)?  1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
354	[BUG]  [BUGGY]  end  =  System.currentTimeMillis()  +  start;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  System.currentTimeMillis()  +  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis()  +  start;	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
355	[BUG]  [BUGGY]  End  -=  start  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  start  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start  *  BYTE_MASK;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
356	[BUG]  [BUGGY]  End  -=  trailer.length  *  3;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  *  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  3;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
357	[BUG]  [BUGGY]  end  -=  trailer.length  *  3;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  3;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  3;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
358	[BUG]  [BUGGY]  end  -=  trailer.length  *  5;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  5;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  5;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
359	[BUG]  [BUGGY]  end  -=  trailer.length  *  8;  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  *  8;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  8;	  end    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
360	[BUG]  [BUGGY]  end  =(length  -  start)/  BYTE_MASK  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)/  BYTE_MASK  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)/  BYTE_MASK  +  1;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
361	[BUG]  [BUGGY]  end  =(length  -  start)/  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)/  FALLBACK_ENCODING;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)/  FALLBACK_ENCODING;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
362	[BUG]  [BUGGY]  end  =(start  -  length)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(start  -  length)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(start  -  length)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
363	[BUG]  [BUGGY]  ||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  ||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  ==  ':')  {  throw  new  IllegalArgumentException( " ");  }	  ||    trailer    =='')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
364	[BUG]  [BUGGY]  end  =  trailer.length()  -  offset  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  offset  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  offset  +  1;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
365	[BUG]  [BUGGY]  end  =  buffer.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  buffer.length()  -  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  start  +  1;	  end    =    trailer.length()    -    start    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
366	[BUG]  [BUGGY]  end  =(end  -  1)*  FALLBACK_ENCODING;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)*  FALLBACK_ENCODING;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)*  FALLBACK_ENCODING;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
367	[BUG]  [BUGGY]  end  =(length  -  1)*  2;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  2;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
368	[BUG]  [BUGGY]  end  =(length  -  1)*  4;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  1)*  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  4;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
369	[BUG]  [BUGGY]  End  =  end  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  end  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  end  -  1;	  End    =    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
370	[BUG]  [BUGGY]  end  -=  start;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  start;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
371	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
372	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  end,  length);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
373	[BUG]  [BUGGY]  rackEnd  =  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  rackEnd  =  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	rackEnd  =  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
374	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  end);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
375	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length  +  1);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
376	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length-1);  end--;  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length-1);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length-1);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
377	[BUG]  [BUGGY]  start  =  buffer.length();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  buffer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  buffer.length();	  start    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
378	[BUG]  [BUGGY]  start  =  trailer.length()  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.length()  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length()  *  BYTE_MASK;	  start    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
379	[BUG]  [BUGGY]  end  =  length  -  start-1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  length  -  start-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  start-1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
380	[BUG]  [BUGGY]  end  =  start  -  trailer.length-1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  start  -  trailer.length-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  start  -  trailer.length-1;	  end    =    trailer.length    -    start-1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
381	[BUG]  [BUGGY]  end  =  trailer.length()  -  length-1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  length-1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  length-1;	  end    =    trailer.length()    -    start-1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  end);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	System.arraycopy(buffer,  offset,  trailer,  0,  length);  end--;	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
384	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--);  end--;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  end--);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    0,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
385	[BUG]  [BUGGY]  end  =  trailer.length()  -  offset  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length()  -  offset  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  offset  1;	  end    =    trailer.length()    -    start    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
386	[BUG]  [BUGGY]  End  =  trailer.length  -  start  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  start  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  start  +  1;	  end    =    trailer.length    -    start    +    1;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
387	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,''));  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,''));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
388	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  ''));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  ''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  ''));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
389	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  ''));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  ''));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  buffer,  end-1,  ''));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,''));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
390	[BUG]  [BUGGY]  end  =(end  -  trailer)?  -1  :  -1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  trailer)?  -1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  trailer)?  -1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
391	[BUG]  [BUGGY]  end  =(length  -  start)?  0  :  0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)?  0  :  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  0  :  0;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
392	[BUG]  [BUGGY]  end  =(length  -  trailer)?  1  :  -1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  trailer)?  1  :  -1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  trailer)?  1  :  -1;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
393	[BUG]  [BUGGY]  end  =(length  -  start)?  1  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  start)?  1  :  0;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  1  :  0;	  end    =(length    -    start)?    -1    :    -1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
394	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end--,  length));  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end--,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end--,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
395	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  end-1,  length));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  end-1,  length));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  0,  end-1,  length));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer,    end-1,    length));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
396	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1));  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  trailer,  end-1));	  throw    new    IllegalArgumentException(exceptionMessage(buffer,    offset,    length,    buffer[end    -    1]));    	non-compiled	[CE]  <identifier>  expected	57	None	replace
397	[BUG]  [BUGGY]  end  -  1  =  trailer.length();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -  1  =  trailer.length();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -  1  =  trailer.length();	  end    =    trailer.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
398	[BUG]  [BUGGY]  End  end  =  trailer.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  end  =  trailer.length  -  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  end  =  trailer.length  -  1;	  end    =    buffer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
399	[BUG]  [BUGGY]  end  -=  length  *  BYTE_MASK;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  length  *  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length  *  BYTE_MASK;	  end    -=    length;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
400	[BUG]  [BUGGY]  Context.report(JSError.make(buffer,  start,  length,  trailer,  BYTE_MASK));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.report(JSError.make(buffer,  start,  length,  trailer,  BYTE_MASK));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.report(JSError.make(buffer,  start,  length,  trailer,  BYTE_MASK));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
401	[BUG]  [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
402	[BUG]  [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  >=  [Delete]  else  if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	>=  [Delete]  else  if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
403	[BUG]  [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  start-1,  trailer));  }	  if(length    >    0)    {    end--;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
404	[BUG]  [BUGGY]  end  =  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerEncoding.UTF8;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  TrailerEncoding.UTF8;	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
405	[BUG]  [BUGGY]  end  =  TrailerEncoding.getInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  TrailerEncoding.getInstance();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  TrailerEncoding.getInstance();	  end    =    buffer.length;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
406	[BUG]  [BUGGY]  End  =  trailer.length  -  start;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.length  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  start;	  end    =    buffer.length    -    start;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
407	[BUG]  [BUGGY]  End  -  1,  trailer  =  buffer[end-1];  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1,  trailer  =  buffer[end-1];  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1,  trailer  =  buffer[end-1];	  End    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
408	[BUG]  [BUGGY]  End  -  1,  trailer.getChars(offset,  end);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1,  trailer.getChars(offset,  end);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1,  trailer.getChars(offset,  end);	  End    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
409	[BUG]  [BUGGY]  End  -  1,  trailer.getChars(offset,  length);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1,  trailer.getChars(offset,  length);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1,  trailer.getChars(offset,  length);	  End    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
410	[BUG]  [BUGGY]  End  -  1,  trailer  =  getCurrentOffset();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -  1,  trailer  =  getCurrentOffset();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1,  trailer  =  getCurrentOffset();	  End    -    1;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
411	[BUG]  [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  >  0)  {  System.arraycopy(buffer,  offset,  trailer,  start,  length);  end--;  }	  if(length    >    0)    {    System.arraycopy(buffer,    offset,    buffer,    start,    length);    end--;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
412	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMillis())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMillis())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceMillis())  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
413	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(length))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(length))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceMatcher(length))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
414	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceMatcher(trailer))  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
415	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceVariable())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceVariable())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceVariable())  {  throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
416	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
417	[BUG]  [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	aught(new  IllegalArgumentException( " ").instanceMatcher(trailer)).throw  new  IllegalArgumentException( " ");  }	  if(length    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
418	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.getStartMillis();  end  =  System.currentTimeMillis()  -  start;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.getStartMillis();  end  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer.getStartMillis();  end  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
419	[BUG]  [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.getOffset();  end  =  System.currentTimeMillis()  -  start;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  System.currentTimeMillis()  -  trailer.getOffset();  end  =  System.currentTimeMillis()  -  start;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis()  -  trailer.getOffset();  end  =  System.currentTimeMillis()  -  start;	  start    =    System.currentTimeMillis();    end    =    System.currentTimeMillis()    -    start;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
420	[BUG]  [BUGGY]  end  -=  trailer.length  -  4;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  trailer.length  -  4;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  4;	  end    -=    trailer.length    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
421	[BUG]  [BUGGY]  end  -=(length  -  1)%  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=(length  -  1)%  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=(length  -  1)%  BYTE_MASK;	  end    =(length    -    1)%    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
422	[BUG]  [BUGGY]  End  -=  TrailerEncoding.UTF8;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  TrailerEncoding.UTF8;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  TrailerEncoding.UTF8;	  End    -=    buffer.length;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
423	[BUG]  [BUGGY]  End  -=  TrailerEncoding.BYTE_MASK;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  TrailerEncoding.BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  TrailerEncoding.BYTE_MASK;	  End    -=    buffer.length;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
424	[BUG]  [BUGGY]  end  =(end  -  1)*  trailer;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)*  trailer;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)*  trailer;	  end    =(length    -    1)*    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
425	[BUG]  [BUGGY]  End  =  trailer.getEnd();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  =  trailer.getEnd();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.getEnd();	  End    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
426	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  ' ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  ' ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  ' ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
427	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer. ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer. ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Failed  to  parse  a  buffer. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
428	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  throw  new  IllegalArgumentException( "Byte  is  not  supported. ");  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( "Byte  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
429	[BUG]  [BUGGY]  end  =(length  -  trailer.length)/  BYTE_MASK;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  -  trailer.length)/  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  trailer.length)/  BYTE_MASK;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
430	[BUG]  [BUGGY]  end  =(end  -  start)/  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  start)/  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  start)/  2;	  end    =(length    -    start)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
431	[BUG]  [BUGGY]  end  =(end  -  1)/  2;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  -  1)/  2;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  -  1)/  2;	  end    =(length    -    1)/    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
432	[BUG]  [BUGGY]  End  -=  trailer.length  /  BYTE_MASK;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  End  -=  trailer.length  /  BYTE_MASK;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  /  BYTE_MASK;	  End    -=    trailer.length    *    BYTE_MASK;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
433	[BUG]  [BUGGY]  end  -=  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  -=  System.currentTimeMillis();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  System.currentTimeMillis();	  end    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
434	[BUG]  [BUGGY]  start  =  trailer.getLength();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  start  =  trailer.getLength();  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.getLength();	  start    =    trailer.length();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
435	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(length  >  0)?  -1  :  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  1;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
436	[BUG]  [BUGGY]  end  =(end  >  0)?  -1  :  end;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =(end  >  0)?  -1  :  end;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(end  >  0)?  -1  :  end;	  end    =(length    >    0)?    -1    :    end;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
437	[BUG]  [BUGGY]  end  =  trailer.length  *  2  +  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  end  =  trailer.length  *  2  +  1;  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  *  2  +  1;	  end    =    trailer.length    -    1    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
438	[BUG]  [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+trailer);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+trailer);  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Current  context  not  an  ARRAY  but "+trailer);	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
439	[BUG]  [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceEncoding.quoteAsString(trailer));  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceEncoding.quoteAsString(trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Current  context  not  an  ARRAY  but "+TraceEncoding.quoteAsString(trailer));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
440	[BUG]  [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.toHexString(trailer));  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.toHexString(trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.toHexString(trailer));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
441	[BUG]  [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.stringValue(trailer));  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){      [BUGGY]  Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.stringValue(trailer));  [BUGGY]      }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportError( "Current  context  not  an  ARRAY  but "+TraceUtils.stringValue(trailer));	  Context.codeBug();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
