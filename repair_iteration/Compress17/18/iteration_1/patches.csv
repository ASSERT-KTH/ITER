bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  end  =  trailer.length()  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  -  start  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start  +  1;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  end  =  trailer.length()  -  start-1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  -  start-1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start-1;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  end  =  trailer.length()  -  start  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  -  start  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  start  1;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  end  =  trailer.length()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  +  1;	  end    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  end  =  trailer.length()  -  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  -  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  2;	  end    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  end  =  trailer.length()  *  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  *  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  2;	  end    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  end  =  trailer.length()  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  *  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  *  BYTE_MASK;	  end    =    trailer.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  end  =(length  -  1)%  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  -  1)%  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)%  BYTE_MASK;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  end  =(length  -  1)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  -  1)/  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)/  BYTE_MASK;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  end  =(length  -  1)*  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  -  1)*  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  1)*  BYTE_MASK;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  end  =  length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  length  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  length  -  1;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  End  -=  trailer.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  trailer.length  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  1;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  End  -=  trailer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  trailer.length  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  +  1;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  End  -=  trailer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  trailer.length  -  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  -  2;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  End  -=  trailer.length  *  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  trailer.length  *  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  2;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  End  -=  trailer.length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  trailer.length  *  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  trailer.length  *  BYTE_MASK;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  End  =  trailer.length();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  =  trailer.length();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  end  =  buffer.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  buffer.length()  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length()  -  1;	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  end  -=  trailer.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  end  =  buffer.length();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  buffer.length();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  end  =  container.length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  container.length();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  container.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  end  =  trailer.length  -  2;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  2;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  end  =  buffer.length  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  buffer.length  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  end  =  trailer.length  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  1  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  1  +  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  End  =  trailer.length  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  =  trailer.length  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  =  trailer.length  -  1;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  end  =  trailer.length  -  1L;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  1L;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  1L;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  end  =  trailer.length  -  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  3;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  3;	  end    =    trailer.length    -    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  end  =  trailer.length  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  +  1;	  end    =    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  end  =  buffer.length;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  buffer.length;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length;	  end    =    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  ||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	||  trailer  =='')  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(length  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  Context.reportCodeChange();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  Context.codeBug();  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  Context.codeBug();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	Context.codeBug();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  trailer  =  buffer[end  -  1];  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  trailer  =  buffer[end  -  1];  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	trailer  =  buffer[end  -  1];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  end  =  trailer.length  -  start  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  start  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start  +  1;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  end  =  trailer.length  -  offset;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  offset;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  offset;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  end  =  trailer.length  -  start-1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  start-1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start-1;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  end  =  trailer.length  -  start  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length  -  start  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length  -  start  1;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  System.currentTimeMillis();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  System.currentTimeMillis();	  end    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  end  =  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  1;	  end    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  end  =  0L;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  0L;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  0L;	  end    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  end  -=  length;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  length;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  length;	  end    -    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  end  -=  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  1;	  end    -    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  end  -=  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  2;	  end    -    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  end  -=  trailer.length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  1;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  end  -=  trailer.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length  +  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  +  1;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  end  -=  trailer.length  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length  -  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  -  2;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
50	[BUG]  [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length  *  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  BYTE_MASK;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  end  -=  trailer.length  *  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  trailer.length  *  2;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  trailer.length  *  2;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  end  -=  buffer.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  buffer.length;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  buffer.length;	  end    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  end  =  trailer;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer;	  end    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  end  =  buffer.length  -  start;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  buffer.length  -  start;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  buffer.length  -  start;	  end    =    trailer.length    -    start;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  start  =  System.currentTimeMillis();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,''));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,''));  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,''));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer[end  -  1]));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length));  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length));  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	throw  new  IllegalArgumentException(exceptionMessage(buffer,  offset,  length,  buffer,  end-1,  length));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  start  =  trailer.length();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  start  =  trailer.length();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  trailer.length();	  end    =    trailer.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  end  =(length  -  start)/  BYTE_MASK;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  -  start)/  BYTE_MASK;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)/  BYTE_MASK;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  end  =(length  >  0)?  -1  :  end;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  >  0)?  -1  :  end;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  >  0)?  -1  :  end;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
62	[BUG]  [BUGGY]  End  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -  1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -  1;	  end    -    1;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  End  -=  start;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  start;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  start;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  End  -=  buffer.length;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  End  -=  buffer.length;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	End  -=  buffer.length;	  End    -=    trailer.length;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(length  >  0)  {  end--;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  0,  length);  end--;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start;  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	start  =  System.currentTimeMillis();  end  =  System.currentTimeMillis()  -  start;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	if(length  >  0)  {  System.arraycopy(buffer,  offset,  buffer,  start,  length);  end--;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  end  -=  0;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  -=  0;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  -=  0;	  end    =    0;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  end  =(length  -  start)?  -1  :  -1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =(length  -  start)?  -1  :  -1;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =(length  -  start)?  -1  :  -1;	  end    =    -1;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  end  =  trailer.length()  -  offset;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    start++;  }  else  {  break;  }  }  byte  trailer;  trailer  =  buffer[end-1];  if  (trailer  ==  0  ||  trailer  ==  '  '){    [BUGGY]  end  =  trailer.length()  -  offset;  [BUGGY]    }  else  {  throw  new  IllegalArgumentException(  exceptionMessage(buffer,  offset,  length,  end-1,  trailer));  }  trailer  =  buffer[end  -  1];  if  (trailer  ==  0  ||  trailer  ==  '  '){  end--;  }  [CLASS]  TarUtils  1  [METHOD]  parseOctal  [RETURN_TYPE]  long  final  byte[]  buffer  final  int  offset  final  int  length  [VARIABLES]  byte[]  buffer  boolean  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  int  BYTE_MASK  end  i  length  offset  start  long  result  byte  currentByte  trailer  	projects/Compress17/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	0.5	128	128	1	replace	end  =  trailer.length()  -  offset;	  end    =    trailer.length()    -    start;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
