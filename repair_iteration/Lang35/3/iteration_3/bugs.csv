bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(type);	  type    =    JsonStringEncoder.getInstance().getTypeDesc();    	non-compiled	[CE]  not  a  statement	33	None	replace
2	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  type);	  type    =    JsonStringEncoder.getInstance().getTypeDesc();    	non-compiled	[CE]  not  a  statement	33	None	replace
3	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encode(array,  type);	  type    =    JsonStringEncoder.getInstance().encode(array,    null);    	non-compiled	[CE]  not  a  statement	56	None	replace
4	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encode(array,  element);	  type    =    JsonStringEncoder.getInstance().encode(array,    null);    	non-compiled	[CE]  not  a  statement	56	None	replace
5	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encode(array,  subarray);	  type    =    JsonStringEncoder.getInstance().encode(array,    null);    	non-compiled	[CE]  not  a  statement	56	None	replace
6	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRootType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRootType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRootType();	  Type[]    array    =    element.getRawType();    	non-compiled	[CE]  not  a  statement	22	None	replace
7	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  result,  type);	  ArrayUtils.copyCurrentStructure(array,    result);    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  subarray);	  ArrayUtils.copyCurrentStructure(array,    result);    	non-compiled	[CE]  not  a  statement	13	None	replace
9	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	15	None	replace
10	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	15	None	replace
11	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow(array,  type,  subarray);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	19	None	replace
12	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow(array,  type,  subarray.length);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	19	None	replace
13	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow(array,  type,  newArray);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	19	None	replace
14	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  Object.class);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow(array,  type,  Object.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow(array,  type,  Object.class);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	19	None	replace
15	[BUG]  [BUGGY]  type  =  array.getSuperclass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  array.getSuperclass();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  array.getSuperclass();	  type    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	1	None	replace
16	[BUG]  [BUGGY]  type  =  array.getType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  array.getType();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  array.getType();	  type    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  Type[]  array  =  element.getElementTypes();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementTypes();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementTypes();	  Type[]    array    =    element.getParameterTypes();    	non-compiled	[CE]  not  a  statement	27	None	replace
18	[BUG]  [BUGGY]  Type[]  array  =  element.getRawTypes();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawTypes();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawTypes();	  Type[]    array    =    element.getParameterTypes();    	non-compiled	[CE]  not  a  statement	27	None	replace
19	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  INDEX_NOT_FOUND);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
20	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  Object.class);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  Object.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  Object.class);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
21	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
22	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  type);	  type    =    JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE);    	non-compiled	[CE]  not  a  statement	45	None	replace
23	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(OBJECT_TYPE);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(OBJECT_TYPE);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(OBJECT_TYPE);	  type    =    JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE);    	non-compiled	[CE]  not  a  statement	45	None	replace
24	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  array);	  type    =    JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE);    	non-compiled	[CE]  not  a  statement	45	None	replace
25	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRootElement();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRootElement();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRootElement();	  Type[]    array    =    element.getElementType();    	non-compiled	[CE]  not  a  statement	21	None	replace
26	[BUG]  [BUGGY]  Type[]  array  =  type.getElementType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  type.getElementType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  type.getElementType();	  Type[]    array    =    element.getElementType();    	non-compiled	[CE]  not  a  statement	21	None	replace
27	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	59	None	replace
28	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	59	None	replace
29	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  newArray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  newArray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  newArray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	59	None	replace
30	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsString(array,  type);	  type    =    JsonStringEncoder.getInstance().quoteAsString(array);    	non-compiled	[CE]  not  a  statement	64	None	replace
31	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsArray(array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsArray(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsArray(array);	  type    =    JsonStringEncoder.getInstance().quoteAsString(array);    	non-compiled	[CE]  not  a  statement	64	None	replace
32	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsCharacter(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsCharacter(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsCharacter(array);	  type    =    JsonStringEncoder.getInstance().quoteAsString(array);    	non-compiled	[CE]  not  a  statement	64	None	replace
33	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstanceUTC();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstanceUTC();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstanceUTC();	  type    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  not  a  statement	35	None	replace
34	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance(element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance(element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance(element);	  type    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  not  a  statement	35	None	replace
35	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance(type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance(type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance(type);	  type    =    JsonStringEncoder.getInstance();    	non-compiled	[CE]  not  a  statement	35	None	replace
36	[BUG]  [BUGGY]  Type[]  array  =  element.getRawTypeParameters();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawTypeParameters();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawTypeParameters();	  Type[]    array    =    element.getDeclaredTypeParameters();    	non-compiled	[CE]  not  a  statement	51	None	replace
37	[BUG]  [BUGGY]  Type[]  array  =  element.getSuperclassParameters();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getSuperclassParameters();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getSuperclassParameters();	  Type[]    array    =    element.getDeclaredTypeParameters();    	non-compiled	[CE]  not  a  statement	51	None	replace
38	[BUG]  [BUGGY]  Type[]  array  =  element.getDeclaredTypeParameters(type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getDeclaredTypeParameters(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getDeclaredTypeParameters(type);	  Type[]    array    =    element.getDeclaredTypeParameters();    	non-compiled	[CE]  not  a  statement	51	None	replace
39	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    result);    	non-compiled	[CE]  not  a  statement	16	None	replace
40	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result,  subarray);	  ArrayUtils.copyCurrentStructure(array,    type,    result);    	non-compiled	[CE]  not  a  statement	16	None	replace
41	[BUG]  [BUGGY]  type  =  EMPTY_STRING_ARRAY.class;  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_STRING_ARRAY.class;  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_STRING_ARRAY.class;	  type    =    EMPTY_OBJECT_ARRAY.class;    	non-compiled	[CE]  not  a  statement	44	None	replace
42	[BUG]  [BUGGY]  type  =  EMPTY_OBJECT_ARRAY  [type];  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_OBJECT_ARRAY  [type];  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_OBJECT_ARRAY  [type];	  type    =    EMPTY_OBJECT_ARRAY.class;    	non-compiled	[CE]  not  a  statement	44	None	replace
43	[BUG]  [BUGGY]  Type[]  newArray  =  array.getType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  array.getType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  array.getType();	  Type[]    newArray    =    array.getRawClass();    	non-compiled	[CE]  not  a  statement	6	None	replace
44	[BUG]  [BUGGY]  Type[]  newArray  =  array.getElements();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  array.getElements();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  array.getElements();	  Type[]    newArray    =    array.getRawClass();    	non-compiled	[CE]  not  a  statement	6	None	replace
45	[BUG]  [BUGGY]  Type[]  newArray  =  array.getDeclaredTypes();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  array.getDeclaredTypes();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  array.getDeclaredTypes();	  Type[]    newArray    =    array.getRawClass();    	non-compiled	[CE]  not  a  statement	6	None	replace
46	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  newArray.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	38	None	replace
47	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow1(array,  type,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow1(array,  type,  array.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	38	None	replace
48	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	38	None	replace
49	[BUG]  [BUGGY]  type  =  array.getDeclaredClass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  array.getDeclaredClass();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  array.getDeclaredClass();	  type    =    element.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	63	None	replace
50	[BUG]  [BUGGY]  type  =  element.getSuperclass();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.getSuperclass();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.getSuperclass();	  type    =    element.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	63	None	replace
51	[BUG]  [BUGGY]  type  =  element.getReturnType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.getReturnType();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.getReturnType();	  type    =    element.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	63	None	replace
52	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  element);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
53	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJSArray(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJSArray(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJSArray(array);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
54	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(type);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
55	[BUG]  [BUGGY]  array  =(T)this.array.clone();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T)this.array.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T)this.array.clone();	  array    =(T)super.array.clone();    	non-compiled	[CE]  not  a  statement	24	None	replace
56	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray[newArray.length  -  1]);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray[newArray.length  -  1]);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray[newArray.length  -  1]);	  ArrayUtils.copyCurrentStructure(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	14	None	replace
57	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  newArray,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  newArray,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  newArray,  type);	  ArrayUtils.copyCurrentStructure(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	14	None	replace
58	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray,  newArray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray,  newArray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray,  newArray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	14	None	replace
59	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  element);	  type    =    JsonStringEncoder.getInstance().getTypeDesc(array);    	non-compiled	[CE]  not  a  statement	28	None	replace
60	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  subarray);	  type    =    JsonStringEncoder.getInstance().getTypeDesc(array);    	non-compiled	[CE]  not  a  statement	28	None	replace
61	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  -  1);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  array.length  -  1);	  Type[]    copyArrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
62	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  +  1);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  +  1);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  array.length  +  1);	  Type[]    copyArrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
63	[BUG]  [BUGGY]  array  =(T)super.clone();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T)super.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T)super.clone();	  array    =(T)element.clone();    	non-compiled	[CE]  not  a  statement	25	None	replace
64	[BUG]  [BUGGY]  array  =(T)type.clone();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T)type.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T)type.clone();	  array    =(T)element.clone();    	non-compiled	[CE]  not  a  statement	25	None	replace
65	[BUG]  [BUGGY]  Type[]  newArray  =  element.getType();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  element.getType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  element.getType();	  Type[]    newArray    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	7	None	replace
66	[BUG]  [BUGGY]  Type[]  newArray  =  element.getRawType();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  element.getRawType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  element.getRawType();	  Type[]    newArray    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	7	None	replace
67	[BUG]  [BUGGY]  Type[]  array  =  element.getRawParameterType(0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawParameterType(0);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawParameterType(0);	  Type[]    array    =    element.getParameterType(0);    	non-compiled	[CE]  not  a  statement	46	None	replace
68	[BUG]  [BUGGY]  Type[]  array  =  element.getElementType(0);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementType(0);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementType(0);	  Type[]    array    =    element.getParameterType(0);    	non-compiled	[CE]  not  a  statement	46	None	replace
69	[BUG]  [BUGGY]  Type[]  array  =  element.getRawType(0);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawType(0);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawType(0);	  Type[]    array    =    element.getParameterType(0);    	non-compiled	[CE]  not  a  statement	46	None	replace
70	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  type);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	48	None	replace
71	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsArray(type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsArray(type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsArray(type);	  type    =    JsonStringEncoder.getInstance().quoteAsString(type);    	non-compiled	[CE]  not  a  statement	66	None	replace
72	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().asArray();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().asArray();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().asArray();	  type    =    JsonStringEncoder.getInstance().type;    	non-compiled	[CE]  not  a  statement	34	None	replace
73	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().arrayType;  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().arrayType;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().arrayType;	  type    =    JsonStringEncoder.getInstance().type;    	non-compiled	[CE]  not  a  statement	34	None	replace
74	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
75	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
76	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
77	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(array,  type);	  type    =    JsonStringEncoder.getInstance().getJsonString(type);    	non-compiled	[CE]  not  a  statement	41	None	replace
78	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(type,  array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(type,  array);	  type    =    JsonStringEncoder.getInstance().getJsonString(type);    	non-compiled	[CE]  not  a  statement	41	None	replace
79	[BUG]  [BUGGY]  array  =(T[])type.cloneByteArray();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])type.cloneByteArray();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])type.cloneByteArray();	  array    =(T[])type.clone();    	non-compiled	[CE]  not  a  statement	29	None	replace
80	[BUG]  [BUGGY]  Type[]  array  =(Type[])array.clone();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =(Type[])array.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =(Type[])array.clone();	  type    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	62	None	replace
81	[BUG]  [BUGGY]  type  =(T)type.clone();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =(T)type.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =(T)type.clone();	  type    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	62	None	replace
82	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_BYTE_ARRAY.class);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_BYTE_ARRAY.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  EMPTY_BYTE_ARRAY.class);	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
83	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_INT_ARRAY,  Object.class);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_INT_ARRAY,  Object.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  EMPTY_INT_ARRAY,  Object.class);	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
84	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  Object.class,  array.length);  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  Object.class,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  Object.class,  array.length);	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
85	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(array,  element);	  type    =    JsonStringEncoder.getInstance().getJsonString(element);    	non-compiled	[CE]  not  a  statement	42	None	replace
86	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  type);	  type    =    JsonStringEncoder.getInstance().quoteAsObject(array);    	non-compiled	[CE]  not  a  statement	61	None	replace
87	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  INDEX_NOT_FOUND);	  type    =    JsonStringEncoder.getInstance().quoteAsObject(array);    	non-compiled	[CE]  not  a  statement	61	None	replace
88	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRootArray();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRootArray();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRootArray();	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
89	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRoot(type);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRoot(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRoot(type);	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
90	[BUG]  [BUGGY]  Type[]  array  =  elements.getAstRoot();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  elements.getAstRoot();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  elements.getAstRoot();	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
91	[BUG]  [BUGGY]  type  =  EMPTY_BYTE_ARRAY;  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_BYTE_ARRAY;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_BYTE_ARRAY;	  type    =    EMPTY_BYTE_ARRAY.class;    	non-compiled	[CE]  not  a  statement	71	None	replace
92	[BUG]  [BUGGY]  type  =  EMPTY_BYTE_ARRAY.type;  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_BYTE_ARRAY.type;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_BYTE_ARRAY.type;	  type    =    EMPTY_BYTE_ARRAY.class;    	non-compiled	[CE]  not  a  statement	71	None	replace
93	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    Integer.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	60	None	replace
94	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  array.length);	  ArrayUtils.copyCurrentStructure(array,    type,    Integer.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	60	None	replace
95	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  Integer.MAX_VALUE,  Integer.MAX_VALUE);	  ArrayUtils.copyCurrentStructure(array,    type,    Integer.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	60	None	replace
96	[BUG]  [BUGGY]  type  =  element.getComponentType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.getComponentType();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.getComponentType();	  type    =    array.getComponentType();    	non-compiled	[CE]  not  a  statement	2	None	replace
97	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  type);	  type    =    JsonStringEncoder.getInstance().quoteAsJsonString(array);    	non-compiled	[CE]  not  a  statement	65	None	replace
98	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  subarray);	  type    =    JsonStringEncoder.getInstance().quoteAsJsonString(array);    	non-compiled	[CE]  not  a  statement	65	None	replace
99	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsJsonString(array,  element);	  type    =    JsonStringEncoder.getInstance().quoteAsJsonString(array);    	non-compiled	[CE]  not  a  statement	65	None	replace
100	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinedArray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinedArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  joinedArray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	36	None	replace
101	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow1(array,  type,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow1(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	36	None	replace
102	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow1(array,  type,  subarray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	36	None	replace
103	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  joinArray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	36	None	replace
104	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	37	None	replace
105	[BUG]  [BUGGY]  Type[]  newArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArrayGrow1(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	37	None	replace
106	[BUG]  [BUGGY]  Type[]  newArray  =  type.copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  type.copyArrayGrow1(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  type.copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	37	None	replace
107	[BUG]  [BUGGY]  Type[]  array  =  element.getRawParameterTypes(type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawParameterTypes(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawParameterTypes(type);	  Type[]    array    =    element.getRawParameterTypes();    	non-compiled	[CE]  not  a  statement	68	None	replace
108	[BUG]  [BUGGY]  Type[]  array  =  element.getRawClassParameterTypes();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawClassParameterTypes();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawClassParameterTypes();	  Type[]    array    =    element.getRawParameterTypes();    	non-compiled	[CE]  not  a  statement	68	None	replace
109	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  subarray);	  Type[]    copyArrayGrow2(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
110	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  subarray.length);	  Type[]    copyArrayGrow2(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
111	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  newArray);	  Type[]    copyArrayGrow2(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
112	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  Object.class);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  Object.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  Object.class);	  Type[]    copyArrayGrow2(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
113	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  type);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
114	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  subarray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  subarray);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
115	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  INDEX_NOT_FOUND);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  INDEX_NOT_FOUND);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
116	[BUG]  [BUGGY]  Type[]  newArray  =  array.getSuperclass();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  array.getSuperclass();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  array.getSuperclass();	  Type[]    newArray    =    type.getSuperclass();    	non-compiled	[CE]  not  a  statement	8	None	replace
117	[BUG]  [BUGGY]  Type[]  newArray  =  element.getSuperclass();  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  element.getSuperclass();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  element.getSuperclass();	  Type[]    newArray    =    type.getSuperclass();    	non-compiled	[CE]  not  a  statement	8	None	replace
118	[BUG]  [BUGGY]  Type[]  newArray  =  ArrayUtils.getSuperclass(type);  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  ArrayUtils.getSuperclass(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  ArrayUtils.getSuperclass(type);	  Type[]    newArray    =    type.getSuperclass();    	non-compiled	[CE]  not  a  statement	8	None	replace
119	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeClass(array,  type);	  type    =    JsonStringEncoder.getInstance().encodeClass(array);    	non-compiled	[CE]  not  a  statement	57	None	replace
120	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeClass(array,  subarray);	  type    =    JsonStringEncoder.getInstance().encodeClass(array);    	non-compiled	[CE]  not  a  statement	57	None	replace
121	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeClass(array,  element);	  type    =    JsonStringEncoder.getInstance().encodeClass(array);    	non-compiled	[CE]  not  a  statement	57	None	replace
122	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  subarray);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  subarray);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	12	None	replace
123	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow1(array,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow1(array,  type);	  Type[]    subarrayGrow1(array,    element);    	non-compiled	[CE]  not  a  statement	20	None	replace
124	[BUG]  [BUGGY]  Type[]  subarrayGrow2(array,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow2(array,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow2(array,  type);	  Type[]    subarrayGrow1(array,    element);    	non-compiled	[CE]  not  a  statement	20	None	replace
125	[BUG]  [BUGGY]  Type[]  subarrayGrow2(array,  element);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow2(array,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow2(array,  element);	  Type[]    subarrayGrow1(array,    element);    	non-compiled	[CE]  not  a  statement	20	None	replace
126	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  type);	  type    =    JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  not  a  statement	43	None	replace
127	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  array);	  type    =    JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  not  a  statement	43	None	replace
128	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  type);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(array);    	non-compiled	[CE]  not  a  statement	53	None	replace
129	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  subarray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  subarray);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(array);    	non-compiled	[CE]  not  a  statement	53	None	replace
130	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  subarray);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(array,  subarray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(array,  subarray);	  type    =    JsonStringEncoder.getInstance().getJsonString(array);    	non-compiled	[CE]  not  a  statement	40	None	replace
131	[BUG]  [BUGGY]  Type[]  array  =  element.getElementTypeParameters(type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementTypeParameters(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementTypeParameters(type);	  Type[]    array    =    element.getElementTypeParameters();    	non-compiled	[CE]  not  a  statement	26	None	replace
132	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(type,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(type,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsString(type,  element);	  type    =    JsonStringEncoder.getInstance().quoteAsString(type);    	non-compiled	[CE]  not  a  statement	66	None	replace
133	[BUG]  [BUGGY]  Type[]  array  =  element.getParameterType(type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getParameterType(type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getParameterType(type);	  Type[]    array    =    element.getParameterType(0);    	non-compiled	[CE]  not  a  statement	46	None	replace
134	[BUG]  [BUGGY]  Type[]  array  =  element.getElementParameters();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementParameters();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementParameters();	  Type[]    array    =    element.getElementTypeParameters();    	non-compiled	[CE]  not  a  statement	26	None	replace
135	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(type,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(type,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(type,  element);	  type    =    JsonStringEncoder.getInstance().getJsonString(type);    	non-compiled	[CE]  not  a  statement	41	None	replace
136	[BUG]  [BUGGY]  Type[]  newArray  =  component.getSuperclass();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  component.getSuperclass();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  component.getSuperclass();	  Type[]    newArray    =    type.getSuperclass();    	non-compiled	[CE]  not  a  statement	8	None	replace
137	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(element,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getJsonString(element,  array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getJsonString(element,  array);	  type    =    JsonStringEncoder.getInstance().getJsonString(element);    	non-compiled	[CE]  not  a  statement	42	None	replace
138	[BUG]  [BUGGY]  Type[]  array  =  element.getElementArray();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementArray();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementArray();	  Type[]    array    =    element.getElementType();    	non-compiled	[CE]  not  a  statement	21	None	replace
139	[BUG]  [BUGGY]  type  =  element.getDeclaredType(0);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.getDeclaredType(0);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.getDeclaredType(0);	  type    =    element.getDeclaredType();    	non-compiled	[CE]  not  a  statement	32	None	replace
140	[BUG]  [BUGGY]  type  =  element.getDeclaredType(type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.getDeclaredType(type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.getDeclaredType(type);	  type    =    element.getDeclaredType();    	non-compiled	[CE]  not  a  statement	32	None	replace
141	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
142	[BUG]  [BUGGY]  Type[]  newArray  =  array.getClass();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  array.getClass();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  array.getClass();	  Type[]    newArray    =    array.getRawClass();    	non-compiled	[CE]  not  a  statement	6	None	replace
143	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  array);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	48	None	replace
144	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  array.length);	  Type[]    copyArrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
145	[BUG]  [BUGGY]  Type[]  array  =  element.getRawClass();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getRawClass();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getRawClass();	  Type[]    array    =    element.getRawType();    	non-compiled	[CE]  not  a  statement	22	None	replace
146	[BUG]  [BUGGY]  Type[]  newArray  =  element.getElementType();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  element.getElementType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  element.getElementType();	  Type[]    newArray    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	7	None	replace
147	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE,  element);	  type    =    JsonStringEncoder.getInstance().getNativeType(ARRAY_TYPE);    	non-compiled	[CE]  not  a  statement	45	None	replace
148	[BUG]  [BUGGY]  Type[]  subarrayGrow3(array,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow3(array,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow3(array,  element);	  Type[]    subarrayGrow1(array,    element);    	non-compiled	[CE]  not  a  statement	20	None	replace
149	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray,  Integer.MAX_VALUE);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray,  Integer.MAX_VALUE);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray,  Integer.MAX_VALUE);	  ArrayUtils.copyCurrentStructure(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	14	None	replace
150	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_BOOLEAN_ARRAY.class);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_BOOLEAN_ARRAY.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  EMPTY_BOOLEAN_ARRAY.class);	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
151	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_ARRAY.class);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  EMPTY_ARRAY.class);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  EMPTY_ARRAY.class);	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
152	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MIN_VALUE);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  Integer.MIN_VALUE);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  Integer.MIN_VALUE);	  ArrayUtils.copyCurrentStructure(array,    type,    Integer.MAX_VALUE);    	non-compiled	[CE]  not  a  statement	60	None	replace
153	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  result);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  result);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  result);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	12	None	replace
154	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  element);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	12	None	replace
155	[BUG]  [BUGGY]  type  =  EMPTY_BOOLEAN_ARRAY.class;  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_BOOLEAN_ARRAY.class;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_BOOLEAN_ARRAY.class;	  type    =    EMPTY_BYTE_ARRAY.class;    	non-compiled	[CE]  not  a  statement	71	None	replace
156	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().indexOf(array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().indexOf(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().indexOf(array);	  type    =    JsonStringEncoder.getInstance().quoteAsString(array);    	non-compiled	[CE]  not  a  statement	64	None	replace
157	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  subarray,  type);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	15	None	replace
158	[BUG]  [BUGGY]  type  =(T)array.getDeclaredType();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =(T)array.getDeclaredType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =(T)array.getDeclaredType();	  type    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	62	None	replace
159	[BUG]  [BUGGY]  array  =(T)elem.clone();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T)elem.clone();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T)elem.clone();	  array    =(T)element.clone();    	non-compiled	[CE]  not  a  statement	25	None	replace
160	[BUG]  [BUGGY]  type  =  EMPTY_BOOLEAN_OBJECT_ARRAY.class;  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  EMPTY_BOOLEAN_OBJECT_ARRAY.class;  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  EMPTY_BOOLEAN_OBJECT_ARRAY.class;	  type    =    EMPTY_OBJECT_ARRAY.class;    	non-compiled	[CE]  not  a  statement	44	None	replace
161	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().array;  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().array;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().array;	  type    =    JsonStringEncoder.getInstance().type;    	non-compiled	[CE]  not  a  statement	34	None	replace
162	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().valueToJava2D(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().valueToJava2D(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().valueToJava2D(array);	  type    =    JsonStringEncoder.getInstance().type;    	non-compiled	[CE]  not  a  statement	34	None	replace
163	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
164	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
165	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  array);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
166	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().generateJsonString(element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().generateJsonString(element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().generateJsonString(element);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
167	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  null);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  null);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(array,  null);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(array);    	non-compiled	[CE]  not  a  statement	53	None	replace
168	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE,  element);	  type    =    JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  not  a  statement	43	None	replace
169	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  type    =    JsonStringEncoder.getInstance().getNativeType(UNKNOWN_TYPE);    	non-compiled	[CE]  not  a  statement	43	None	replace
170	[BUG]  [BUGGY]  type  =  array.getDeclaredType(0);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  array.getDeclaredType(0);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  array.getDeclaredType(0);	  type    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	1	None	replace
171	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
172	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  subarray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  subarray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  subarray);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
173	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRoot(this);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRoot(this);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRoot(this);	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
174	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  element);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsObject(array,  element);	  type    =    JsonStringEncoder.getInstance().quoteAsObject(array);    	non-compiled	[CE]  not  a  statement	61	None	replace
175	[BUG]  [BUGGY]  type  =  element.type;  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  element.type;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  element.type;	  type    =    element.class;    	non-compiled	[CE]  not  a  statement	11	None	replace
176	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  inputArray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeClass(array,  inputArray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeClass(array,  inputArray);	  type    =    JsonStringEncoder.getInstance().encodeClass(array);    	non-compiled	[CE]  not  a  statement	57	None	replace
177	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(element);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(element);	  type    =    JsonStringEncoder.getInstance().getTypeDesc();    	non-compiled	[CE]  not  a  statement	33	None	replace
178	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDeserializer();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDeserializer();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDeserializer();	  type    =    JsonStringEncoder.getInstance().getTypeDesc();    	non-compiled	[CE]  not  a  statement	33	None	replace
179	[BUG]  [BUGGY]  type  =  array.getElementType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  array.getElementType();  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  array.getElementType();	  type    =    array.getComponentType();    	non-compiled	[CE]  not  a  statement	2	None	replace
180	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  inputArray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  inputArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().getTypeDesc(array,  inputArray);	  type    =    JsonStringEncoder.getInstance().getTypeDesc(array);    	non-compiled	[CE]  not  a  statement	28	None	replace
181	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  element);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  element);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  element);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
182	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  inputArray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  inputArray);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  inputArray);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
183	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().convertToJsonString(array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().convertToJsonString(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().convertToJsonString(array);	  type    =    JsonStringEncoder.getInstance().getJsonString(array);    	non-compiled	[CE]  not  a  statement	40	None	replace
184	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRoot(inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRoot(inDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRoot(inDEX_NOT_FOUND);	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
185	[BUG]  [BUGGY]  Type[]  array  =  element.getAstRoot(array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getAstRoot(array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getAstRoot(array);	  Type[]    array    =    element.getAstRoot();    	non-compiled	[CE]  not  a  statement	23	None	replace
186	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow(array,  type,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow(array,  type,  array.length);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	19	None	replace
187	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsJsonString(element,  type);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
188	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().decodeAsJsonString(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().decodeAsJsonString(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().decodeAsJsonString(array);	  type    =    JsonStringEncoder.getInstance().encodeAsJsonString(element);    	non-compiled	[CE]  not  a  statement	54	None	replace
189	[BUG]  [BUGGY]  Type[]  newArray  =  element.getElements();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  element.getElements();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  element.getElements();	  Type[]    newArray    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	7	None	replace
190	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  type);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	58	None	replace
191	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  null);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  null);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsTrace(array,  null);	  type    =    JsonStringEncoder.getInstance().encodeAsTrace(array);    	non-compiled	[CE]  not  a  statement	50	None	replace
192	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsString(array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsString(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsString(array);	  type    =    JsonStringEncoder.getInstance().quoteAsString(array);    	non-compiled	[CE]  not  a  statement	64	None	replace
193	[BUG]  [BUGGY]  Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	37	None	replace
194	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  Object.class));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  Object.class));  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  Object.class));	  Type[]    copyArrayGrow1(array,    type,    Object.class);    	non-compiled	[CE]  not  a  statement	39	None	replace
195	[BUG]  [BUGGY]  Type[]  array  =  element.getElementParameterTypes();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getElementParameterTypes();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getElementParameterTypes();	  Type[]    array    =    element.getElementTypeParameters();    	non-compiled	[CE]  not  a  statement	26	None	replace
196	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  element,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  subarrayGrow1(array,  element,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  subarrayGrow1(array,  element,  type);	  Type[]    subarrayGrow1(array,    element);    	non-compiled	[CE]  not  a  statement	20	None	replace
197	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  null,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encode(array,  null,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encode(array,  null,  type);	  type    =    JsonStringEncoder.getInstance().encode(array,    null);    	non-compiled	[CE]  not  a  statement	56	None	replace
198	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    inDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	55	None	replace
199	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    inDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	55	None	replace
200	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	36	None	replace
201	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow1(array,  type,  array.type);	  Type[]    copyArrayGrow1(array,    type,    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
202	[BUG]  [BUGGY]  Type[]  array  =  element.getReturnType();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getReturnType();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getReturnType();	  Type[]    array    =    element.getParameterTypes();    	non-compiled	[CE]  not  a  statement	27	None	replace
203	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsType(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsType(array,  type);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsType(array,  type);	  type    =    JsonStringEncoder.getInstance().getTypeDesc();    	non-compiled	[CE]  not  a  statement	33	None	replace
204	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	38	None	replace
205	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().parseJsonString(array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().parseJsonString(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().parseJsonString(array);	  type    =    JsonStringEncoder.getInstance().getJsonString(array);    	non-compiled	[CE]  not  a  statement	40	None	replace
206	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().arrayAndGetJsonString(array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().arrayAndGetJsonString(array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().arrayAndGetJsonString(array);	  type    =    JsonStringEncoder.getInstance().getJsonString(array);    	non-compiled	[CE]  not  a  statement	40	None	replace
207	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().quoteAsString(type,  array);  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().quoteAsString(type,  array);	  type    =    JsonStringEncoder.getInstance().quoteAsString(type);    	non-compiled	[CE]  not  a  statement	66	None	replace
208	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsObject(array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().encodeAsObject(array);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().encodeAsObject(array);	  type    =    JsonStringEncoder.getInstance().quoteAsObject(array);    	non-compiled	[CE]  not  a  statement	61	None	replace
209	[BUG]  [BUGGY]  Type[]  array  =  element.getReturnType(0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getReturnType(0);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getReturnType(0);	  Type[]    array    =    element.getParameterType(0);    	non-compiled	[CE]  not  a  statement	46	None	replace
210	[BUG]  [BUGGY]  Type[]  array  =  element.getDeclaredTypeArray();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  array  =  element.getDeclaredTypeArray();  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  array  =  element.getDeclaredTypeArray();	  Type[]    array    =    element.getDeclaredTypeParameters();    	non-compiled	[CE]  not  a  statement	51	None	replace
211	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	Type[]  copyArrayGrow2(array,  type,  type);	  Type[]    copyArrayGrow2(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
212	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstanceUTC().type;  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstanceUTC().type;  [BUGGY]      }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstanceUTC().type;	  type    =    JsonStringEncoder.getInstance().type;    	non-compiled	[CE]  not  a  statement	34	None	replace
213	[BUG]  [BUGGY]  type  =  JsonStringEncoder.getInstance().typeDesc(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  type  =  JsonStringEncoder.getInstance().typeDesc(array,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	type  =  JsonStringEncoder.getInstance().typeDesc(array,  type);	  type    =    JsonStringEncoder.getInstance().getTypeDesc(array);    	non-compiled	[CE]  not  a  statement	28	None	replace
214	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	17	None	replace
215	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  inDEX_NOT_FOUND);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result,  inDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    result);    	non-compiled	[CE]  not  a  statement	16	None	replace
216	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [BUGGY]      type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3295	3295	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	48	None	replace
