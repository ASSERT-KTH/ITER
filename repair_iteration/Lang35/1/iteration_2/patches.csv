bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  array  =  element.getRoot();  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getRoot();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getRoot();	  array    =    array.getRoot();    	non-compiled	[CE]  ';'  expected	46	None	replace
2	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.getRoot();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.getRoot();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.getRoot();	  array    =    array.getRoot();    	non-compiled	[CE]  ';'  expected	46	None	replace
3	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getRoot());  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getRoot());  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getRoot());	  array    =    array.getRoot();    	non-compiled	[CE]  ';'  expected	46	None	replace
4	[BUG]  [BUGGY]  array  =(array!=  null)?  null  :  array.getRoot();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array!=  null)?  null  :  array.getRoot();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array!=  null)?  null  :  array.getRoot();	  array    =    array.getRoot();    	non-compiled	[CE]  ';'  expected	46	None	replace
5	[BUG]  [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  [CE]  ';'  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }	  	non-compiled	[CE]  ';'  expected	78	None	add
6	[BUG]  [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  [CE]  ';'  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array  ==  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(array  ==  null)  {  throw  new  IllegalStateException(   "   ");  }	  	non-compiled	[CE]  ';'  expected	78	None	add
7	[BUG]  [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array  >=  null)  {  throw  new  IllegalStateException(   "   ");  }  [CE]  ';'  expected  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException(   "   ");  }  if(array  >=  null)  {  throw  new  IllegalStateException(   "   ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    if(array  >=  null)  {  throw  new  IllegalStateException(   "   ");  }	  	non-compiled	[CE]  ';'  expected	78	None	add
8	[BUG]  [BUGGY]  array  =(T[])element.clone();  array  =(T[])element.clone();  [CE]  ';'  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  array  =(T[])element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    array  =(T[])element.clone();	  	non-compiled	[CE]  ';'  expected	96	None	add
9	[BUG]  [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(Object[])element.clone();  [CE]  ';'  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(Object[])element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    Object[]  array  =(Object[])element.clone();	  	non-compiled	[CE]  ';'  expected	96	None	add
10	[BUG]  [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  ';'  expected	96	None	add
11	[BUG]  [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(T[])element.clone();  [CE]  ';'  expected  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(T[])element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    Object[]  array  =(T[])element.clone();	  	non-compiled	[CE]  ';'  expected	96	None	add
12	[BUG]  [BUGGY]  array  =  array.clone();  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.clone();	  if(array    ==    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  ';'  expected	28	None	replace
13	[BUG]  [BUGGY]  array  =  array.get();  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array.get();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.get();	  if(array    ==    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  ';'  expected	28	None	replace
14	[BUG]  [BUGGY]  array  =  array.get(array.length  -  1);  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array.get(array.length  -  1);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.get(array.length  -  1);	  if(array!=    null)    {    if(array.length    ==    0)    {    return    new    T[1];    }    	non-compiled	[CE]  ';'  expected	118	None	replace
15	[BUG]  [BUGGY]  array  =  array.get(array);  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array.get(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.get(array);	  if(array!=    null)    {    if(array.length    ==    0)    {    return    new    T[1];    }    	non-compiled	[CE]  ';'  expected	118	None	replace
16	[BUG]  [BUGGY]  if(element  ==  null)  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element  ==  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element  ==  null)  {	  if(array    ==    null)    {    if(array!=    null)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
17	[BUG]  [BUGGY]  if(element!=  null)  {  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {	  if(array    ==    null)    {    if(array!=    null)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
18	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  ArrayUtils.deepCase(array);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  ArrayUtils.deepCase(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    ArrayUtils.deepCase(array);	  	non-compiled	[CE]  not  a  statement	86	None	add
19	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  array  =(T[])ArrayUtils.deepCase(array);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  array  =(T[])ArrayUtils.deepCase(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    array  =(T[])ArrayUtils.deepCase(array);	  	non-compiled	[CE]  not  a  statement	86	None	add
20	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  (T[])ArrayUtils.deepCase(array);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  (T[])ArrayUtils.deepCase(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    (T[])ArrayUtils.deepCase(array);	  	non-compiled	[CE]  not  a  statement	86	None	add
21	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  array  =  ArrayUtils.deepCase(array);  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  array  =  ArrayUtils.deepCase(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    array  =  ArrayUtils.deepCase(array);	  	non-compiled	[CE]  not  a  statement	86	None	add
22	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  1);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.checkState(array.length  ==  1);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.checkState(array.length  ==  1);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	124	None	replace
23	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  2);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.checkState(array.length  ==  2);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.checkState(array.length  ==  2);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	124	None	replace
24	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.checkState(array.length  ==  INDEX_NOT_FOUND);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.checkState(array.length  ==  INDEX_NOT_FOUND);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	124	None	replace
25	[BUG]  [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array  ==  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array  ==  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    &&    array.length    >    0)    {    if(array  ==  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	104	None	add
26	[BUG]  [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array!=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array!=  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    &&    array.length    >    0)    {    if(array!=  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	104	None	add
27	[BUG]  [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array  >=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  if(array  >=  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    &&    array.length    >    0)    {    if(array  >=  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	104	None	add
28	[BUG]  [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  If(array  ==  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  If(array  ==  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    &&    array.length    >    0)    {    If(array  ==  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	104	None	add
29	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  subarray);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  subarray);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
30	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  newArray);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
31	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type,  newArray.length);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
32	[BUG]  [BUGGY]  array  =  element.cloneTree();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.cloneTree();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.cloneTree();	  array    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	15	None	replace
33	[BUG]  [BUGGY]  array  =(T[])this.array.clone();  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])this.array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])this.array.clone();	  array    =(T[])super.array.clone();    	non-compiled	[CE]  not  a  statement	40	None	replace
34	[BUG]  [BUGGY]  Class  <?>[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  array.getClass();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    >=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
35	[BUG]  [BUGGY]  array  =  new  Array[size()  ];  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  new  Array[size()  ];  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  new  Array[size()  ];	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    >=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
36	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  &&  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	34	None	replace
37	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  parent.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  parent.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	34	None	replace
38	[BUG]  [BUGGY]  array  =(T[])Array.newInstance(array,  1);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])Array.newInstance(array,  1);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])Array.newInstance(array,  1);	  return(T[])Array.newInstance(array,    1);    	non-compiled	[CE]  not  a  statement	128	None	replace
39	[BUG]  [BUGGY]  return(T[])Array.newInstance(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])Array.newInstance(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])Array.newInstance(array,  type);	  return(T[])Array.newInstance(array,    1);    	non-compiled	[CE]  not  a  statement	128	None	replace
40	[BUG]  [BUGGY]  if(type  ==  null)  {  return(T[])Array.newInstance(array,  1);  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(type  ==  null)  {  return(T[])Array.newInstance(array,  1);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(type  ==  null)  {  return(T[])Array.newInstance(array,  1);  }	  return(T[])Array.newInstance(array,    1);    	non-compiled	[CE]  not  a  statement	128	None	replace
41	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])Array.newInstance(array,  1);  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])Array.newInstance(array,  1);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])Array.newInstance(array,  1);  }	  return(T[])Array.newInstance(array,    1);    	non-compiled	[CE]  not  a  statement	128	None	replace
42	[BUG]  [BUGGY]  array[0]  =  array[i].getComponentType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[0]  =  array[i].getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[0]  =  array[i].getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
43	[BUG]  [BUGGY]  array[0]  =  array[0].getComponentType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[0]  =  array[0].getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[0]  =  array[0].getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
44	[BUG]  [BUGGY]  array[]  =  array.getComponentType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[]  =  array.getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[]  =  array.getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
45	[BUG]  [BUGGY]  array  =(T[])array.clone();  if(array  ==  null)  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])array.clone();  if(array  ==  null)  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])array.clone();  if(array  ==  null)  {  array  =(T[])array.clone();  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	54	None	replace
46	[BUG]  [BUGGY]  Integer[]  array  =  element.getClass();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  element.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  element.getClass();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
47	[BUG]  [BUGGY]  Integer[]  array  =  array.getRawClass();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getRawClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getRawClass();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
48	[BUG]  [BUGGY]  Integer[]  array  =  array.getComponentType();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getComponentType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getComponentType();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
49	[BUG]  [BUGGY]  Integer[]  array  =  array.getDeclaredType();  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getDeclaredType();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
50	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  T[]  array  =(T[])elem.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  T[]  array  =(T[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    T[]  array  =(T[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
51	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  array  =(T[])elem.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  array  =(T[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    Object[]  array  =(T[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
52	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  array  =(T[])elem.clone();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  array  =(T[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    array  =(T[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
53	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array,  type);  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    ArrayUtils.copyCurrentStructure(array,  type);	  	non-compiled	[CE]  not  a  statement	82	None	add
54	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array);  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    ArrayUtils.copyCurrentStructure(array);	  	non-compiled	[CE]  not  a  statement	82	None	add
55	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  type);	  ArrayUtils.copyCurrentStructure(array,    element,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	129	None	replace
56	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    element,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	129	None	replace
57	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  result);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  result);	  ArrayUtils.copyCurrentStructure(array,    element,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	129	None	replace
58	[BUG]  [BUGGY]  if(array  ==  null  ||  array.getClass()!=  type)  {  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.getClass()!=  type)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.getClass()!=  type)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
59	[BUG]  [BUGGY]  if(array!=  null  ||  array.getClass()!=  type)  {  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.getClass()!=  type)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.getClass()!=  type)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
60	[BUG]  [BUGGY]  array[0]  =  array[i].getDeclaredType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[0]  =  array[i].getDeclaredType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[0]  =  array[i].getDeclaredType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getDeclaredType();    }    	non-compiled	[CE]  not  a  statement	115	None	replace
61	[BUG]  [BUGGY]  array[0]  =  array[0].getDeclaredType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[0]  =  array[0].getDeclaredType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[0]  =  array[0].getDeclaredType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getDeclaredType();    }    	non-compiled	[CE]  not  a  statement	115	None	replace
62	[BUG]  [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])ArrayUtils.deepClone(array,  type);	  T[]    array    =(T[])ArrayUtils.deepClone(array);    	non-compiled	[CE]  not  a  statement	125	None	replace
63	[BUG]  [BUGGY]  T[]  array  =(T[])ArrayUtils.deepShort(array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])ArrayUtils.deepShort(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])ArrayUtils.deepShort(array);	  T[]    array    =(T[])ArrayUtils.deepClone(array);    	non-compiled	[CE]  not  a  statement	125	None	replace
64	[BUG]  [BUGGY]  Object[]  array  =(Object[])ArrayUtils.deepClone(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Object[]  array  =(Object[])ArrayUtils.deepClone(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Object[]  array  =(Object[])ArrayUtils.deepClone(array);	  T[]    array    =(T[])ArrayUtils.deepClone(array);    	non-compiled	[CE]  not  a  statement	125	None	replace
65	[BUG]  [BUGGY]  Object[]  array  =(Object[])array.clone();  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Object[]  array  =(Object[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Object[]  array  =(Object[])array.clone();	          array    =(T[])array.clone();    Object[]    array    =(Object[])array.clone();    	non-compiled	[CE]  not  a  statement	55	None	replace
66	[BUG]  [BUGGY]  if(array!=  null  ||  array.size()  ==  0)  {  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.size()  ==  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.size()  ==  0)  {	  if(array    ==    null    ||    array.size()    ==    0)    {    	non-compiled	[CE]  not  a  statement	116	None	replace
67	[BUG]  [BUGGY]  if(array  ==  null  ||  array.size()!=  0)  {  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.size()!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.size()!=  0)  {	  if(array    ==    null    ||    array.size()    ==    0)    {    	non-compiled	[CE]  not  a  statement	116	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  0,  array.length);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  System.arraycopy(array,  0,  array,  0,  array.length);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	System.arraycopy(array,  0,  array,  0,  array.length);	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    0,    array.length);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
69	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.clone(array);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.clone(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.clone(array);	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    0,    array.length);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
70	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }	          array    =(T[])array.clone();    array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	52	None	replace
71	[BUG]  [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }	          array    =(T[])array.clone();    array    =(T[])array.clone();    	non-compiled	[CE]  ';'  expected	52	None	replace
72	[BUG]  [BUGGY]  allowNull(array);  [CE]  ';'  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  allowNull(array);  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	allowNull(array);	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	79	None	replace
73	[BUG]  [BUGGY]  allowNull();  [CE]  ';'  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  allowNull();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	allowNull();	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	79	None	replace
74	[BUG]  [BUGGY]  aughtException( " ");  [CE]  ';'  expected  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  aughtException( " ");  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	aughtException( " ");	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ';'  expected	79	None	replace
75	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >=  0)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length  >=  0)  {	  if(array    ==    null    ||    array.length!=    0)    {    	non-compiled	[CE]  ';'  expected	66	None	replace
76	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  &&  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	31	None	replace
77	[BUG]  [BUGGY]  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	31	None	replace
78	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  0)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    <    0)    {    if(array  ==  null  ||  array.length  <  0)  {	  	non-compiled	[CE]  ';'  expected	67	None	add
79	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    <    0)    {    if(array!=  null  ||  array.length  <  0)  {	  	non-compiled	[CE]  not  a  statement	67	None	add
80	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    <    0)    {    if(array  ==  null  ||  array.length  >=  0)  {	  	non-compiled	[CE]  not  a  statement	67	None	add
81	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    <    0)    {    if(array  ==  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	67	None	add
82	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  2)  {  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  2)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    <    0)    {    if(array  ==  null  ||  array.length  <  2)  {	  	non-compiled	[CE]  not  a  statement	67	None	add
83	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length!=  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array  ==  null  ||  array.length!=  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
84	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array!=  null  ||  array.length!=  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array!=  null  ||  array.length!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array!=  null  ||  array.length!=  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
85	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array  ==  null  ||  array.length  >=  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
86	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array!=  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
87	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length  >>  0)  {  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length  >>  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array  ==  null  ||  array.length  >>  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
88	[BUG]  [BUGGY]  array  =  element.getDeclaredClass();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getDeclaredClass();	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
89	[BUG]  [BUGGY]  array  =  element.getParent();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getParent();	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
90	[BUG]  [BUGGY]  array  =  element.getSimpleName();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getSimpleName();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getSimpleName();	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
91	[BUG]  [BUGGY]  array  =  element.getSuperclass();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getSuperclass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getSuperclass();	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
92	[BUG]  [BUGGY]  array  =(T)element.add(array,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.add(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)element.add(array,  subarray);	  array    =(T)element.add(array,    element);    	non-compiled	[CE]  not  a  statement	60	None	replace
93	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
94	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array,  type);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array,  type);	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
95	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.deepCase(array);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.deepCase(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.deepCase(array);	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
96	[BUG]  [BUGGY]  if(array  ==  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  return(T[])ArrayUtils.deepCase(array);  }	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
97	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array!=  null  ||  array.length  >  0)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    >    0)    {    if(array!=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
98	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    >    0)    {    if(array  ==  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	19	None	add
99	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array  >=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  if(array  >=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    >    0)    {    if(array  >=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	19	None	add
100	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  If(array!=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  If(array!=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    >    0)    {    If(array!=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	19	None	add
101	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  array.length);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  System.arraycopy(array,  0,  array,  1,  array.length);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	System.arraycopy(array,  0,  array,  1,  array.length);	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    1,    array.length);    }    	non-compiled	[CE]  not  a  statement	111	None	replace
102	[BUG]  [BUGGY]  array  =(T)array.cloneTree();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.cloneTree();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.cloneTree();	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
103	[BUG]  [BUGGY]  array  =(T)array.cloneTree().add(array,  element);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.cloneTree().add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.cloneTree().add(array,  element);	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
104	[BUG]  [BUGGY]  array  =(T)array.cloneTree().add(array,  type);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.cloneTree().add(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.cloneTree().add(array,  type);	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
105	[BUG]  [BUGGY]  allowNull(array,  null);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  allowNull(array,  null);  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	allowNull(array,  null);	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
106	[BUG]  [BUGGY]  array  =  array;  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array;  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array;	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
107	[BUG]  [BUGGY]  parent  =  element.getParent();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  element.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  element.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	71	None	replace
108	[BUG]  [BUGGY]  parent  =  array.getParent();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  array.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  array.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	71	None	replace
109	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array!=  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array  ==  null)  {  if(array!=  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
110	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array!=  null)  {  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array!=  null)  {  if(array!=  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
111	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array  ==  null)  {  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array  ==  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array!=  null)  {  if(array  ==  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
112	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  >=  null)  {  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  >=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array  ==  null)  {  if(array  >=  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
113	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array!=  null)  {  }  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array!=  null)  {  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array  ==  null)  {  if(array!=  null)  {  }	  	non-compiled	[CE]  not  a  statement	92	None	add
114	[BUG]  [BUGGY]  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	58	None	replace
115	[BUG]  [BUGGY]  array  =(T[])array.clone();  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])array.clone();  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])array.clone();  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	58	None	replace
116	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array!=  null  ||  array.length  <  0)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
117	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array  ==  null  ||  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array  ==  null  ||  array.length  <  0)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
118	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  >=  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array!=  null  ||  array.length  >=  0)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
119	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array!=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
120	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array  >=  null  ||  array.length  <  0)  {  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array  >=  null  ||  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array  >=  null  ||  array.length  <  0)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
121	[BUG]  [BUGGY]  Class  <?>  type  =  array.getRawClass();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  array.getRawClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getRawClass();	  Class    <?>    type    =    array.getClass();    	non-compiled	[CE]  not  a  statement	112	None	replace
122	[BUG]  [BUGGY]  Class  <?>  type  =  array.getDeclaredType();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  array.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getDeclaredType();	  Class    <?>    type    =    array.getClass();    	non-compiled	[CE]  not  a  statement	112	None	replace
123	[BUG]  [BUGGY]  Class  <?>  type  =  array.getType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  array.getType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getType();	  Class    <?>    type    =    array.getClass();    	non-compiled	[CE]  not  a  statement	112	None	replace
124	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  type);  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  type);	  array    =(T[])ArrayUtils.newInstance(array,    subarray);    	non-compiled	[CE]  not  a  statement	43	None	replace
125	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  result);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  result);	  array    =(T[])ArrayUtils.newInstance(array,    subarray);    	non-compiled	[CE]  not  a  statement	43	None	replace
126	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  subarray,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  subarray,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  subarray,  type);	  array    =(T[])ArrayUtils.newInstance(array,    subarray);    	non-compiled	[CE]  not  a  statement	43	None	replace
127	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  element);	  array    =(T[])ArrayUtils.newInstance(array,    subarray);    	non-compiled	[CE]  not  a  statement	43	None	replace
128	[BUG]  [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])this.subarray.clone();  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])this.subarray.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =(Class  <  T>[])this.subarray.clone();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
129	[BUG]  [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])array.clone();  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =(Class  <  T>[])array.clone();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
130	[BUG]  [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])super.add(array,  element);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =(Class  <  T>[])super.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =(Class  <  T>[])super.add(array,  element);	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
131	[BUG]  [BUGGY]  Class  <?>[]  array  =  new  Class  <?>[size()  ];  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  new  Class  <?>[size()  ];  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  new  Class  <?>[size()  ];	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
132	[BUG]  [BUGGY]  if(array  ==  null  ||  array.getClass()!=  null)  {  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.getClass()!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.getClass()!=  null)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    null)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
133	[BUG]  [BUGGY]  if(array!=  null  ||  array.getClass()!=  null)  {  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.getClass()!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.getClass()!=  null)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    null)    {    	non-compiled	[CE]  not  a  statement	39	None	replace
134	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.getParent();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.getParent();	  array    =    array.getParent();    	non-compiled	[CE]  not  a  statement	72	None	replace
135	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getParent());  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getParent());  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getParent());	  array    =    array.getParent();    	non-compiled	[CE]  not  a  statement	72	None	replace
136	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  INDEX_NOT_FOUND);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
137	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  element);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  element);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
138	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  newArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  newArray);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
139	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  newArray);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  newArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type,  newArray);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
140	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  array  =(T)array.add(element,  array);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  array  =(T)array.add(element,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    array  =(T)array.add(element,  array);	  	non-compiled	[CE]  not  a  statement	100	None	add
141	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    if(array!=  null)  {  array  =(T)array.add(element,  array);  }	  	non-compiled	[CE]  not  a  statement	100	None	add
142	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }	  	non-compiled	[CE]  not  a  statement	100	None	add
143	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  Object[]  array  =(T)array.add(element,  array);  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  Object[]  array  =(T)array.add(element,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    Object[]  array  =(T)array.add(element,  array);	  	non-compiled	[CE]  not  a  statement	100	None	add
144	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	100	None	add
145	[BUG]  [BUGGY]  array  =(T[])type.clone();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])type.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])type.clone();	  T[]    array    =(T[])type.clone();    	non-compiled	[CE]  not  a  statement	62	None	replace
146	[BUG]  [BUGGY]  if(array  ==  null  ||  array.getClass()!=  element)  {  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.getClass()!=  element)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.getClass()!=  element)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    element)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
147	[BUG]  [BUGGY]  if(array!=  null  ||  array.getClass()!=  element)  {  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.getClass()!=  element)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.getClass()!=  element)  {	  if(array    ==    null)    {    if(array    ==    null    ||    array.getClass()!=    element)    {    	non-compiled	[CE]  not  a  statement	38	None	replace
148	[BUG]  [BUGGY]  parent  =  parent.createParent(array,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  parent.createParent(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(array,  type);	  parent    =    parent.createParent(array,    parent);    	non-compiled	[CE]  not  a  statement	122	None	replace
149	[BUG]  [BUGGY]  parent  =  parent.createParent(array,  element);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  parent.createParent(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(array,  element);	  parent    =    parent.createParent(array,    parent);    	non-compiled	[CE]  not  a  statement	122	None	replace
150	[BUG]  [BUGGY]  array  =(T)array.add(element,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.add(element,  type);	  array    =(T)element.add(array,    type);    	non-compiled	[CE]  not  a  statement	73	None	replace
151	[BUG]  [BUGGY]  Class  <?>  type  =  element.getRawClass();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  element.getRawClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  element.getRawClass();	  Class    <?>    type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	108	None	replace
152	[BUG]  [BUGGY]  Class  <?>  type  =  element.getSuperclass();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  element.getSuperclass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  element.getSuperclass();	  Class    <?>    type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	108	None	replace
153	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  ArrayUtils.copyOf(array,  subarray);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    ArrayUtils.copyOf(array,  subarray);	  	non-compiled	[CE]  not  a  statement	88	None	add
154	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  array  =(T[])ArrayUtils.copyOf(array,  subarray);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  array  =(T[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    array  =(T[])ArrayUtils.copyOf(array,  subarray);	  	non-compiled	[CE]  not  a  statement	88	None	add
155	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  (T[])ArrayUtils.copyOf(array,  subarray);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  (T[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    (T[])ArrayUtils.copyOf(array,  subarray);	  	non-compiled	[CE]  not  a  statement	88	None	add
156	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  array  =  ArrayUtils.copyOf(array,  subarray);  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  array  =  ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    array  =  ArrayUtils.copyOf(array,  subarray);	  	non-compiled	[CE]  not  a  statement	88	None	add
157	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Array  subarray  =  array.getSuperclass();  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Array  subarray  =  array.getSuperclass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    Array  subarray  =  array.getSuperclass();	  	non-compiled	[CE]  not  a  statement	88	None	add
158	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getParent();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getParent();	  Class    <?>[]    array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	107	None	replace
159	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getAstRoot();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getAstRoot();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getAstRoot();	  Class    <?>[]    array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	107	None	replace
160	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getAstRoot(array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getAstRoot(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getAstRoot(array);	  Class    <?>[]    array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	107	None	replace
161	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	56	None	add
162	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	56	None	add
163	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	56	None	add
164	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	56	None	add
165	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	56	None	add
166	[BUG]  [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        If(array    ==    null)    {    if(array  ==  null)  {	  	non-compiled	[CE]  not  a  statement	94	None	add
167	[BUG]  [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  If(array  ==  null)  {  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  If(array  ==  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        If(array    ==    null)    {    if(array  ==  null)  {  If(array  ==  null)  {	  	non-compiled	[CE]  not  a  statement	94	None	add
168	[BUG]  [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array!=  null)  {  If(array  ==  null)  {  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array!=  null)  {  If(array  ==  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        If(array    ==    null)    {    if(array!=  null)  {  If(array  ==  null)  {	  	non-compiled	[CE]  not  a  statement	94	None	add
169	[BUG]  [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array!=  null)  {  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        If(array    ==    null)    {    if(array!=  null)  {	  	non-compiled	[CE]  not  a  statement	94	None	add
170	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray);	  ArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	11	None	replace
171	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  array);	  ArrayUtils.copyCurrentStructure(array,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
172	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  newArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  newArray);	  ArrayUtils.copyCurrentStructure(array,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
173	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  array  =  array.getElements();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  array  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    Integer[]  array  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
174	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  element  =  array.getElements();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  element  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    Integer[]  element  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
175	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  int[]  array  =  array.getElements();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  int[]  array  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    int[]  array  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
176	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  type  =  array.getElements();  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  Integer[]  type  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    Integer[]  type  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
177	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  int[]  element  =  array.getElements();  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  int[]  element  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    int[]  element  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
178	[BUG]  [BUGGY]  safeArray(array,  null);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  safeArray(array,  null);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	safeArray(array,  null);	  safeMultiply(array,    null);    	non-compiled	[CE]  not  a  statement	121	None	replace
179	[BUG]  [BUGGY]  safeMultiply(array,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  safeMultiply(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	safeMultiply(array,  type);	  safeMultiply(array,    null);    	non-compiled	[CE]  not  a  statement	121	None	replace
180	[BUG]  [BUGGY]  safeAdd(array,  null);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  safeAdd(array,  null);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	safeAdd(array,  null);	  safeMultiply(array,    null);    	non-compiled	[CE]  not  a  statement	121	None	replace
181	[BUG]  [BUGGY]  array  =(T[])Array.newInstance(array,  0);  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])Array.newInstance(array,  0);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])Array.newInstance(array,  0);	  return(T[])Array.newInstance(array,    0);    	non-compiled	[CE]  not  a  statement	127	None	replace
182	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])Array.newInstance(array,  0);  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])Array.newInstance(array,  0);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])Array.newInstance(array,  0);  }	  return(T[])Array.newInstance(array,    0);    	non-compiled	[CE]  not  a  statement	127	None	replace
183	[BUG]  [BUGGY]  if(type  ==  null)  {  return(T[])Array.newInstance(array,  0);  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(type  ==  null)  {  return(T[])Array.newInstance(array,  0);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(type  ==  null)  {  return(T[])Array.newInstance(array,  0);  }	  return(T[])Array.newInstance(array,    0);    	non-compiled	[CE]  not  a  statement	127	None	replace
184	[BUG]  [BUGGY]  array  =(T)type.add(array,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)type.add(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)type.add(array,  subarray);	  array    =(T)type.add(array,    type);    	non-compiled	[CE]  not  a  statement	69	None	replace
185	[BUG]  [BUGGY]  array  =(T)type.add(array,  element);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)type.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)type.add(array,  element);	  array    =(T)type.add(array,    type);    	non-compiled	[CE]  not  a  statement	69	None	replace
186	[BUG]  [BUGGY]  T[]  array  =(T[])this.array.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])this.array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])this.array.clone();	  T[]    array    =(T[])elem.clone();    	non-compiled	[CE]  not  a  statement	83	None	replace
187	[BUG]  [BUGGY]  array  =(T)array.add(element,  element);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.add(element,  element);	  array    =(T)elem.add(array,    element);    	non-compiled	[CE]  not  a  statement	103	None	replace
188	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  type);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	13	None	replace
189	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  result);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  result);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	13	None	replace
190	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  subarray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  subarray);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	13	None	replace
191	[BUG]  [BUGGY]  If(array!=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  If(array!=  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	If(array!=  null  &&  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    If(array!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
192	[BUG]  [BUGGY]  If(array  ==  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  If(array  ==  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	If(array  ==  null  &&  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    If(array!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
193	[BUG]  [BUGGY]  if(array!=  null)  {  If(array!=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  If(array!=  null  &&  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  If(array!=  null  &&  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    If(array!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
194	[BUG]  [BUGGY]  if(array!=  null)  {  If(array!=  null  ||  array.length  ==  0)  {  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  If(array!=  null  ||  array.length  ==  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  If(array!=  null  ||  array.length  ==  0)  {	  if(array!=    null    &&    array.length    >    0)    {    If(array!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	26	None	replace
195	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.getDeclaredClass();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.getDeclaredClass();	  array    =    array.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	17	None	replace
196	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredClass());  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredClass());  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getDeclaredClass());	  array    =    array.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	17	None	replace
197	[BUG]  [BUGGY]  array  =(array!=  null)?  null  :  array.getDeclaredClass();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array!=  null)?  null  :  array.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array!=  null)?  null  :  array.getDeclaredClass();	  array    =    array.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	17	None	replace
198	[BUG]  [BUGGY]  array  =(T)array.get(array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.get(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.get(array);	  array    =(T)array.add(array,    element);    	non-compiled	[CE]  not  a  statement	59	None	replace
199	[BUG]  [BUGGY]  array  =  ArrayUtils.copyOf(array,  type);  [CE]  not  a  statement  [FE]        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  ArrayUtils.copyOf(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyOf(array,  type);	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
200	[BUG]  [BUGGY]  if(type!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(type!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(type!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
201	[BUG]  [BUGGY]  if(type  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(type  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(type  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
202	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
203	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  if(element!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
204	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	84	None	add
205	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
206	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	84	None	add
207	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  T[]  array  =(T[])result.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  T[]  array  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    T[]  array  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
208	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  array  =(T[])result.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  array  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    Object[]  array  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
209	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  T[]  result  =(T[])result.clone();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  T[]  result  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    T[]  result  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
210	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  array  =(T[])result.clone();  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  array  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    array  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
211	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  T[]  array  =(T[])rsult.clone();  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  T[]  array  =(T[])rsult.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    T[]  array  =(T[])rsult.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
212	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  array  =(T)elem.add(array,  element);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  array  =(T)elem.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    array  =(T)elem.add(array,  element);	  	non-compiled	[CE]  not  a  statement	102	None	add
213	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }	  	non-compiled	[CE]  not  a  statement	102	None	add
214	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }	  	non-compiled	[CE]  not  a  statement	102	None	add
215	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_LONG_ARRAY;  }  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_LONG_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  type  =  EMPTY_LONG_ARRAY;  }	  	non-compiled	[CE]  not  a  statement	102	None	add
216	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  T[]  array  =(T[])elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	102	None	add
217	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }	  if(array    ==    null)    {    if(array.length    ==    0)    {    return    new    T[1];    }    	non-compiled	[CE]  not  a  statement	106	None	replace
218	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  type,  subarray);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  type,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  type,  subarray);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
219	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  joinedArray,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  joinedArray,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  joinedArray,  type);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
220	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  type,  joinedArray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  type,  joinedArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  type,  joinedArray);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
221	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  joinArray,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  joinArray,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  joinArray,  type);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
222	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
223	[BUG]  [BUGGY]  if(array!=  null)return  null;  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)return  null;  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)return  null;  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
224	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	4	None	add
225	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	4	None	add
226	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	4	None	add
227	[BUG]  [BUGGY]  Integer[]  element  =  array.getValues();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getValues();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.getValues();	  Integer[]    element    =    array.getElements();    	non-compiled	[CE]  not  a  statement	75	None	replace
228	[BUG]  [BUGGY]  Integer[]  element  =  array.getImplicitElements();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getImplicitElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.getImplicitElements();	  Integer[]    element    =    array.getElements();    	non-compiled	[CE]  not  a  statement	75	None	replace
229	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  ==  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  ==  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    ==    0)    {    if(array  ==  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  not  a  statement	63	None	add
230	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    ==    0)    {    if(array!=  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  not  a  statement	63	None	add
231	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length!=  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    ==    0)    {    if(array  ==  null  ||  array.length!=  0)  {	  	non-compiled	[CE]  not  a  statement	63	None	add
232	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    ==    0)    {    if(array  ==  null  ||  array.length  >=  0)  {	  	non-compiled	[CE]  not  a  statement	63	None	add
233	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  array  =(T[])array.clone();  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  array  =(T[])array.clone();  array  =(T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    array  =(T[])array.clone();  array  =(T[])array.clone();	  	non-compiled	[CE]  not  a  statement	51	None	add
234	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	51	None	add
235	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  array  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	51	None	add
236	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	51	None	add
237	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  subarray);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  subarray);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  subarray);  }	  return(T[])ArrayUtils.copyOf(array,    subarray);    	non-compiled	[CE]  not  a  statement	89	None	replace
238	[BUG]  [BUGGY]  parent  =  element.createParent(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  element.createParent(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  element.createParent(array);	  parent    =    parent.createParent(array);    	non-compiled	[CE]  not  a  statement	120	None	replace
239	[BUG]  [BUGGY]  return(T[])array.clone();  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  array  =(T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    array  =(T[])array.clone();	  	non-compiled	[CE]  not  a  statement	90	None	add
240	[BUG]  [BUGGY]  return(T[])array.clone();  array.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    array.clone();	  	non-compiled	[CE]  not  a  statement	90	None	add
241	[BUG]  [BUGGY]  return(T[])array.clone();  (T[])array.clone();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  (T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    (T[])array.clone();	  	non-compiled	[CE]  not  a  statement	90	None	add
242	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.copyBoolean(array,  type);  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.copyBoolean(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.copyBoolean(array,  type);	  	non-compiled	[CE]  not  a  statement	90	None	add
243	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.copyCachedObject(array,  type);  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.copyCachedObject(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.copyCachedObject(array,  type);	  	non-compiled	[CE]  not  a  statement	90	None	add
244	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  result,  type);	  ArrayUtils.copyCurrentStructure(array,    result);    	non-compiled	[CE]  not  a  statement	12	None	replace
245	[BUG]  [BUGGY]  array  =(T)element.clone();  array  =(T)element.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  array  =(T)element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    array  =(T)element.clone();	  	non-compiled	[CE]  not  a  statement	98	None	add
246	[BUG]  [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    if(element!=  null)  {  array  =(T)element.clone();  }	  	non-compiled	[CE]  not  a  statement	98	None	add
247	[BUG]  [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_BOOLEAN_ARRAY;  }	  	non-compiled	[CE]  not  a  statement	98	None	add
248	[BUG]  [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_LONG_ARRAY;  }  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_LONG_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  EMPTY_LONG_ARRAY;  }	  	non-compiled	[CE]  not  a  statement	98	None	add
249	[BUG]  [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	98	None	add
250	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  }	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
251	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array  ==  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    >    0)    {    if(array  ==  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	21	None	add
252	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array!=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    >    0)    {    if(array!=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	21	None	add
253	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array  >=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  if(array  >=  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    >    0)    {    if(array  >=  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	21	None	add
254	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  If(array  ==  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  If(array  ==  null  ||  array.length  >  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length    >    0)    {    If(array  ==  null  ||  array.length  >  0)  {	  	non-compiled	[CE]  not  a  statement	21	None	add
255	[BUG]  [BUGGY]  if(array.length  ==  0)  {  return  new  T[1];  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array.length  ==  0)  {  return  new  T[1];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array.length  ==  0)  {  return  new  T[1];  }	  if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	117	None	replace
256	[BUG]  [BUGGY]  type  =  array.getClass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  array.getClass();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
257	[BUG]  [BUGGY]  type  =  array.getDeclaredType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  array.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  array.getDeclaredType();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
258	[BUG]  [BUGGY]  type  =  array.getType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  array.getType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  array.getType();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
259	[BUG]  [BUGGY]  type  =  element.getDeclaredType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  element.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  element.getDeclaredType();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
260	[BUG]  [BUGGY]  parent.add(array,  subarray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent.add(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  subarray);	  parent.add(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
261	[BUG]  [BUGGY]  parent.add(array,  type,  subarray);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent.add(array,  type,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  type,  subarray);	  parent.add(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
262	[BUG]  [BUGGY]  parent.add(array,  element);  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  element);	  parent.add(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
263	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  &&  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  &&  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	32	None	replace
264	[BUG]  [BUGGY]  parent  ==  null)  {  if(parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null)  {  if(parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null)  {  if(parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	32	None	replace
265	[BUG]  [BUGGY]  array  =(T[])elem.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])elem.clone();	  array    =(T[])element.clone();    	non-compiled	[CE]  not  a  statement	97	None	replace
266	[BUG]  [BUGGY]  array  =  element.getDeclaredType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getDeclaredType();	  array    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	16	None	replace
267	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.getDeclaredType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.getDeclaredType();	  array    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	16	None	replace
268	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredType());  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredType());  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getDeclaredType());	  array    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	16	None	replace
269	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	6	None	add
270	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	6	None	add
271	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	6	None	add
272	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	6	None	add
273	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  not  a  statement	6	None	add
274	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  Integer[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getClass();  Integer[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    array    =    array.getClass();    Integer[]  array  =  array.getClass();	  	non-compiled	[CE]  not  a  statement	76	None	add
275	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  int[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getClass();  int[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    array    =    array.getClass();    int[]  array  =  array.getClass();	  	non-compiled	[CE]  not  a  statement	76	None	add
276	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  Object[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getClass();  Object[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    array    =    array.getClass();    Object[]  array  =  array.getClass();	  	non-compiled	[CE]  not  a  statement	76	None	add
277	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  Long[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getClass();  Long[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    array    =    array.getClass();    Long[]  array  =  array.getClass();	  	non-compiled	[CE]  not  a  statement	76	None	add
278	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getAstRootClass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getAstRootClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getAstRootClass();	  Class    <?>[]    array    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	113	None	replace
279	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  =  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length  <  =  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length  <  =  0)  {	  if(array    ==    null    ||    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	22	None	replace
280	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
281	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
282	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
283	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	53	None	add
284	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
285	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	33	None	replace
286	[BUG]  [BUGGY]  parent  ==  null  &&  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  &&  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  &&  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	33	None	replace
287	[BUG]  [BUGGY]  type  =  element.getDeclaredClass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  element.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  element.getDeclaredClass();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
288	[BUG]  [BUGGY]  parent.add(array,  result);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent.add(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  result);	  parent.add(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
289	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    array  =(T[])array.clone();  if(array  ==  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	56	None	add
290	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  array  =(T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    array  =(T[])array.clone();	  	non-compiled	[CE]  not  a  statement	56	None	add
291	[BUG]  [BUGGY]  Class  <?>  type  =  element.getType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  element.getType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  element.getType();	  Class    <?>    type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	108	None	replace
292	[BUG]  [BUGGY]  T[]  array  =(T[])super.add(array,  element);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])super.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])super.add(array,  element);	  T[]    array    =(T[])element.clone();    	non-compiled	[CE]  not  a  statement	61	None	replace
293	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
294	[BUG]  [BUGGY]  if(array  ==  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  return(T[])array.clone();  }  else  {  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
295	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
296	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.clone();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.clone();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.clone();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
297	[BUG]  [BUGGY]  array  =(array!=  null)?  null  :  array.clone();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array!=  null)?  null  :  array.clone();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array!=  null)?  null  :  array.clone();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
298	[BUG]  [BUGGY]  array  =(array!=  null)?  null  :  array.getComponentType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array!=  null)?  null  :  array.getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array!=  null)?  null  :  array.getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
299	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.getClass();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.getClass();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    >=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
300	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  result,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  result,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  result,  type);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
301	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  array,  type);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
302	[BUG]  [BUGGY]  result  =(T[])array.clone();  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  result  =(T[])array.clone();  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	result  =(T[])array.clone();  if(result  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	58	None	replace
303	[BUG]  [BUGGY]  If(array!=  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  If(array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	If(array!=  null)  {	  if(array    ==    null)    {    If(array    ==    null)    {    	non-compiled	[CE]  not  a  statement	95	None	replace
304	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length  >=  0)  {  return  new  T[0];  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  if(array.length  >=  0)  {  return  new  T[0];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length  >=  0)  {  return  new  T[0];  }	  if(array    ==    null)    {    if(array.length    ==    0)    {    return    new    T[1];    }    	non-compiled	[CE]  not  a  statement	106	None	replace
305	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	52	None	replace
306	[BUG]  [BUGGY]  Class  <?>[]  array  =(Class  <?>[])array.clone();  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =(Class  <?>[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =(Class  <?>[])array.clone();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
307	[BUG]  [BUGGY]  Class  <?>[]  array  =  new  Class  <?>[array.length];  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  new  Class  <?>[array.length];  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  new  Class  <?>[array.length];	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
308	[BUG]  [BUGGY]  if(array.length!=  0)  {  return  new  T[0];  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array.length!=  0)  {  return  new  T[0];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array.length!=  0)  {  return  new  T[0];  }	  if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	117	None	replace
309	[BUG]  [BUGGY]  array.length  ==  0)  {  return  new  T[0];  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array.length  ==  0)  {  return  new  T[0];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array.length  ==  0)  {  return  new  T[0];  }	  if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	117	None	replace
310	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	53	None	add
311	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	53	None	add
312	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  Object[]  element  =  array.getElements();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements();  Object[]  element  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    element    =    array.getElements();    Object[]  element  =  array.getElements();	  	non-compiled	[CE]  not  a  statement	74	None	add
313	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  array  =(T)elem.add(array,  element);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  array  =(T)elem.add(array,  element);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  array  =(T)elem.add(array,  element);  }	  	non-compiled	[CE]  not  a  statement	102	None	add
314	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(elem!=  null)  {  array  =(T)elem.add(array,  element);  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(elem!=  null)  {  array  =(T)elem.add(array,  element);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(elem!=  null)  {  array  =(T)elem.add(array,  element);  }	  	non-compiled	[CE]  not  a  statement	102	None	add
315	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  Object  element  =(Object)elem.add(array,  element);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  Object  element  =(Object)elem.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    Object  element  =(Object)elem.add(array,  element);	  	non-compiled	[CE]  not  a  statement	102	None	add
316	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  array  =(T)elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  array  =(T)elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  array  =(T)elem.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	102	None	add
317	[BUG]  [BUGGY]  Class  <?>  type  =  array.getComponentType();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  array.getComponentType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getComponentType();	  Class    <?>    type    =    array.getClass();    	non-compiled	[CE]  not  a  statement	112	None	replace
318	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  element);	  array    =    ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	13	None	replace
319	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.checkState(array!=  null);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.checkState(array!=  null);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.checkState(array!=  null);	  	non-compiled	[CE]  not  a  statement	90	None	add
320	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.copy(array,  subarray);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.copy(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.copy(array,  subarray);	  	non-compiled	[CE]  not  a  statement	90	None	add
321	[BUG]  [BUGGY]  array  =(T)array.cloneTree().add(array,  subarray);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.cloneTree().add(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.cloneTree().add(array,  subarray);	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
322	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  type  =(T[])array.clone();  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  type  =(T[])array.clone();  array  =(T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    type  =(T[])array.clone();  array  =(T[])array.clone();	  	non-compiled	[CE]  not  a  statement	51	None	add
323	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	51	None	add
324	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  array  =(T[])array.clone();  }	  	non-compiled	[CE]  not  a  statement	51	None	add
325	[BUG]  [BUGGY]  array  =(array  ==  null)?  null  :  array.toArray();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null)?  null  :  array.toArray();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null)?  null  :  array.toArray();	  if(array!=    null)    {    if(array.length    ==    0)    {    return    new    T[];    }    	non-compiled	[CE]  not  a  statement	30	None	replace
326	[BUG]  [BUGGY]  if(array!=  null)  {  array  =  new  T[Array.length];  System.arraycopy(array,  0,  array,  0,  array.length);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =  new  T[Array.length];  System.arraycopy(array,  0,  array,  0,  array.length);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =  new  T[Array.length];  System.arraycopy(array,  0,  array,  0,  array.length);  }	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    0,    array.length);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
327	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  Integer.MAX_VALUE);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  Integer.MAX_VALUE);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type,  Integer.MAX_VALUE);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
328	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getArray();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getArray();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getArray();	  Class    <?>[]    array    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	113	None	replace
329	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getElements();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getElements();	  Class    <?>[]    array    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	113	None	replace
330	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array  >=  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array!=  null)  {  if(array  >=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array!=  null)  {  if(array  >=  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
331	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  type,  array.length);  [CE]  not  a  statement  [FE]        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  type,  array.length);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  type,  array.length);	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
332	[BUG]  [BUGGY]  parent  =(parent  ==  null)?  null  :  parent.getParent();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =(parent  ==  null)?  null  :  parent.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =(parent  ==  null)?  null  :  parent.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	71	None	replace
333	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length!=  0);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.checkState(array.length!=  0);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.checkState(array.length!=  0);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	124	None	replace
334	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[1];  }  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[1];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[1];  }	  if(array    ==    null)    {    if(array.length!=    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	29	None	replace
335	[BUG]  [BUGGY]  parent  ==  null  ||  array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
336	[BUG]  [BUGGY]  parent  ==  null  ||  array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
337	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  result);  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  result);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
338	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  element);  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  element);	  array    =(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
339	[BUG]  [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  If(array!=  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    If(array  ==  null)  {  if(array  ==  null)  {  If(array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        If(array    ==    null)    {    if(array  ==  null)  {  If(array!=  null)  {	  	non-compiled	[CE]  not  a  statement	94	None	add
340	[BUG]  [BUGGY]  parent  =  parent.createParent(array,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  parent.createParent(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(array,  subarray);	  parent    =    parent.createParent(array,    parent);    	non-compiled	[CE]  not  a  statement	122	None	replace
341	[BUG]  [BUGGY]  array  =(T)element.add(array,  result);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.add(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)element.add(array,  result);	  array    =(T)element.add(array,    type);    	non-compiled	[CE]  not  a  statement	73	None	replace
342	[BUG]  [BUGGY]  array  =(T)element.clone();  ArrayUtils.array  =(T)element.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  ArrayUtils.array  =(T)element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    ArrayUtils.array  =(T)element.clone();	  	non-compiled	[CE]  not  a  statement	98	None	add
343	[BUG]  [BUGGY]  array  =(T)element.clone();  Object  element  =  element.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  Object  element  =  element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    Object  element  =  element.clone();	  	non-compiled	[CE]  not  a  statement	98	None	add
344	[BUG]  [BUGGY]  array  =(T)element.clone();  ArrayUtils.copy(array,  type);  array  =(T)element.clone();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  ArrayUtils.copy(array,  type);  array  =(T)element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    ArrayUtils.copy(array,  type);  array  =(T)element.clone();	  	non-compiled	[CE]  not  a  statement	98	None	add
345	[BUG]  [BUGGY]  parent  =  parent.createParent(parent);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  =  parent.createParent(parent);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(parent);	  parent    =    parent.createParent(array);    	non-compiled	[CE]  not  a  statement	120	None	replace
346	[BUG]  [BUGGY]  if(array  ==  null)  {  return(T[])Array.newInstance(array,  0);  }  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  return(T[])Array.newInstance(array,  0);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  return(T[])Array.newInstance(array,  0);  }	  return(T[])Array.newInstance(array,    0);    	non-compiled	[CE]  not  a  statement	127	None	replace
347	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  2)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  if(array!=  null  ||  array.length  <  2)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    <    0)    {    if(array!=  null  ||  array.length  <  2)  {	  	non-compiled	[CE]  not  a  statement	2	None	add
348	[BUG]  [BUGGY]  Integer[]  EMPTY_INT_ARRAY  =  array.getIntValue();  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  EMPTY_INT_ARRAY  =  array.getIntValue();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  EMPTY_INT_ARRAY  =  array.getIntValue();	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	109	None	replace
349	[BUG]  [BUGGY]  if(ArrayUtils.isLiteral(array)||  array!=  null)  {  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(ArrayUtils.isLiteral(array)||  array!=  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(ArrayUtils.isLiteral(array)||  array!=  null)  {	  if(array    ==    null)    {    if(array!=    null)    {    	non-compiled	[CE]  not  a  statement	36	None	replace
350	[BUG]  [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(Object[])array.clone();  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  Object[]  array  =(Object[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])element.clone();  Object[]  array  =(Object[])array.clone();	          array    =(T[])array.clone();    Object[]    array    =(Object[])array.clone();    	non-compiled	[CE]  not  a  statement	55	None	replace
351	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  array.length);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND,  array.length);	  ArrayUtils.copyCurrentStructure(array,    element,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	129	None	replace
352	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length!=  2)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  if(array  ==  null  ||  array.length!=  2)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    if(array  ==  null  ||  array.length!=  2)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
353	[BUG]  [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  element);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])ArrayUtils.deepClone(array,  element);	  T[]    array    =(T[])ArrayUtils.deepClone(array);    	non-compiled	[CE]  not  a  statement	125	None	replace
354	[BUG]  [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  result);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])ArrayUtils.deepClone(array,  result);	  T[]    array    =(T[])ArrayUtils.deepClone(array);    	non-compiled	[CE]  not  a  statement	125	None	replace
355	[BUG]  [BUGGY]  Integer[]  element  =  array.cloneTree();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.cloneTree();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.cloneTree();	  Integer[]    element    =    array.getElements();    	non-compiled	[CE]  not  a  statement	75	None	replace
356	[BUG]  [BUGGY]  Integer[]  element  =  array.toArray();  [CE]  ';'  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.toArray();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.toArray();	  Integer[]    element    =    array.getElements();    	non-compiled	[CE]  ';'  expected	75	None	replace
357	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  Float[]  array  =  array.getClass();  [CE]  ';'  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getClass();  Float[]  array  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]    array    =    array.getClass();    Float[]  array  =  array.getClass();	  	non-compiled	[CE]  ';'  expected	76	None	add
358	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  inputArray);  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  inputArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  inputArray);	  array    =(T[])ArrayUtils.newInstance(array,    subarray);    	non-compiled	[CE]  not  a  statement	43	None	replace
359	[BUG]  [BUGGY]  T[]  array  =(T[])result.toArray(new  T[result.size()  ]);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.toArray(new  T[result.size()  ]);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])result.toArray(new  T[result.size()  ]);	  T[]    array    =(T[])result.clone();    	non-compiled	[CE]  not  a  statement	81	None	replace
360	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  result);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  result);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  result);	  return(T[])ArrayUtils.copyOf(array,    subarray);    	non-compiled	[CE]  not  a  statement	89	None	replace
361	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  array);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  array);	  return(T[])ArrayUtils.copyOf(array,    subarray);    	non-compiled	[CE]  not  a  statement	89	None	replace
362	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  array  =(Object[])elem.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  array  =(Object[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    Object[]  array  =(Object[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
363	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.array[]  array  =(T[])elem.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.array[]  array  =(T[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    ArrayUtils.array[]  array  =(T[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
364	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copy(array,  array,  subarray);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copy(array,  array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    ArrayUtils.copy(array,  array,  subarray);	  	non-compiled	[CE]  not  a  statement	82	None	add
365	[BUG]  [BUGGY]  parent  ==  null  ||  array.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	33	None	replace
366	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Integer  subarray  =  array.getIntValue();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Integer  subarray  =  array.getIntValue();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    Integer  subarray  =  array.getIntValue();	  	non-compiled	[CE]  not  a  statement	88	None	add
367	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Object  subarray  =  element.getObject();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Object  subarray  =  element.getObject();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    Object  subarray  =  element.getObject();	  	non-compiled	[CE]  not  a  statement	88	None	add
368	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  ArrayUtils.array[]  array  =(T[])result.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  ArrayUtils.array[]  array  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    ArrayUtils.array[]  array  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
369	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  result  =(Object[])result.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  result  =(Object[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    Object[]  result  =(Object[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
370	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  array  =(Object[])result.clone();  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  array  =(Object[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    Object[]  array  =(Object[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
371	[BUG]  [BUGGY]  array  =  element.getAstRoot(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getAstRoot(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getAstRoot(array);	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
372	[BUG]  [BUGGY]  Integer[]  array  =  array.getElements();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getElements();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getElements();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
373	[BUG]  [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[0]);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[0]);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.toArray(new  Integer[0]);	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
374	[BUG]  [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[array.size()  ]);  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[array.size()  ]);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.toArray(new  Integer[array.size()  ]);	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
375	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  ArrayUtils.array  =(T)array.add(element,  array);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  ArrayUtils.array  =(T)array.add(element,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    ArrayUtils.array  =(T)array.add(element,  array);	  	non-compiled	[CE]  not  a  statement	100	None	add
376	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	100	None	add
377	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
378	[BUG]  [BUGGY]  array  =(T[])element.clone();  Object[]  element  =(Object[])element.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  Object[]  element  =(Object[])element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    Object[]  element  =(Object[])element.clone();	  	non-compiled	[CE]  not  a  statement	96	None	add
379	[BUG]  [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    if(element!=  null)  {  array  =(T[])element.clone();  }	  	non-compiled	[CE]  not  a  statement	96	None	add
380	[BUG]  [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	96	None	add
381	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  element);  [CE]  not  a  statement  [FE]        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  element);	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
382	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [CE]  not  a  statement  [FE]          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }	  return(T[])ArrayUtils.copyOf(array,    type);    	non-compiled	[CE]  not  a  statement	126	None	replace
383	[BUG]  [BUGGY]  if(array  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  return(T[])ArrayUtils.copyOf(array,  type);  }	  return(T[])ArrayUtils.copyOf(array,    subarray);    	non-compiled	[CE]  not  a  statement	89	None	replace
384	[BUG]  [BUGGY]  if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[];  }	  if(array!=    null)    {    if(array.length    ==    0)    {    return    new    T[];    }    	non-compiled	[CE]  not  a  statement	30	None	replace
385	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[];  }  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[];  }	  if(array!=    null)    {    if(array.length    ==    0)    {    return    new    T[];    }    	non-compiled	[CE]  not  a  statement	30	None	replace
386	[BUG]  [BUGGY]  if(array!=  null  &&  array.length!=  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  &&  array.length!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  &&  array.length!=  0)  {	  if(array    ==    null    ||    array.length!=    0)    {    	non-compiled	[CE]  not  a  statement	66	None	replace
387	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  element  =(Object[])elem.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  Object[]  element  =(Object[])elem.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    Object[]  element  =(Object[])elem.clone();	  	non-compiled	[CE]  not  a  statement	82	None	add
388	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array,  element);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])elem.clone();  ArrayUtils.copyCurrentStructure(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])elem.clone();    ArrayUtils.copyCurrentStructure(array,  element);	  	non-compiled	[CE]  not  a  statement	82	None	add
389	[BUG]  [BUGGY]  if(array.length  ==  0)  {  return  EMPTY_INT_ARRAY;  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array.length  ==  0)  {  return  EMPTY_INT_ARRAY;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array.length  ==  0)  {  return  EMPTY_INT_ARRAY;  }	  if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	117	None	replace
390	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	56	None	add
391	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	56	None	add
392	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  type  =  array.getClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	56	None	add
393	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  >=  0)  {  [CE]  not  a  statement  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  &&  array.length  >=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  &&  array.length  >=  0)  {	  if(array!=    null    &&    array.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	119	None	replace
394	[BUG]  [BUGGY]  if(element!=  null)  {  array  =(T)element.add(array,  element);  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  array  =(T)element.add(array,  element);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  array  =(T)element.add(array,  element);  }	  array    =(T)element.add(array,    element);    	non-compiled	[CE]  not  a  statement	60	None	replace
395	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	11	None	replace
396	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }	  	non-compiled	[CE]  not  a  statement	86	None	add
397	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  type  =  array.getClass();  }  [CE]  <identifier>  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.deepCase(array);  if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);    if(array!=  null)  {  if(ArrayUtils.deepCase(array)!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  <identifier>  expected	86	None	add
398	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Object[]  subarray  =(Object[])ArrayUtils.copyOf(array,  subarray);  [CE]  <identifier>  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  Object[]  subarray  =(Object[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,    subarray);    Object[]  subarray  =(Object[])ArrayUtils.copyOf(array,  subarray);	  	non-compiled	[CE]  <identifier>  expected	88	None	add
399	[BUG]  [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    1,    array.length);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
400	[BUG]  [BUGGY]  if(array!=  null)  {  array  =  array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =  array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =  array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    1,    array.length);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
401	[BUG]  [BUGGY]  if(array!=  null)  {  if(array.length!=  0)  {  return  new  T[0];  }  [CE]  <identifier>  expected  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  if(array.length!=  0)  {  return  new  T[0];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  if(array.length!=  0)  {  return  new  T[0];  }	  if(array    ==    null)    {    if(array.length!=    0)    {    return    new    T[0];    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
402	[BUG]  [BUGGY]  Class  <?>[]  element  =  array.getClass();  [CE]  <identifier>  expected  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  element  =  array.getClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  element  =  array.getClass();	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
403	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	}	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
404	[BUG]  [BUGGY]  parent  ==  null  ||  array!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
405	[BUG]  [BUGGY]  parent  ==  null  ||  array.isArray())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.isArray())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.isArray())  {  throw  new  IllegalStateException( " ");  }	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
406	[BUG]  [BUGGY]  parent!=  null  &&  array.getClass()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent!=  null  &&  array.getClass()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent!=  null  &&  array.getClass()!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
407	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]          ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  [Delete]  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	[Delete]	  if(array!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
408	[BUG]  [BUGGY]  TreeSet  <  T>  emptySet  =  TreeSets.newHashSet(array);  [CE]  <identifier>  expected  [FE]        NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  TreeSet  <  T>  emptySet  =  TreeSets.newHashSet(array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	TreeSet  <  T>  emptySet  =  TreeSets.newHashSet(array);	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
409	[BUG]  [BUGGY]  TreeSet  <  T>  array  =(T[])array.clone();  [CE]  <identifier>  expected  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  TreeSet  <  T>  array  =(T[])array.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	TreeSet  <  T>  array  =(T[])array.clone();	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
410	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	51	None	add
411	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  Object.class;  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  Object.class;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  array  =(T[])array.clone();  }  else  {  type  =  Object.class;  }	  	non-compiled	[CE]  not  a  statement	51	None	add
412	[BUG]  [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        array    =(T[])array.clone();    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	51	None	add
413	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  <  null)  {  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  <  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array  ==  null)  {  if(array  <  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
414	[BUG]  [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  >>  null)  {  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array    ==    null)    {    if(array  >=  null)  {  if(array  ==  null)  {  if(array  >>  null)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array        ==        null)        {        if(array    >=    null)    {    if(array  ==  null)  {  if(array  >>  null)  {	  	non-compiled	[CE]  not  a  statement	92	None	add
415	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredType())?  null  :  array.getDeclaredType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredType())?  null  :  array.getDeclaredType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getDeclaredType())?  null  :  array.getDeclaredType();	  array    =    array.getDeclaredType();    	non-compiled	[CE]  not  a  statement	16	None	replace
416	[BUG]  [BUGGY]  if(array!=  null)  {  array  =  array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =  array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =  array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
417	[BUG]  [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
418	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.checkState(array.length  ==  0);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.checkState(array.length  ==  0);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.checkState(array.length  ==  0);	  	non-compiled	[CE]  not  a  statement	90	None	add
419	[BUG]  [BUGGY]  return(T[])array.clone();  ArrayUtils.checkAndFixClass(array,  type);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  return(T[])array.clone();  ArrayUtils.checkAndFixClass(array,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();    ArrayUtils.checkAndFixClass(array,  type);	  	non-compiled	[CE]  not  a  statement	90	None	add
420	[BUG]  [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	85	None	replace
421	[BUG]  [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =(T[])array.clone();  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	85	None	replace
422	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  inputArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  inputArray);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  inputArray);	  ArrayUtils.copyCurrentStructure(array,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
423	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	58	None	replace
424	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredClass())?  null  :  array.getDeclaredClass();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getDeclaredClass())?  null  :  array.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getDeclaredClass())?  null  :  array.getDeclaredClass();	  array    =    array.getDeclaredClass();    	non-compiled	[CE]  not  a  statement	17	None	replace
425	[BUG]  [BUGGY]  type  =  array.getComponentType();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  array.getComponentType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  array.getComponentType();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
426	[BUG]  [BUGGY]  type  =  array.getDeclaredClass();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  type  =  array.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  array.getDeclaredClass();	  type    =    element.getClass();    	non-compiled	[CE]  not  a  statement	44	None	replace
427	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.add(array,  type);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  array    =(T)array.add(array,    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
428	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  type);  }  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  type);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.add(array,  type);  }	  array    =(T)array.add(array,    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
429	[BUG]  [BUGGY]  if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_OBJECT_ARRAY)  {  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_OBJECT_ARRAY)  {  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_OBJECT_ARRAY)  {  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
430	[BUG]  [BUGGY]  if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_INT_ARRAY)  {  return(T[])array.clone();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_INT_ARRAY)  {  return(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)return(T[])array.clone();  if(type  ==  EMPTY_INT_ARRAY)  {  return(T[])array.clone();  }	  return(T[])array.clone();    	non-compiled	[CE]  not  a  statement	91	None	replace
431	[BUG]  [BUGGY]  Class  <?>  type  =  array.getDeclaredClass();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  type  =  array.getDeclaredClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getDeclaredClass();	  Class    <?>    type    =    array.getClass();    	non-compiled	[CE]  not  a  statement	112	None	replace
432	[BUG]  [BUGGY]  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	          if(array!=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array    >=    null)    {    throw    new    IllegalArgumentException(       "       ");    }    	non-compiled	[CE]  not  a  statement	8	None	replace
433	[BUG]  [BUGGY]  parent.add(array,  EMPTY_INT_ARRAY);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent.add(array,  EMPTY_INT_ARRAY);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  EMPTY_INT_ARRAY);	  parent.add(array,    type);    	non-compiled	[CE]  not  a  statement	18	None	replace
434	[BUG]  [BUGGY]  T[]  array  =(T[])result.toArray();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.toArray();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])result.toArray();	  T[]    array    =(T[])result.clone();    	non-compiled	[CE]  not  a  statement	81	None	replace
435	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type,  inDEX_NOT_FOUND);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type,  inDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    element,    type);    	non-compiled	[CE]  not  a  statement	130	None	replace
436	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
437	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.get(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.get(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.get(array);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
438	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.add(array,  element);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  array    =(T)array.add(element,    array);    	non-compiled	[CE]  not  a  statement	101	None	replace
439	[BUG]  [BUGGY]  Integer[]  array  =  array.getParent();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.getParent();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getParent();	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
440	[BUG]  [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[size()  ]);  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  array  =  array.toArray(new  Integer[size()  ]);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.toArray(new  Integer[size()  ]);	  Integer[]    array    =    array.getClass();    	non-compiled	[CE]  not  a  statement	77	None	replace
441	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  If(array  ==  null  ||  array.length!=  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  If(array  ==  null  ||  array.length!=  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null    ||    array.length!=    0)    {    If(array  ==  null  ||  array.length!=  0)  {	  	non-compiled	[CE]  not  a  statement	65	None	add
442	[BUG]  [BUGGY]  parent  ==  null  ||  array.getParent()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.getParent()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.getParent()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
443	[BUG]  [BUGGY]  parent  ==  null  ||  array.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.getClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
444	[BUG]  [BUGGY]  parent  ==  null  ||  array.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  if(array    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	1	None	replace
445	[BUG]  [BUGGY]  array  =  element.getComponentType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  element.getComponentType();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getComponentType();	  array    =    element.getClass();    	non-compiled	[CE]  not  a  statement	45	None	replace
446	[BUG]  [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  return(T[])ArrayUtils.deepCase(array);  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  return(T[])ArrayUtils.deepCase(array);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  return(T[])ArrayUtils.deepCase(array);  }  else  {  return(T[])ArrayUtils.deepCase(array);  }	  return(T[])ArrayUtils.deepCase(array);    	non-compiled	[CE]  not  a  statement	87	None	replace
447	[BUG]  [BUGGY]  parent  ==  null  ||  element!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  element!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  element!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
448	[BUG]  [BUGGY]  parent  ==  null  ||  array.getClass()!=  element)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  array.getClass()!=  element)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  array.getClass()!=  element)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	31	None	replace
449	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  type  =(T)elem.add(array,  element);  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  type  =(T)elem.add(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    type  =(T)elem.add(array,  element);	  	non-compiled	[CE]  not  a  statement	102	None	add
450	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)elem.add(array,  element);  if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)elem.add(array,    element);    if(element!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  not  a  statement	102	None	add
451	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements2();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Integer[]  element  =  array.getElements2();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.getElements2();	  Integer[]    element    =    array.getElements();    	non-compiled	[CE]  not  a  statement	75	None	replace
452	[BUG]  [BUGGY]  parent  ==  null  ||  element  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  parent  ==  null  ||  element  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  element  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	32	None	replace
453	[BUG]  [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }  [CE]  not  a  statement  [FE]          NullPointerException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }	  if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    System.arraycopy(array,    0,    array,    0,    array.length);    }    	non-compiled	[CE]  not  a  statement	110	None	replace
454	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
455	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
456	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(element!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(element!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
457	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    if(array!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	53	None	add
458	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	6	None	add
459	[BUG]  [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]      ClassCastException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          if(array!=    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(     "     ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                if(array!=        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(array    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  <identifier>  expected	6	None	add
460	[BUG]  [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          array    =(T[])array.clone();    array    =(T[])array.clone();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
461	[BUG]  [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =(T[])element.clone();  }  [CE]  <identifier>  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T[])element.clone();  if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =(T[])element.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T[])element.clone();    if(element!=  null)  {  array  =(T[])element.clone();  }  else  {  type  =(T[])element.clone();  }	  	non-compiled	[CE]  <identifier>  expected	96	None	add
462	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  Object.class;  }  [CE]  <identifier>  expected  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)array.add(element,  array);  if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  Object.class;  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)array.add(element,    array);    if(array!=  null)  {  array  =(T)array.add(element,  array);  }  else  {  type  =  Object.class;  }	  	non-compiled	[CE]  <identifier>  expected	100	None	add
463	[BUG]  [BUGGY]  array[i]  =  array[i].getComponentType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[i]  =  array[i].getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[i]  =  array[i].getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
464	[BUG]  [BUGGY]  array  =  array[i].getComponentType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array[i].getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array[i].getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
465	[BUG]  [BUGGY]  array  =  array.getComponentType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array.getComponentType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.getComponentType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getComponentType();    }    	non-compiled	[CE]  not  a  statement	114	None	replace
466	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    if(element!=  null)  {  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
467	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  if(element!=  null)  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    if(element!=  null)  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
468	[BUG]  [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  type  =(T[])array.getClass();  }  [CE]  not  a  statement  [FE]        ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]          array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  type  =(T[])array.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	                array        =(T[])array.clone();        if(array!=    null)    {    array    =(T[])array.clone();    }    else    {    type    =(T[])array.clone();    }    array  =(T[])array.clone();  if(array!=  null)  {  type  =  array.getClass();  }  else  {  type  =(T[])array.getClass();  }	  	non-compiled	[CE]  not  a  statement	84	None	add
469	[BUG]  [BUGGY]  array  =(array  ==  null?  null  :  array.getRoot())+  1;  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(array  ==  null?  null  :  array.getRoot())+  1;  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(array  ==  null?  null  :  array.getRoot())+  1;	  array    =    array.getRoot();    	non-compiled	[CE]  not  a  statement	46	None	replace
470	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  element);  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null)  {  array  =(T)array.add(array,  element);  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T)array.add(array,  element);  }	  array    =(T)array.add(array,    element);    	non-compiled	[CE]  not  a  statement	59	None	replace
471	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  result  =(T[])result.clone();  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  T[]  array  =(T[])result.clone();  Object[]  result  =(T[])result.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]    array    =(T[])result.clone();    Object[]  result  =(T[])result.clone();	  	non-compiled	[CE]  not  a  statement	80	None	add
472	[BUG]  [BUGGY]  Class  <?>  array  =  element.getRawClass();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>  array  =  element.getRawClass();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  array  =  element.getRawClass();	  Class    <?>[]    array    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	113	None	replace
473	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getRawParameterType(0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  Class  <?>[]  array  =  element.getRawParameterType(0);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getRawParameterType(0);	  Class    <?>[]    array    =    element.getRawClass();    	non-compiled	[CE]  not  a  statement	113	None	replace
474	[BUG]  [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array  ==  null)  {  array  =(T[])array.clone();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  array  =(T[])array.clone();  }	          array    =(T[])array.clone();    if(array!=    null)    {    array    =(T[])array.clone();    }    	non-compiled	[CE]  not  a  statement	54	None	replace
475	[BUG]  [BUGGY]  array[i]  =  array[i].getDeclaredType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array[i]  =  array[i].getDeclaredType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array[i]  =  array[i].getDeclaredType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getDeclaredType();    }    	non-compiled	[CE]  not  a  statement	115	None	replace
476	[BUG]  [BUGGY]  array  =  array[i].getDeclaredType();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =  array[i].getDeclaredType();  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array[i].getDeclaredType();	  if(array!=    null)    {    for(int    i    =    0;    i    <    array.length;    ++i)    {    array[i]    =    array[i].getDeclaredType();    }    	non-compiled	[CE]  not  a  statement	115	None	replace
477	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  element,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  element,  type);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  element,  type);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
478	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  type,  array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  ArrayUtils.arrayup(array,  type,  array);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  type,  array);	  ArrayUtils.arrayup(array,    subarray,    type);    	non-compiled	[CE]  not  a  statement	123	None	replace
479	[BUG]  [BUGGY]  safeMultiply(array,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  safeMultiply(array,  element);  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	safeMultiply(array,  element);	  safeMultiply(array,    null);    	non-compiled	[CE]  not  a  statement	121	None	replace
480	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  <  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(array!=  null  &&  array.length  <  0)  {  [BUGGY]      type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  &&  array.length  <  0)  {	  if(array!=    null    ||    array.length    <    0)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
481	[BUG]  [BUGGY]  if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(element  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }	  if(array    ==    null)    {    if(array.length    ==    0)    {    return    new    T[1];    }    	non-compiled	[CE]  not  a  statement	106	None	replace
482	[BUG]  [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]    ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  element.getClass();  }  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    if(element!=  null)  {  array  =(T)element.clone();  }  else  {  type  =  element.getClass();  }	  	non-compiled	[CE]  not  a  statement	98	None	add
483	[BUG]  [BUGGY]  array  =(T)element.clone();  Object  element  =(Object)element.clone();  [CE]  not  a  statement  [FE]      ArrayStoreException    [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;      [BUGGY]  array  =(T)element.clone();  Object  element  =(Object)element.clone();  [BUGGY]      if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array    =(T)element.clone();    Object  element  =(Object)element.clone();	  	non-compiled	[CE]  not  a  statement	98	None	add
