bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array!=  null  ||  array.length  <  0)  {	  if(array    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	1	replace
3	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  <  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.length  <  0)  {	  if(array    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	1	replace
4	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  ClassCastException  	9	1	add
5	[BUG]  [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  ClassCastException  	9	1	add
6	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  ClassCastException  	9	1	add
7	[BUG]  [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(array  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  ClassCastException  	9	1	add
8	[BUG]  [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      if(array!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(array  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(array  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	9	None	add
9	[BUG]  [BUGGY]  array  =(T)super.array.clone();  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)super.array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)super.array.clone();	      array    =(T)array.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  array  =(T)this.array.clone();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)this.array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)this.array.clone();	      array    =(T)array.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type);  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  type);	      ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  result);	      ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  ArrayUtils.copyCurrentStructure(array);	      ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  subarray);	      ArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  array  =  array.cloneTree();  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  array.cloneTree();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.cloneTree();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  array  =  array.getDeclaredType();  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  array.getDeclaredType();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.getDeclaredType();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
17	[BUG]  [BUGGY]  array  =  array.getDeclaredClass();  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  array.getDeclaredClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.getDeclaredClass();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
18	[BUG]  [BUGGY]  parent.add(array,  type);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent.add(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent.add(array,  type);	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
19	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array!=  null  ||  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  NullPointerException  	17	1	replace
20	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  ||  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  NullPointerException  	17	1	replace
21	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array  ==  null  ||  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  NullPointerException  	17	1	replace
22	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  NullPointerException  	17	1	replace
23	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array!=  null  &&  array.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array!=  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    &&    array.length    >    0)    {    if(array!=  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
24	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array  ==  null  &&  array.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array  ==  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    &&    array.length    >    0)    {    if(array  ==  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
25	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array  >=  null  &&  array.length  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  if(array  >=  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    &&    array.length    >    0)    {    if(array  >=  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
26	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  If(array!=  null  &&  array.length  >  0)  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  &&  array.length  >  0)  {  If(array!=  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    &&    array.length    >    0)    {    If(array!=  null  &&  array.length  >  0)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
27	[BUG]  [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }  [CE]  generic  array  creation  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  generic  array  creation	21	None	replace
28	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }  [CE]  generic  array  creation  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[0];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  generic  array  creation	21	None	replace
29	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[0];  }  [CE]  generic  array  creation  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[0];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length!=  0)  {  return  new  T[0];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  generic  array  creation	21	None	replace
30	[BUG]  [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [CE]  array  dimension  missing  [FE]                    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  array  dimension  missing	21	None	replace
31	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  ==  null  ||  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  parent!=  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
32	[BUG]  [BUGGY]  parent  ==  null  ||  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  ==  null  ||  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  parent  ==  null)  {  if(element  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
33	[BUG]  [BUGGY]  parent  ==  null  ||  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  ==  null  ||  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
34	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  ==  null  ||  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  ==  null  ||  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
35	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  ==  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
36	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array!=  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
37	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  type)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  type)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array  ==  null  ||  array.getClass()!=  type)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
38	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  element)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  element)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array  ==  null  ||  array.getClass()!=  element)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  ==  null  ||  array.getClass()!=  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array  ==  null  ||  array.getClass()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
40	[BUG]  [BUGGY]  array  =(T[])super.array.clone();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])super.array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])super.array.clone();	      array    =(T[])array.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])ArrayUtils.copyOf(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.copyOf(array,  type);	      array    =(T[])array.clone();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  array  =(T[])this.subarray.clone();  [CE]  illegal  start  of  type  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])this.subarray.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])this.subarray.clone();	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
43	[BUG]  [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  subarray);  [CE]  illegal  start  of  type  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])ArrayUtils.newInstance(array,  subarray);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])ArrayUtils.newInstance(array,  subarray);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  type  =  element.getClass();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  type  =  element.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	type  =  element.getClass();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
45	[BUG]  [BUGGY]  array  =  element.getClass();  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  element.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  element.getClass();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  array  =  array.getRoot();  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  array.getRoot();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.getRoot();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    ==    0)    {    if(array!=  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
48	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array  ==  null  ||  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    ==    0)    {    if(array  ==  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array  >=  null  ||  array.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array  >=  null  ||  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    ==    0)    {    if(array  >=  null  ||  array.length  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
50	[BUG]  [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  ||  array.length  ==  0)  {  if(array!=  null  ||  array.length  >=  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=    null    ||    array.length    ==    0)    {    if(array!=  null  ||  array.length  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
51	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  array  =(T[])array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        array    =(T[])array.clone();    array  =(T[])array.clone();	  	compilable	  [FE]  NullPointerException  	7	1	add
52	[BUG]  [BUGGY]      array  =(T[])array.clone();  array  =(T[])array.clone();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  array  =(T[])array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    array  =(T[])array.clone();	  	compilable	  [FE]  NullPointerException  	7	1	add
53	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }	  	compilable	  [FE]  NullPointerException  	7	1	add
54	[BUG]  [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }	  	compilable	  [FE]  NullPointerException  	7	1	add
55	[BUG]  [BUGGY]      array  =(T[])array.clone();  Object[]  array  =(Object[])array.clone();  [CE]  variable  array  is  already  defined  in  method  <T>add(T[],T)  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  Object[]  array  =(Object[])array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    Object[]  array  =(Object[])array.clone();	  	non-compiled	[CE]  variable  array  is  already  defined  in  method  <T>add(T[],T)	7	None	add
56	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  NullPointerException  	7	1	add
57	[BUG]  [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  NullPointerException  	7	1	add
58	[BUG]  [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  array  =(T[])array.clone();  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
59	[BUG]  [BUGGY]  array  =(T)array.add(array,  element);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)array.add(array,  element);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.add(array,  element);	      array    =(T)super.add(array,    element);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  array  =(T)element.add(array,  element);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)element.add(array,  element);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)element.add(array,  element);	      array    =(T)super.add(array,    element);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  T[]  array  =(T[])element.clone();  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])element.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])element.clone();	      T[]    array    =(T[])array.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  T[]  array  =(T[])type.clone();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])type.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])type.clone();	      T[]    array    =(T[])array.clone();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array  ==  null  ||  array.length  ==  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
64	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length  ==  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array  ==  null  ||  array.length!=  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
66	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length!=  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length!=  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
67	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array  ==  null  ||  array.length  <  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
68	[BUG]  [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.length  <  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.length  <  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	compilable	  [FE]  NullPointerException  	4	1	replace
69	[BUG]  [BUGGY]  array  =(T)type.add(array,  type);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)type.add(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)type.add(array,  type);	      array    =(T)super.add(array,    type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  array  =(T)array.add(array,  type);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)array.add(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.add(array,  type);	      array    =(T)super.add(array,    type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  =  parent.getParent();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.getParent();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
72	[BUG]  [BUGGY]  array  =  array.getParent();  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =  array.getParent();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =  array.getParent();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
73	[BUG]  [BUGGY]  array  =(T)element.add(array,  type);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)element.add(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)element.add(array,  type);	      array    =(T)super.add(array,    type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Integer[]  element  =  array.getElements();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	Integer[]  element  =  array.getElements();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	20	2	replace
75	[BUG]  [BUGGY]  Integer[]  element  =  array.getElements();  [FE]  ArrayStoreException  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Integer[]  element  =  array.getElements();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  element  =  array.getElements();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	20	2	replace
76	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Integer[]  array  =  array.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	Integer[]  array  =  array.getClass();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	20	2	replace
77	[BUG]  [BUGGY]  Integer[]  array  =  array.getClass();  [FE]  ArrayStoreException  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Integer[]  array  =  array.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Integer[]  array  =  array.getClass();	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	20	2	replace
78	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array!=  null)  {  throw  new  IllegalStateException( " ");  }	      	compilable	  [FE]  ArrayStoreException  	5	2	replace
79	[BUG]  [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  ArrayStoreException  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  throw  new  IllegalStateException( " ");  }	      	compilable	  [FE]  ArrayStoreException  	5	2	replace
80	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])result.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	T[]  array  =(T[])result.clone();	      T[]    array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	13	2	replace
81	[BUG]  [BUGGY]  T[]  array  =(T[])result.clone();  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])result.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])result.clone();	      T[]    array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	13	2	replace
82	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])elem.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	T[]  array  =(T[])elem.clone();	      T[]    array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	13	2	replace
83	[BUG]  [BUGGY]  T[]  array  =(T[])elem.clone();  [FE]  ArrayStoreException  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])elem.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])elem.clone();	      T[]    array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	13	2	replace
84	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }	  	compilable	  [FE]  ArrayStoreException  	7	2	add
85	[BUG]  [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]      array  =(T[])array.clone();  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	        array    =(T[])array.clone();    if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  type  =(T[])array.clone();  }	  	compilable	  [FE]  ArrayStoreException  	7	2	add
86	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])ArrayUtils.deepCase(array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	return(T[])ArrayUtils.deepCase(array);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
87	[BUG]  [BUGGY]  return(T[])ArrayUtils.deepCase(array);  [FE]  ArrayStoreException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])ArrayUtils.deepCase(array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.deepCase(array);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
88	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	return(T[])ArrayUtils.copyOf(array,  subarray);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
89	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  [FE]  ArrayStoreException  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])ArrayUtils.copyOf(array,  subarray);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  subarray);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
90	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	return(T[])array.clone();	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
91	[BUG]  [BUGGY]  return(T[])array.clone();  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])array.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])array.clone();	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayStoreException  	10	2	replace
92	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  >=  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array    ==    null)    {    if(array  >=  null)  {	  	compilable	  [FE]  ArrayStoreException  	1	2	add
93	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array  >=  null)  {  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array  >=  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    if(array  >=  null)  {	  	compilable	  [FE]  ArrayStoreException  	1	2	add
94	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  If(array  ==  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array    ==    null)    {    If(array  ==  null)  {	  	compilable	  [FE]  ArrayStoreException  	1	2	add
95	[BUG]  [BUGGY]  if(array  ==  null)  {  If(array  ==  null)  {  [FE]  ArrayStoreException  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  If(array  ==  null)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array    ==    null)    {    If(array  ==  null)  {	  	compilable	  [FE]  ArrayStoreException  	1	2	add
96	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])element.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	array  =(T[])element.clone();	      array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	8	2	replace
97	[BUG]  [BUGGY]  array  =(T[])element.clone();  [FE]  ArrayStoreException  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T[])element.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T[])element.clone();	      array    =(T[])array.clone();    	compilable	  [FE]  ArrayStoreException  	8	2	replace
98	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)element.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	array  =(T)element.clone();	      array    =(T)array.clone();    	compilable	  [FE]  ArrayStoreException  	6	2	replace
99	[BUG]  [BUGGY]  array  =(T)element.clone();  [FE]  ArrayStoreException  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)element.clone();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)element.clone();	      array    =(T)array.clone();    	compilable	  [FE]  ArrayStoreException  	6	2	replace
100	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)array.add(element,  array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	array  =(T)array.add(element,  array);	      array    =(T)super.add(array,    element);    	compilable	  [FE]  ArrayStoreException  	11	2	replace
101	[BUG]  [BUGGY]  array  =(T)array.add(element,  array);  [FE]  ArrayStoreException  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)array.add(element,  array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)array.add(element,  array);	      array    =(T)super.add(array,    element);    	compilable	  [FE]  ArrayStoreException  	11	2	replace
102	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)elem.add(array,  element);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	array  =(T)elem.add(array,  element);	      array    =(T)super.add(array,    element);    	compilable	  [FE]  ArrayStoreException  	11	2	replace
103	[BUG]  [BUGGY]  array  =(T)elem.add(array,  element);  [FE]  ArrayStoreException  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  array  =(T)elem.add(array,  element);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	array  =(T)elem.add(array,  element);	      array    =(T)super.add(array,    element);    	compilable	  [FE]  ArrayStoreException  	11	2	replace
104	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	add	if(array  ==  null  &&  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  ArrayStoreException  	17	2	replace
105	[BUG]  [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  [FE]  ArrayStoreException  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  &&  array.length  >  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  &&  array.length  >  0)  {	  if(array!=    null    &&    array.length    >    0)    {    	compilable	  [FE]  ArrayStoreException  	17	2	replace
106	[BUG]  [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
107	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Class  <?>[]  array  =  element.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getClass();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
108	[BUG]  [BUGGY]  Class  <?>  type  =  element.getClass();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Class  <?>  type  =  element.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  element.getClass();	      if(array!=    null)    {    if(element    ==    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	19	None	replace
109	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
110	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  0,  array.length);  }	      array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
111	[BUG]  [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [CE]  not  a  statement  [FE]        NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  array  =(T[])array.clone();  }  else  {  System.arraycopy(array,  0,  array,  1,  array.length);  }	      array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
112	[BUG]  [BUGGY]  Class  <?>  type  =  array.getClass();  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Class  <?>  type  =  array.getClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>  type  =  array.getClass();	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
113	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getRawClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  Class  <?>[]  array  =  element.getRawClass();  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	Class  <?>[]  array  =  element.getRawClass();	      if(array!=    null)    {    if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	18	None	replace
114	[BUG]  [BUGGY]  if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getComponentType();  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getComponentType();  }  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getComponentType();  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
115	[BUG]  [BUGGY]  if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getDeclaredType();  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getDeclaredType();  }  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  for(int  i  =  0;  i  <  array.length;  ++i)  {  array[i]  =  array[i].getDeclaredType();  }	      	non-compiled	[CE]  not  a  statement	5	None	replace
116	[BUG]  [BUGGY]  if(array  ==  null  ||  array.size()  ==  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array  ==  null  ||  array.size()  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array  ==  null  ||  array.size()  ==  0)  {	  if(array    ==    null)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
117	[BUG]  [BUGGY]  if(array.length  ==  0)  {  return  new  T[0];  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array.length  ==  0)  {  return  new  T[0];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array.length  ==  0)  {  return  new  T[0];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
118	[BUG]  [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null)  {  if(array.length  ==  0)  {  return  new  T[1];  }	      if(element!=    null)    {    if(array.length    ==    0)    {    return    new    T[0];    }    	non-compiled	[CE]  not  a  statement	21	None	replace
119	[BUG]  [BUGGY]  if(array!=  null  &&  array.length  ==  0)  {  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  if(array!=  null  &&  array.length  ==  0)  {  [BUGGY]    type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	if(array!=  null  &&  array.length  ==  0)  {	  if(array!=    null    ||    array.length    ==    0)    {    	non-compiled	[CE]  not  a  statement	4	None	replace
120	[BUG]  [BUGGY]  parent  =  parent.createParent(array);  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  =  parent.createParent(array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(array);	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
121	[BUG]  [BUGGY]  safeMultiply(array,  null);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  safeMultiply(array,  null);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	safeMultiply(array,  null);	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
122	[BUG]  [BUGGY]  parent  =  parent.createParent(array,  parent);  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  parent  =  parent.createParent(array,  parent);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	parent  =  parent.createParent(array,  parent);	      if(element!=    null)    {    if(array.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	20	None	replace
123	[BUG]  [BUGGY]  ArrayUtils.arrayup(array,  subarray,  type);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.arrayup(array,  subarray,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.arrayup(array,  subarray,  type);	      array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	6	None	replace
124	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  0);  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.checkState(array.length  ==  0);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.checkState(array.length  ==  0);	      array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	6	None	replace
125	[BUG]  [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  T[]  array  =(T[])ArrayUtils.deepClone(array);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	T[]  array  =(T[])ArrayUtils.deepClone(array);	      T[]    array    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	13	None	replace
126	[BUG]  [BUGGY]  return(T[])ArrayUtils.copyOf(array,  type);  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])ArrayUtils.copyOf(array,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])ArrayUtils.copyOf(array,  type);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
127	[BUG]  [BUGGY]  return(T[])Array.newInstance(array,  0);  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])Array.newInstance(array,  0);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])Array.newInstance(array,  0);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
128	[BUG]  [BUGGY]  return(T[])Array.newInstance(array,  1);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  return(T[])Array.newInstance(array,  1);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	return(T[])Array.newInstance(array,  1);	      if(array!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
129	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  INDEX_NOT_FOUND);	      ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	15	None	replace
130	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;    [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [BUGGY]    if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3290	3290	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type);	      ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	15	None	replace
