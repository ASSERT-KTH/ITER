bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(array!=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array!=  null  &&  array.length  >  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array!=  null  &&  array.length  >  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  }  else  if(array  ==  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array  ==  null  &&  array.length  >  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array  ==  null  &&  array.length  >  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
3	[BUG]  [BUGGY]  }  else  if(array.length!=  0  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.length!=  0  &&  array.length  >  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.length!=  0  &&  array.length  >  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
4	[BUG]  [BUGGY]  }  else  if(array!=  null  ||  array.length  >  0)  {  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array!=  null  ||  array.length  >  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array!=  null  ||  array.length  >  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
5	[BUG]  [BUGGY]  type  =  array.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  type  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	type  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
6	[BUG]  [BUGGY]  Class  <?>[]  array  =  array.getClass();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>[]  array  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>[]  array  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
7	[BUG]  [BUGGY]  Class  <?>  type  =  array.getClass();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>  type  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>  type  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
8	[BUG]  [BUGGY]  }  else  if(array  ==  null)  {  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array  ==  null)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array  ==  null)  {	  }    else    if(element    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
9	[BUG]  [BUGGY]  }  else  if(array!=  null)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array!=  null)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array!=  null)  {	  }    else    if(element    ==    null)    {    	non-compiled	[CE]  not  a  statement	1	None	replace
10	[BUG]  [BUGGY]  }  else  if(element!=  null  &&  element.isAssignableFrom(array))  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element!=  null  &&  element.isAssignableFrom(array))  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element!=  null  &&  element.isAssignableFrom(array))  {	  }    else    if(element!=    null    &&    element.isArray())    {    	non-compiled	[CE]  not  a  statement	19	None	replace
11	[BUG]  [BUGGY]  }  else  if(element!=  null  ||  element.isArray())  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element!=  null  ||  element.isArray())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element!=  null  ||  element.isArray())  {	  }    else    if(element!=    null    &&    element.isArray())    {    	non-compiled	[CE]  not  a  statement	19	None	replace
12	[BUG]  [BUGGY]  }  else  if(array!=  null  &&  element.isArray())  {  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array!=  null  &&  element.isArray())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array!=  null  &&  element.isArray())  {	  }    else    if(element!=    null    &&    element.isArray())    {    	non-compiled	[CE]  not  a  statement	19	None	replace
13	[BUG]  [BUGGY]  array  =(T[])type.cloneByteArray();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T[])type.cloneByteArray();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T[])type.cloneByteArray();	      array    =(T[])type.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
14	[BUG]  [BUGGY]  array  =(T[])type.cloneByte();  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T[])type.cloneByte();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T[])type.cloneByte();	      array    =(T[])type.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
15	[BUG]  [BUGGY]  }  else  if(array.getClass()  ==  type)  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()  ==  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()  ==  type)  {	  }    else    if(element.getClass()    ==    type)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
16	[BUG]  [BUGGY]  }  else  if(array.getClass()  ==  element)  {  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()  ==  element)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()  ==  element)  {	  }    else    if(element.getClass()    ==    type)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
17	[BUG]  [BUGGY]  }  else  if(array.getClass()  ==  null)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()  ==  null)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()  ==  null)  {	  }    else    if(element.getClass()    ==    null)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
18	[BUG]  [BUGGY]  }  else  if(array.getClass()!=  null)  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()!=  null)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()!=  null)  {	  }    else    if(element.getClass()    ==    null)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(array,  type);	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
20	[BUG]  [BUGGY]  type  =  element.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  type  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	type  =  element.getClass();	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
21	[BUG]  [BUGGY]  Class  <?>[]  array  =  element.getClass();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>[]  array  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>[]  array  =  element.getClass();	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(element,  type);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(element,  type);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(element,  type);	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
23	[BUG]  [BUGGY]  type  =  array.getComponentType();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  type  =  array.getComponentType();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	type  =  array.getComponentType();	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  element);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  element);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(array,  element);	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
25	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(element);  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(element);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(element);	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
26	[BUG]  [BUGGY]  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T[])array.clone();  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T[])array.clone();	      	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
28	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  t)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
29	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(NoClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
30	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundErrorn't  done)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundErrorn't  done)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(NoClassDefFoundErrorn't  done)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
31	[BUG]  [BUGGY]  try  {  [Delete]  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  }	      if(type    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  array  =(T)super.array.clone();  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T)super.array.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T)super.array.clone();	      array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	12	None	replace
33	[BUG]  [BUGGY]  }  else  if(array.getClass()!=  type)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()!=  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()!=  type)  {	  }    else    if(element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
34	[BUG]  [BUGGY]  }  else  if(element.getClass()!=  array.getClass())  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element.getClass()!=  array.getClass())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element.getClass()!=  array.getClass())  {	  }    else    if(element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
35	[BUG]  [BUGGY]  }  else  if(element!=  null  &&  element.getClass()  ==  type)  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element!=  null  &&  element.getClass()  ==  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element!=  null  &&  element.getClass()  ==  type)  {	  }    else    if(element!=    null    &&    element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
36	[BUG]  [BUGGY]  }  else  if(type!=  null  &&  element.getClass()!=  type)  {  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(type!=  null  &&  element.getClass()!=  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(type!=  null  &&  element.getClass()!=  type)  {	  }    else    if(element!=    null    &&    element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
37	[BUG]  [BUGGY]  }  else  if(element!=  null  ||  element.getClass()!=  type)  {  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element!=  null  ||  element.getClass()!=  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element!=  null  ||  element.getClass()!=  type)  {	  }    else    if(element!=    null    &&    element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
38	[BUG]  [BUGGY]  Type[]  element  =  array.getType();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Type[]  element  =  array.getType();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Type[]  element  =  array.getType();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
39	[BUG]  [BUGGY]  TypeElement  element  =  array.getType();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  TypeElement  element  =  array.getType();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	TypeElement  element  =  array.getType();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
40	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundErrorn't  cause)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundErrorn't  cause)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	try  {  [Delete]  catch(NoClassDefFoundErrorn't  cause)  {  throw  new  IllegalArgumentException( " ");  }	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  parent  ==  null)  {  if(element!=  null)  {  type  =  element.getClass();  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  parent  ==  null)  {  if(element!=  null)  {  type  =  element.getClass();  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	parent  ==  null)  {  if(element!=  null)  {  type  =  element.getClass();  }	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
42	[BUG]  [BUGGY]  Class  <?>  element  =  element.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>  element  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>  element  =  element.getClass();	      if(type    ==    null)    {    if(element!=    null)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	14	None	replace
43	[BUG]  [BUGGY]  }  else  if(element  ==  null  &&  element.isArray())  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element  ==  null  &&  element.isArray())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element  ==  null  &&  element.isArray())  {	  }    else    if(element!=    null    &&    element.isArray())    {    	non-compiled	[CE]  not  a  statement	19	None	replace
44	[BUG]  [BUGGY]  }  else  if(element!=  null  &&  element.isObject())  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element!=  null  &&  element.isObject())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element!=  null  &&  element.isObject())  {	  }    else    if(element!=    null    &&    element.isArray())    {    	non-compiled	[CE]  not  a  statement	19	None	replace
45	[BUG]  [BUGGY]  }  else  if(array!=  null  &&  element.getClass()!=  type)  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array!=  null  &&  element.getClass()!=  type)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array!=  null  &&  element.getClass()!=  type)  {	  }    else    if(element!=    null    &&    element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
46	[BUG]  [BUGGY]  }  else  if(array.getClass()!=  element)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.getClass()!=  element)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.getClass()!=  element)  {	  }    else    if(element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	2	None	replace
47	[BUG]  [BUGGY]  safeTree();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  safeTree();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	safeTree();	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
48	[BUG]  [BUGGY]  allowNull(array);  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  allowNull(array);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	allowNull(array);	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
49	[BUG]  [BUGGY]  aughtException( " ");  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtException( " ");  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtException( " ");	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
50	[BUG]  [BUGGY]  allowNull();  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  allowNull();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	allowNull();	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(element,  array);  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(element,  array);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(element,  array);	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  not  a  statement	16	None	replace
52	[BUG]  [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)element).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)element).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	instanceof  Class  <?>  &&((  Class  <?>)element).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
53	[BUG]  [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)array).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)array).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	instanceof  Class  <?>  &&((  Class  <?>)array).isArray())  {  if(type  ==  EMPTY_OBJECT_ARRAY)  {  type  =  array.getClass();  }	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
54	[BUG]  [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)array).getType()  ==  Token.GETPROP)  {  type  =  array.getClass();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  instanceof  Class  <?>  &&((  Class  <?>)array).getType()  ==  Token.GETPROP)  {  type  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	instanceof  Class  <?>  &&((  Class  <?>)array).getType()  ==  Token.GETPROP)  {  type  =  array.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
55	[BUG]  [BUGGY]  array  =(T[])element.clone();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T[])element.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T[])element.clone();	      array    =(T[])type.clone();    	non-compiled	[CE]  not  a  statement	8	None	replace
56	[BUG]  [BUGGY]  }  else  if(array.length  ==  0)  {  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.length  ==  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.length  ==  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
57	[BUG]  [BUGGY]  if(type  ==  null)  {  type  =  array.getSuperclass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  if(type  ==  null)  {  type  =  array.getSuperclass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	if(type  ==  null)  {  type  =  array.getSuperclass();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
58	[BUG]  [BUGGY]  array  =(T)element.clone();  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  array  =(T)element.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	array  =(T)element.clone();	      array    =(T)type.clone();    	non-compiled	[CE]  not  a  statement	9	None	replace
59	[BUG]  [BUGGY]  type  =(T)array.clone();  [CE]  not  a  statement  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  type  =(T)array.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	type  =(T)array.clone();	      array    =(T)type.clone();    	non-compiled	[CE]  not  a  statement	9	None	replace
60	[BUG]  [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	parent  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
61	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
62	[BUG]  [BUGGY]  allowNull(array)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  allowNull(array)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	allowNull(array)  {  throw  new  IllegalArgumentException( " ");  }	      if(element    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	5	None	replace
63	[BUG]  [BUGGY]  Class  <?>[]  elements  =  element.getElements();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>[]  elements  =  element.getElements();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>[]  elements  =  element.getElements();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
64	[BUG]  [BUGGY]  Class  <?>[]  elements  =  element.getClass();  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>[]  elements  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>[]  elements  =  element.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
65	[BUG]  [BUGGY]  Class  <?>  element  =  array.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Class  <?>  element  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Class  <?>  element  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
66	[BUG]  [BUGGY]  Type  element  =  array.getClass();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Type  element  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Type  element  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
67	[BUG]  [BUGGY]  }  else  if(element.getClass()  ==  array.getClass())  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element.getClass()  ==  array.getClass())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element.getClass()  ==  array.getClass())  {	  }    else    if(element.getClass()    ==    type)    {    	non-compiled	[CE]  not  a  statement	3	None	replace
68	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.clone();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.clone();	      if(type    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
69	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)array.clone();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)array.clone();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	MutableToJava2D  type  =(MutableToJava2D)array.clone();	      if(type    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
70	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type;  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type;  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	MutableToJava2D  type  =(MutableToJava2D)type;	      if(type    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
71	[BUG]  [BUGGY]  MutableToJavaClass  <?>[]  elements  =  type.getElements();  [CE]  not  a  statement  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  MutableToJavaClass  <?>[]  elements  =  type.getElements();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	MutableToJavaClass  <?>[]  elements  =  type.getElements();	      if(type    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	7	None	replace
72	[BUG]  [BUGGY]  }  else  if(element.getClass()!=  null  &&  element.getClass().isArray())  {  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element.getClass()!=  null  &&  element.getClass().isArray())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element.getClass()!=  null  &&  element.getClass().isArray())  {	  }    else    if(element.getClass()!=    null)    {    	non-compiled	[CE]  not  a  statement	10	None	replace
73	[BUG]  [BUGGY]  [Delete]  [CE]  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  [Delete]  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	[Delete]	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  	16	None	replace
74	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array);  [CE]  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aughtExceptionHandler.handleMissingClass(array);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aughtExceptionHandler.handleMissingClass(array);	      if(element!=    null)    {    if(type.isArray())    {    type    =    array.getComponentType();    }    	non-compiled	[CE]  	16	None	replace
75	[BUG]  [BUGGY]  TypeElement  <?>  element  =  array.getClass();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  TypeElement  <?>  element  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	TypeElement  <?>  element  =  array.getClass();	      if(type    ==    null)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
76	[BUG]  [BUGGY]  }  else  if(type!=  null  &&  element.getClass()!=  array.getClass())  {  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(type!=  null  &&  element.getClass()!=  array.getClass())  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(type!=  null  &&  element.getClass()!=  array.getClass())  {	  }    else    if(element!=    null    &&    element.getClass()!=    type)    {    	non-compiled	[CE]  not  a  statement	20	None	replace
77	[BUG]  [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_INTEGER_OBJECT_ARRAY);  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_INTEGER_OBJECT_ARRAY);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aught(IllegalArgumentException.class,  EMPTY_INTEGER_OBJECT_ARRAY);	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
78	[BUG]  [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_BYTE_ARRAY);  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_BYTE_ARRAY);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aught(IllegalArgumentException.class,  EMPTY_BYTE_ARRAY);	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
79	[BUG]  [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_BOOLEAN_ARRAY);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  aught(IllegalArgumentException.class,  EMPTY_BOOLEAN_ARRAY);  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	aught(IllegalArgumentException.class,  EMPTY_BOOLEAN_ARRAY);	      if(element!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	6	None	replace
80	[BUG]  [BUGGY]  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	if(array!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  not  a  statement	4	None	replace
81	[BUG]  [BUGGY]  TypeElement  <?>  type  =  element.getClass();  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  TypeElement  <?>  type  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	TypeElement  <?>  type  =  element.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
82	[BUG]  [BUGGY]  TypeElement  element  =  element.getClass();  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  TypeElement  element  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	TypeElement  element  =  element.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
83	[BUG]  [BUGGY]  Type  element  =  element.getClass();  [CE]  not  a  statement  [FE]                  ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  Type  element  =  element.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	Type  element  =  element.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    element.getClass();    }    	non-compiled	[CE]  not  a  statement	17	None	replace
84	[BUG]  [BUGGY]  }  else  if(element.getClass()  ==  null  ||  array.getClass()!=  null)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(element.getClass()  ==  null  ||  array.getClass()!=  null)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(element.getClass()  ==  null  ||  array.getClass()!=  null)  {	  }    else    if(element.getClass()    ==    null)    {    	non-compiled	[CE]  not  a  statement	11	None	replace
85	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  parent  =  parent.getParent();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	parent  =  parent.getParent();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
86	[BUG]  [BUGGY]  TypeElement  <?>  type  =  array.getClass();  [CE]  not  a  statement  [FE]            ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  TypeElement  <?>  type  =  array.getClass();  [BUGGY]    }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	TypeElement  <?>  type  =  array.getClass();	      if(element!=    null)    {    if(type    ==    EMPTY_OBJECT_ARRAY)    {    type    =    array.getClass();    }    	non-compiled	[CE]  not  a  statement	15	None	replace
87	[BUG]  [BUGGY]  }  else  if(array.length!=  0)  {  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.length!=  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.length!=  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
88	[BUG]  [BUGGY]  }  else  if(array.length  >  0)  {  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();    [BUGGY]  }  else  if(array.length  >  0)  {  [BUGGY]    type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(   "unchecked   ")  //  type  must  be  T  T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3292	3292	1	replace	}  else  if(array.length  >  0)  {	  }    else    if(element!=    null    &&    array.length    >    0)    {    	non-compiled	[CE]  not  a  statement	18	None	replace
