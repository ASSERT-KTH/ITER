bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  T[]  newArray  =(T[])element.cloneTree();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])element.cloneTree();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])element.cloneTree();	  T[]    newArray    =(T[])element;    	non-compiled	[CE]  not  a  statement	56	None	replace
2	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  newArray.length));  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  newArray.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  newArray.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
3	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  DEFAULT_NON_OBJECT_ARRAY));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  DEFAULT_NON_OBJECT_ARRAY));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  DEFAULT_NON_OBJECT_ARRAY));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
4	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  0));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  0));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  0));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
5	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.subarray(array,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.subarray(array,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.subarray(array,  type);	  T[]    newArray    =(T[])subarray(array,    type);    	non-compiled	[CE]  not  a  statement	8	None	replace
6	[BUG]  [BUGGY]  T[]  newArray  =(T[])array,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array,  type);	  T[]    newArray    =(T[])subarray(array,    type);    	non-compiled	[CE]  not  a  statement	8	None	replace
7	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(type,  result);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(type,  result);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArrayGrow1(type,  result);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
8	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  subarray.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  subarray.length);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
9	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  subarray.length  -  1);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  subarray.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  subarray.length  -  1);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
10	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  newArray.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
11	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  subarray.length,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  subarray.length,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  subarray.length,  array.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
12	[BUG]  [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  array.length);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  array.length);	  T[]    newArray    =    (T[])typeGrow1(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	21	None	replace
13	[BUG]  [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  result);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  result);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  result);	  T[]    newArray    =    (T[])typeGrow1(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	21	None	replace
14	[BUG]  [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])typeGrow1(array,  type,  INDEX_NOT_FOUND,  0);	  T[]    newArray    =    (T[])typeGrow1(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	21	None	replace
15	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  type.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  type.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array,  type.length);	  T[]    newArray    =(T[])array.cloneTree(),    array,    subarray.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
16	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  result.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  result.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array,  result.length);	  T[]    newArray    =(T[])array.cloneTree(),    array,    subarray.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
17	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  newArray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  newArray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array,  newArray.length);	  T[]    newArray    =(T[])array.cloneTree(),    array,    subarray.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
18	[BUG]  [BUGGY]  T[]  newArray  =  array.getDeclaredType();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getDeclaredType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getDeclaredType();	  T[]    newArray    =    array.getTree();    	non-compiled	[CE]  not  a  statement	18	None	replace
19	[BUG]  [BUGGY]  T[]  newArray  =  array.getType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getType();	  T[]    newArray    =    array.getTree();    	non-compiled	[CE]  not  a  statement	18	None	replace
20	[BUG]  [BUGGY]  T[]  newArray  =  array.getElements();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getElements();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getElements();	  T[]    newArray    =    array.getTree();    	non-compiled	[CE]  not  a  statement	18	None	replace
21	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  array.length  -  1);	  Type[]    copyArrayGrow2(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
22	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  newArray.length);	  Type[]    copyArrayGrow2(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
23	[BUG]  [BUGGY]  ArrayUtils.checkArgument(type!=  null);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkArgument(type!=  null);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkArgument(type!=  null);	  ArrayUtils.checkArgument(type    ==    null);    	non-compiled	[CE]  not  a  statement	87	None	replace
24	[BUG]  [BUGGY]  ArrayUtils.checkArgument(type  ==  null,  newArray.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkArgument(type  ==  null,  newArray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkArgument(type  ==  null,  newArray.length);	  ArrayUtils.checkArgument(type    ==    null);    	non-compiled	[CE]  not  a  statement	87	None	replace
25	[BUG]  [BUGGY]  final  T[]  newArray  =  type.cloneTree();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  type.cloneTree();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  type.cloneTree();	  final    T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	32	None	replace
26	[BUG]  [BUGGY]  final  T[]  newArray  =  array.getDeclaredType();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.getDeclaredType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.getDeclaredType();	  final    T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	32	None	replace
27	[BUG]  [BUGGY]  final  T[]  newArray  =  array.clone();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.clone();	  final    T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	32	None	replace
28	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	46	None	replace
29	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  subarray,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	46	None	replace
30	[BUG]  [BUGGY]  T[]  newArray  =  (T[])array.copyArrayGrow1(type,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])array.copyArrayGrow1(type,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])array.copyArrayGrow1(type,  array);	  T[]    newArray    =    (T[])type.copyArrayGrow1(array,    array);    	non-compiled	[CE]  not  a  statement	25	None	replace
31	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.copyArrayGrow1(array,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.copyArrayGrow1(array,  subarray);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.copyArrayGrow1(array,  subarray);	  T[]    newArray    =    (T[])type.copyArrayGrow1(array,    array);    	non-compiled	[CE]  not  a  statement	25	None	replace
32	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarrayType);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarrayType);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  subarrayType);	  Type[]    copyArrayGrow2(array,    type,    type);    	non-compiled	[CE]  not  a  statement	84	None	replace
33	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(array,  type,  INDEX_NOT_FOUND);	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
34	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
35	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(array,  type,  subarray);	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(array,  type,  newArray);	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
37	[BUG]  [BUGGY]  T[]  newArray  =  array.get(type,  type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.get(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.get(type,  type);	  T[]    newArray    =    array.get(type);    	non-compiled	[CE]  not  a  statement	89	None	replace
38	[BUG]  [BUGGY]  T[]  newArray  =  array.getValues();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getValues();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getValues();	  T[]    newArray    =    array.get(type);    	non-compiled	[CE]  not  a  statement	89	None	replace
39	[BUG]  [BUGGY]  T[]  newArray  =  type.getArray();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  type.getArray();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  type.getArray();	  T[]    newArray    =    array.get(type);    	non-compiled	[CE]  not  a  statement	89	None	replace
40	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(type,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArrayGrow1(type,  type);	  T[]    newArray    =    (T[])type.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	26	None	replace
41	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	throw  new  IllegalArgumentException( " ");	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	78	None	replace
42	[BUG]  [BUGGY]  @SuppressWarnings( "unchecked ")try  {  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  @SuppressWarnings( "unchecked ")try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	@SuppressWarnings( "unchecked ")try  {	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	78	None	replace
43	[BUG]  [BUGGY]  @SuppressWarnings( "msg.unchecked.Array ")try  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  @SuppressWarnings( "msg.unchecked.Array ")try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	@SuppressWarnings( "msg.unchecked.Array ")try  {	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	78	None	replace
44	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()!=  array.getClass());  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()!=  array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()!=  array.getClass());	  ArrayUtils.checkState(type.getClass()!=    array);    	non-compiled	[CE]  not  a  statement	40	None	replace
45	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array.getClass());  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()  ==  array.getClass());	  ArrayUtils.checkState(type.getClass()!=    array);    	non-compiled	[CE]  not  a  statement	40	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type.length  -  1);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  type.length  -  1);	  System.arraycopy(array,    0,    newArray,    1,    array.length    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  array.length  -  2);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  array.length  -  2);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  array.length  -  2);	  System.arraycopy(array,    0,    newArray,    1,    array.length    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
48	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.cloneTree();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.cloneTree();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.cloneTree();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
49	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)array.clone();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)array.clone();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)array.clone();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
50	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)super.clone();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)super.clone();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)super.clone();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
51	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array  =  ArrayUtils.copyCurrentStructure(array,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array  =  ArrayUtils.copyCurrentStructure(array,  type);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	50	None	replace
52	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  subarray);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	50	None	replace
53	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  newArray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	79	None	replace
54	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	79	None	replace
55	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  subarray.length);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	79	None	replace
56	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinedArray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinedArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  joinedArray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
57	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  joinArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  joinArray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
58	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  subarrayGrow1(array,  type,  subarray);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
59	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  subarrayGrow1(array,  type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  subarrayGrow1(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
60	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName(),  type,  array.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
61	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  type,  result.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  type,  result.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName(),  type,  result.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
62	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.getClass().getName(),  array,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.getClass().getName(),  array,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.getClass().getName(),  array,  subarray.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
63	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getType());  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getType());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array.getType());	  ArrayUtils.checkState(array.getClass()!=    type,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
64	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()!=  array,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()!=  array,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()!=  array,  type);	  ArrayUtils.checkState(array.getClass()!=    type,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
65	[BUG]  [BUGGY]  final  T[]  newArray  =  array.toArray(new  T[type.size()  ]);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.toArray(new  T[type.size()  ]);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.toArray(new  T[type.size()  ]);	  final    T[]    newArray    =    (T[])type;    	non-compiled	[CE]  not  a  statement	17	None	replace
66	[BUG]  [BUGGY]  final  T[]  newArray  =  array.getTree();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.getTree();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.getTree();	  final    T[]    newArray    =    (T[])type;    	non-compiled	[CE]  not  a  statement	17	None	replace
67	[BUG]  [BUGGY]  array  =(T)super.array.clone();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array  =(T)super.array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array  =(T)super.array.clone();	  array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	47	None	replace
68	[BUG]  [BUGGY]  array  =(T)type.clone();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array  =(T)type.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array  =(T)type.clone();	  array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	47	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  type.length);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length  -  1);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  1,  type.length  -  1);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  1,  type.length,  INDEX_NOT_FOUND);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
72	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  array.length);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	45	None	replace
73	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  result);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	45	None	replace
74	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  EMPTY_STRING_ARRAY);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  EMPTY_STRING_ARRAY);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  EMPTY_STRING_ARRAY);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	45	None	replace
75	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  0);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
76	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  INDEX_NOT_FOUND);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
77	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  subarray.length);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
78	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(array,  type,  array.length);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
79	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  joinedArray);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  joinedArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  joinedArray);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
80	[BUG]  [BUGGY]  Type[]  subarrayGrow2(array,  type,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  subarrayGrow2(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  subarrayGrow2(array,  type,  subarray);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
81	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  joinArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  joinArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  joinArray);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
82	[BUG]  [BUGGY]  Type[]  copiedArrayGrow2(array,  type,  joinedArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copiedArrayGrow2(array,  type,  joinedArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copiedArrayGrow2(array,  type,  joinedArray);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
83	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getSimpleName();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getSimpleName();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getSimpleName();	  T[]    newArray    =(T[])array.getClass().getComponentType();    	non-compiled	[CE]  not  a  statement	81	None	replace
84	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getReturnType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getReturnType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getReturnType();	  T[]    newArray    =(T[])array.getClass().getComponentType();    	non-compiled	[CE]  not  a  statement	81	None	replace
85	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName();	  T[]    newArray    =(T[])array.getClass().getComponentType();    	non-compiled	[CE]  not  a  statement	81	None	replace
86	[BUG]  [BUGGY]  while(element!=  null)  {  try  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null)  {  try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null)  {  try  {	  try    {    [Delete]    catch(NoClassCastException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	83	None	replace
87	[BUG]  [BUGGY]  T[]  newArray  =  (T[])typeGrow(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])typeGrow(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])typeGrow(array,  type,  INDEX_NOT_FOUND);	  T[]    newArray    =    (T[])typeGrow(array,    type);    	non-compiled	[CE]  not  a  statement	22	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  type.length  +  1);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  type.length  +  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  0,  type.length  +  1);	  System.arraycopy(array,    0,    newArray,    0,    type.length);    	non-compiled	[CE]  not  a  statement	11	None	replace
89	[BUG]  [BUGGY]  ArrayUtils.insert(type,  array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(type,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(type,  array);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
90	[BUG]  [BUGGY]  ArrayUtils.insert(array,  type,  newArray.length);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(array,  type,  newArray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(array,  type,  newArray.length);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
91	[BUG]  [BUGGY]  ArrayUtils.insert(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(array,  type,  INDEX_NOT_FOUND);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
92	[BUG]  [BUGGY]  ArrayUtils.insert(newArray,  type);  [CE]  not  a  statement  [FE]                            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(newArray,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(newArray,  type);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
93	[BUG]  [BUGGY]  ArrayUtils.copyCurrentElement(array,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentElement(array,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentElement(array,  type);	  ArrayUtils.copyCurrentElement(array);    	non-compiled	[CE]  not  a  statement	76	None	replace
94	[BUG]  [BUGGY]  array  =  ArrayUtils.copyCurrentElement(array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array  =  ArrayUtils.copyCurrentElement(array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array  =  ArrayUtils.copyCurrentElement(array);	  ArrayUtils.copyCurrentElement(array);    	non-compiled	[CE]  not  a  statement	76	None	replace
95	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length  -  1);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  subarray.length  -  1);	  Type[]    copyArrayGrow2(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	36	None	replace
96	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  subarray.length,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  subarray.length,  array.length);	  Type[]    copyArrayGrow2(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	36	None	replace
97	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  type,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  type,  subarray);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
98	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  type,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  type,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  type,  type);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
99	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  type,  newArray);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
100	[BUG]  [BUGGY]  MutableTreeUtils.checkState(array!=  null);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableTreeUtils.checkState(array!=  null);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableTreeUtils.checkState(array!=  null);	  MutableTreeUtils.checkState(type!=    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
101	[BUG]  [BUGGY]  MutableTreeUtils.checkState(type  ==  null,  type);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableTreeUtils.checkState(type  ==  null,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableTreeUtils.checkState(type  ==  null,  type);	  MutableTreeUtils.checkState(type!=    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
102	[BUG]  [BUGGY]  MutableTreeUtils.checkState(array  ==  null);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableTreeUtils.checkState(array  ==  null);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableTreeUtils.checkState(array  ==  null);	  MutableTreeUtils.checkState(type    ==    null);    	non-compiled	[CE]  not  a  statement	59	None	replace
103	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getType();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getType();	  T[]    newArray    =(T[])array.getTypeGrow1();    	non-compiled	[CE]  not  a  statement	85	None	replace
104	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getPropertyType();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getPropertyType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getPropertyType();	  T[]    newArray    =(T[])array.getTypeGrow1();    	non-compiled	[CE]  not  a  statement	85	None	replace
105	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getParent();  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getParent();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getParent();	  T[]    newArray    =(T[])array.getTypeGrow1();    	non-compiled	[CE]  not  a  statement	85	None	replace
106	[BUG]  [BUGGY]  ArrayUtils.checkState(type!=  null);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type!=  null);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type!=  null);	  ArrayUtils.checkState(type    ==    null);    	non-compiled	[CE]  not  a  statement	88	None	replace
107	[BUG]  [BUGGY]  ArrayUtils.checkState(type  ==  null,  newArray.length);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type  ==  null,  newArray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type  ==  null,  newArray.length);	  ArrayUtils.checkState(type    ==    null);    	non-compiled	[CE]  not  a  statement	88	None	replace
108	[BUG]  [BUGGY]  ArrayUtils.checkState(newArray.length  ==  type);  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(newArray.length  ==  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(newArray.length  ==  type);	  ArrayUtils.checkState(type    ==    null);    	non-compiled	[CE]  not  a  statement	88	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  type.length  -  2);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  type.length  -  2);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  0,  type.length  -  2);	  System.arraycopy(array,    0,    newArray,    0,    type.length    -    1);    	non-compiled	[CE]  not  a  statement	4	None	replace
110	[BUG]  [BUGGY]  try  {  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	try  {	  try    {    [Delete]    catch(NoSuchElementException    nsee)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
111	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow2(array,  type,  newArray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArray  =  copyArrayGrow2(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArray  =  copyArrayGrow2(array,  type,  newArray);	  Type[]    copyArrayGrow2(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	38	None	replace
112	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  newArray,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  newArray,  subarray.length);	  Type[]    copyArrayGrow2(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	38	None	replace
113	[BUG]  [BUGGY]  Type[]  newArrayGrow2(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArrayGrow2(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArrayGrow2(array,  type,  newArray);	  Type[]    copyArrayGrow2(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	38	None	replace
114	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  array.length  -  1);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  type,  array.length  -  1);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	68	None	replace
115	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  type,  0);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	68	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  newArray.length  -  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  newArray.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  newArray.length  -  1);	  System.arraycopy(array,    0,    newArray,    0,    newArray.length    -    1);    	non-compiled	[CE]  not  a  statement	5	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  array.length  +  1);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  array.length  +  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  array.length  +  1);	  System.arraycopy(array,    0,    newArray,    1,    array.length);    	non-compiled	[CE]  not  a  statement	91	None	replace
118	[BUG]  [BUGGY]  JSError.make(element,  type,  INDEX_NOT_FOUND));  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(element,  type,  INDEX_NOT_FOUND));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(element,  type,  INDEX_NOT_FOUND));	  JSError.make(element,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	64	None	replace
119	[BUG]  [BUGGY]  JSError.make(type,  INDEX_NOT_FOUND));  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(type,  INDEX_NOT_FOUND));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(type,  INDEX_NOT_FOUND));	  JSError.make(element,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	64	None	replace
120	[BUG]  [BUGGY]  JSError.make(element,  type));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(element,  type));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(element,  type));	  JSError.make(element,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	64	None	replace
121	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()  ==  element);	  ArrayUtils.checkState(element.getClass()    ==    type);    	non-compiled	[CE]  not  a  statement	71	None	replace
122	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  result,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    result);    	non-compiled	[CE]  not  a  statement	44	None	replace
123	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	15	None	replace
124	[BUG]  [BUGGY]  Type[]  newArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArrayGrow1(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	15	None	replace
125	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray,  subarray.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  newArray,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  newArray,  subarray.length);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	15	None	replace
126	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow(array,  type,  subarray.length);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	54	None	replace
127	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow(array,  type,  subarray);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	54	None	replace
128	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow(array,  type,  newArray);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	54	None	replace
129	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.arrayGrow1(type,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.arrayGrow1(type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.arrayGrow1(type,  array.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
130	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.add(type,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.add(type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.add(type,  array.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
131	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getSubarray();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getSubarray();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getSubarray();	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
132	[BUG]  [BUGGY]  JSError.make(type,  INDEX_NOT_FOUND,  element));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(type,  INDEX_NOT_FOUND,  element));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(type,  INDEX_NOT_FOUND,  element));	  JSError.make(element,    INDEX_NOT_FOUND,    type));    	non-compiled	[CE]  not  a  statement	67	None	replace
133	[BUG]  [BUGGY]  JSError.make(element,  INDEX_NOT_FOUND,  type,  newArray.length));  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(element,  INDEX_NOT_FOUND,  type,  newArray.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(element,  INDEX_NOT_FOUND,  type,  newArray.length));	  JSError.make(element,    INDEX_NOT_FOUND,    type));    	non-compiled	[CE]  not  a  statement	67	None	replace
134	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()  ==  array,  type);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
135	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  EMPTY_BYTE_ARRAY);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  EMPTY_BYTE_ARRAY);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  EMPTY_BYTE_ARRAY);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
136	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  subarray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  subarray);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
137	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ",  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ",  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.throwAsUncheckedException( " ",  type);	  aughtExceptionHandler.throwAsUncheckedException(   "   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
138	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( ", ");  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( ", ");  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.throwAsUncheckedException( ", ");	  aughtExceptionHandler.throwAsUncheckedException(   "   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
139	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
140	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  array);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(type,  array);	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
141	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(array);	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
142	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  1);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.length  ==  1);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.length  ==  1);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	86	None	replace
143	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  ==  2);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.length  ==  2);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.length  ==  2);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	86	None	replace
144	[BUG]  [BUGGY]  ArrayUtils.checkState(newArray.length  ==  0);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(newArray.length  ==  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(newArray.length  ==  0);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	86	None	replace
145	[BUG]  [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(ClassCastException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	82	None	replace
146	[BUG]  [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(ClassCastException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	82	None	replace
147	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()!=  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()!=  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()!=  element);	  ArrayUtils.checkState(element.getClass()!=    type);    	non-compiled	[CE]  not  a  statement	63	None	replace
148	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  INDEX_NOT_FOUND);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  type,  INDEX_NOT_FOUND);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
149	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  type,  array.length);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
150	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  subarray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  type,  subarray);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  type,  subarray);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
151	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.cloneTree(),  array);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.cloneTree(),  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.cloneTree(),  array);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
152	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  result,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  result,  type);	  ArrayUtils.copyCurrentStructure(array,    result);    	non-compiled	[CE]  not  a  statement	10	None	replace
153	[BUG]  [BUGGY]  safeArray(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  safeArray(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	safeArray(array,  type)  {  throw  new  IllegalArgumentException( " ");  }	  safeGet(array,    type)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
154	[BUG]  [BUGGY]  safeGet(array,  type)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  safeGet(array,  type)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	safeGet(array,  type)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  safeGet(array,    type)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
155	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  result.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  result.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  type,  result.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
156	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  subarray.length  -  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  type,  subarray.length  -  1);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  type,  subarray.length  -  1);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
157	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.copyArray(array,  subarray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.copyArray(array,  subarray);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.copyArray(array,  subarray);	  T[]    newArray    =(T[])type.copyArray(array,    type);    	non-compiled	[CE]  not  a  statement	7	None	replace
158	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArray(type,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArray(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArray(type,  type);	  T[]    newArray    =(T[])type.copyArray(array,    type);    	non-compiled	[CE]  not  a  statement	7	None	replace
159	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.copyArray(array,  element);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.copyArray(array,  element);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.copyArray(array,  element);	  T[]    newArray    =(T[])type.copyArray(array,    type);    	non-compiled	[CE]  not  a  statement	7	None	replace
160	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  subarray);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  subarray);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
161	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  array.length);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
162	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  type);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  array.length  +  2);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  0,  array.length  +  2);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  0,  array.length  +  2);	  System.arraycopy(array,    0,    newArray,    0,    array.length    +    1);    	non-compiled	[CE]  not  a  statement	12	None	replace
164	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  result);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  result);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  result);	  MutableArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	73	None	replace
165	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  element);	  MutableArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	73	None	replace
166	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  subarray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  subarray);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
167	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  type);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
168	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  newArray);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
169	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  result);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  result);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  result);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
170	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  array.length  -  1));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  array.length  -  1));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  array.length  -  1));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
171	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  EMPTY_INTEGER_OBJECT_ARRAY,  array.length));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  EMPTY_INTEGER_OBJECT_ARRAY,  array.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  EMPTY_INTEGER_OBJECT_ARRAY,  array.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
172	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  EMPTY_INT_ARRAY,  array.length));  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  EMPTY_INT_ARRAY,  array.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  EMPTY_INT_ARRAY,  array.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
173	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(result,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(result,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArrayGrow1(result,  type);	  T[]    newArray    =    array.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	23	None	replace
174	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(type,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArrayGrow1(type,  array);	  T[]    newArray    =    array.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	23	None	replace
175	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArray(newArray,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArray(newArray,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArray(newArray,  type);	  T[]    newArray    =    array.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	23	None	replace
176	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(array,  type,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArrayGrow1(array,  type,  subarray.length);	  T[]    newArray    =    array.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	23	None	replace
177	[BUG]  [BUGGY]  T[]  newArray  =  array.getTypeGrow1(type,  array);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getTypeGrow1(type,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getTypeGrow1(type,  array);	  T[]    newArray    =    (T[])array.getTypeGrow1(type,    array);    	non-compiled	[CE]  not  a  statement	62	None	replace
178	[BUG]  [BUGGY]  T[]  newArray  =  (T[])array.getTypeGrow1(type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])array.getTypeGrow1(type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])array.getTypeGrow1(type,  array.length);	  T[]    newArray    =    (T[])array.getTypeGrow1(type,    array);    	non-compiled	[CE]  not  a  statement	62	None	replace
179	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getTypeGrow1(type,  type);	  T[]    newArray    =    (T[])array.getTypeGrow1(type,    array);    	non-compiled	[CE]  not  a  statement	62	None	replace
180	[BUG]  [BUGGY]  T[]  newArray  =  type.cloneTree();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  type.cloneTree();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  type.cloneTree();	  T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	31	None	replace
181	[BUG]  [BUGGY]  T[]  newArray  =  array.clone();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.clone();	  T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	31	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  2,  type.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  2,  type.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  2,  type.length);	  System.arraycopy(array,    0,    array,    2,    type.length);    	non-compiled	[CE]  not  a  statement	90	None	replace
183	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  2,  type.length,  INDEX_NOT_FOUND);	  System.arraycopy(array,    0,    array,    2,    type.length);    	non-compiled	[CE]  not  a  statement	90	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  subarray.length);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  2,  type.length,  subarray.length);	  System.arraycopy(array,    0,    array,    2,    type.length);    	non-compiled	[CE]  not  a  statement	90	None	replace
185	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  array.length  -  1);	  Type[]    copyArrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	16	None	replace
186	[BUG]  [BUGGY]  final  T[]  newArray  =(T[])array.clone();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =(T[])array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =(T[])array.clone();	  T[]    newArray    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	48	None	replace
187	[BUG]  [BUGGY]  array[]  newArray  =(T[])array.clone();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array[]  newArray  =(T[])array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array[]  newArray  =(T[])array.clone();	  T[]    newArray    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	48	None	replace
188	[BUG]  [BUGGY]  Object[]  newArray  =(Object[])array.clone();  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Object[]  newArray  =(Object[])array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Object[]  newArray  =(Object[])array.clone();	  T[]    newArray    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	48	None	replace
189	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getValue();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getValue();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getValue();	  T[]    newArray    =(T[])array;    	non-compiled	[CE]  not  a  statement	55	None	replace
190	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  -  2);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  -  2);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  array.length  -  2);	  Type[]    copyArrayGrow2(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
191	[BUG]  [BUGGY]  T[]  newArray  =  array.cloneTree(type);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.cloneTree(type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.cloneTree(type);	  T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	31	None	replace
192	[BUG]  [BUGGY]  T[]  newArray  =  array.toArray();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.toArray();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.toArray();	  T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	31	None	replace
193	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  subarray);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  subarray);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getTypeGrow1(type,  subarray);	  T[]    newArray    =    (T[])array.getTypeGrow1(type,    array);    	non-compiled	[CE]  not  a  statement	62	None	replace
194	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  0);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  0);	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	45	None	replace
195	[BUG]  [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow1(array,  type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow1(array,  type,  array);	  Type[]    copyArrayGrow1(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	14	None	replace
196	[BUG]  [BUGGY]  T[]  newArray  =  (T[])array.copyArrayGrow1(type,  type);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])array.copyArrayGrow1(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])array.copyArrayGrow1(type,  type);	  T[]    newArray    =    (T[])type.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	26	None	replace
197	[BUG]  [BUGGY]  }  else  if(type  ==  null)  {  try  {  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  }  else  if(type  ==  null)  {  try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	}  else  if(type  ==  null)  {  try  {	  try    {    [Delete]    catch(ClassCastException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	82	None	replace
198	[BUG]  [BUGGY]  while(element!=  null)  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null)  {	  try    {    [Delete]    catch(ClassCastException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	82	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  newArray.length  -  1);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  newArray.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  newArray.length  -  1);	  System.arraycopy(array,    0,    array,    0,    type.length    -    1);    	non-compiled	[CE]  not  a  statement	43	None	replace
200	[BUG]  [BUGGY]  while(type!=  null  &&  array.length  >  0)  {  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(type!=  null  &&  array.length  >  0)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(type!=  null  &&  array.length  >  0)  {	  try    {    [Delete]    catch(NoSuchElementException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	35	None	replace
201	[BUG]  [BUGGY]  while(type!=  null  &&  type.length  >  0)  {  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(type!=  null  &&  type.length  >  0)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(type!=  null  &&  type.length  >  0)  {	  try    {    [Delete]    catch(NoSuchElementException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	35	None	replace
202	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  parent);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  parent);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  parent);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
203	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
204	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  input);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  input);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  input);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
205	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(newArray,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(newArray,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArrayGrow1(newArray,  type);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
206	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArrayGrow1(result,  array);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
207	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getComponentType(0);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getComponentType(0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getComponentType(0);	  T[]    newArray    =(T[])array.getClass().getComponentType();    	non-compiled	[CE]  not  a  statement	81	None	replace
208	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  newArray.length,  array.length));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  newArray.length,  array.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  newArray.length,  array.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
209	[BUG]  [BUGGY]  JSError.make(sourceURI,  array,  INDEX_NOT_FOUND,  type.length));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  array,  INDEX_NOT_FOUND,  type.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  array,  INDEX_NOT_FOUND,  type.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
210	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY,  array.length));  [CE]  not  a  statement  [FE]                          ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY,  array.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY,  array.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
211	[BUG]  [BUGGY]  JSError.make(element,  result,  type));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(element,  result,  type));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(element,  result,  type));	  JSError.make(element,    INDEX_NOT_FOUND,    type));    	non-compiled	[CE]  not  a  statement	67	None	replace
212	[BUG]  [BUGGY]  final  T[]  newArray  =  array.toArray();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.toArray();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.toArray();	  final    T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	32	None	replace
213	[BUG]  [BUGGY]  MutableTreeUtils.checkState(type!=  null,  type);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableTreeUtils.checkState(type!=  null,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableTreeUtils.checkState(type!=  null,  type);	  MutableTreeUtils.checkState(type!=    null);    	non-compiled	[CE]  not  a  statement	60	None	replace
214	[BUG]  [BUGGY]  T[]  array  =(T[])array.clone();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  array  =(T[])array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  array  =(T[])array.clone();	  T[]    newArray    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	48	None	replace
215	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.clone();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.clone();	  T[]    newArray    =(T[])array.clone();    	non-compiled	[CE]  not  a  statement	48	None	replace
216	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  JSON_ARRAY.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  JSON_ARRAY.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array,  JSON_ARRAY.length);	  T[]    newArray    =(T[])array.cloneTree(),    array,    subarray.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
217	[BUG]  [BUGGY]  if(type  ==  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type  ==  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type  ==  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
218	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array.length);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
219	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getComponentType());  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getComponentType());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array.getComponentType());	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
220	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.type);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array.type);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
221	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  element);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  element);	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
222	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  array);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
223	[BUG]  [BUGGY]  ArrayUtils.checkState(type!=  array.getClass());  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type!=  array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type!=  array.getClass());	  ArrayUtils.checkState(type.getClass()!=    array);    	non-compiled	[CE]  not  a  statement	40	None	replace
224	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
225	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  element);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  element);	  T[]    newArray    =(T[])array.cloneTree(),    type);    	non-compiled	[CE]  not  a  statement	70	None	replace
226	[BUG]  [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array.getComponentType());  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type.getClass()  ==  array.getComponentType());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type.getClass()  ==  array.getComponentType());	  ArrayUtils.checkState(type.getClass()    ==    array);    	non-compiled	[CE]  not  a  statement	19	None	replace
227	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  INDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    inDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	61	None	replace
228	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY));  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  NON_OBJECT_ARRAY));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
229	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.getParent();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.getParent();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.getParent();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
230	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.withUTC();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.withUTC();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.withUTC();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
231	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.getObject();  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.getObject();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.getObject();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  1,  type,  array.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  1,  type,  array.length  -  1);	  System.arraycopy(array,    0,    newArray,    1,    array.length    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(array,  0,  newArray,  2,  array.length  -  1);  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  newArray,  2,  array.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  newArray,  2,  array.length  -  1);	  System.arraycopy(array,    0,    newArray,    1,    array.length    -    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
234	[BUG]  [BUGGY]  final  T[]  newArray  =(T[])array;  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =(T[])array;  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =(T[])array;	  final    T[]    newArray    =    (T[])type;    	non-compiled	[CE]  not  a  statement	17	None	replace
235	[BUG]  [BUGGY]  T[]  newArray  =  array.get(type  -  1);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.get(type  -  1);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.get(type  -  1);	  T[]    newArray    =    array.get(type);    	non-compiled	[CE]  not  a  statement	89	None	replace
236	[BUG]  [BUGGY]  T[]  newArray  =  array.get(type,  element);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.get(type,  element);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.get(type,  element);	  T[]    newArray    =    array.get(type);    	non-compiled	[CE]  not  a  statement	89	None	replace
237	[BUG]  [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  0);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])typeGrow1(array,  type,  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])typeGrow1(array,  type,  0);	  T[]    newArray    =    (T[])typeGrow1(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	21	None	replace
238	[BUG]  [BUGGY]  T[]  newArray  =  array.getParent();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getParent();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getParent();	  T[]    newArray    =    array.getTree();    	non-compiled	[CE]  not  a  statement	18	None	replace
239	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array.length  -  1);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	79	None	replace
240	[BUG]  [BUGGY]  ArrayUtils.copyCurrentElement(array,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentElement(array,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentElement(array,  element);	  ArrayUtils.copyCurrentElement(array);    	non-compiled	[CE]  not  a  statement	76	None	replace
241	[BUG]  [BUGGY]  ArrayUtils.checkState(type  ==  0);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(type  ==  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(type  ==  0);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	86	None	replace
242	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  result,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  result,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  result,  subarray.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
243	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  type.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  type.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  type.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
244	[BUG]  [BUGGY]  T[]  newArray  =(T[])array,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array,  type,  array.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	1	None	replace
245	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.add(type,  array,  type.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.add(type,  array,  type.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.add(type,  array,  type.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	1	None	replace
246	[BUG]  [BUGGY]  T[]  newArray  =  (T[])type(array,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])type(array,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])type(array,  type);	  T[]    newArray    =    (T[])typeGrow(array,    type);    	non-compiled	[CE]  not  a  statement	22	None	replace
247	[BUG]  [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(newArray,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.copyArrayGrow1(newArray,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.copyArrayGrow1(newArray,  type);	  T[]    newArray    =    array.copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	23	None	replace
248	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  element);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  aughtExceptionHandler.handleMissingClass(type,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	aughtExceptionHandler.handleMissingClass(type,  element);	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  subarray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  1,  type.length,  subarray.length);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  2,  type,  subarray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  2,  type,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  2,  type,  subarray.length);	  System.arraycopy(array,    0,    array,    2,    type.length);    	non-compiled	[CE]  not  a  statement	90	None	replace
251	[BUG]  [BUGGY]  T[]  newArray  =(T[])arrayGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])arrayGrow1(array,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])arrayGrow1(array,  type,  array.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
252	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.add(type,  array,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.add(type,  array,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.add(type,  array,  subarray.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
253	[BUG]  [BUGGY]  T[]  newArray  =(T[])array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array,  type,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array,  type,  subarray.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
254	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getSubarray(type,  array,  subarray.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getSubarray(type,  array,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getSubarray(type,  array,  subarray.length);	  T[]    newArray    =(T[])subarrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	2	None	replace
255	[BUG]  [BUGGY]  safeAdd(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  safeAdd(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	safeAdd(array,  type)  {  throw  new  IllegalArgumentException( " ");  }	  safeGet(array,    type)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
256	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array);	  ArrayUtils.checkState(array.getClass()!=    type,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
257	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()!=  type,  array.length);	  ArrayUtils.checkState(array.getClass()!=    type,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
258	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  array,  subarray.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  array,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName(),  array,  subarray.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
259	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  subarray,  type.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  subarray,  type.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName(),  subarray,  type.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
260	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getObject();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getObject();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getObject();	  T[]    newArray    =(T[])array.getTypeGrow1();    	non-compiled	[CE]  not  a  statement	85	None	replace
261	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  type,  result);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  type,  result);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  type,  result);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
262	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  subarray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  subarray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  subarray);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
263	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyObjectGrow1(array,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyObjectGrow1(array,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyObjectGrow1(array,  type);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
264	[BUG]  [BUGGY]  array  =(T)element.clone();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  array  =(T)element.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	array  =(T)element.clone();	  array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	47	None	replace
265	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(result,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(result,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(result,  type,  array.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	68	None	replace
266	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(array,  subarray,  array.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	68	None	replace
267	[BUG]  [BUGGY]  ArrayUtils.insert(array,  type,  result);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(array,  type,  result);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(array,  type,  result);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
268	[BUG]  [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  subarrayGrow1(array,  type,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  subarrayGrow1(array,  type,  subarray.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(array,  0,  result,  1,  type.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  result,  1,  type.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  result,  1,  type.length);	  System.arraycopy(array,    0,    result,    0,    type.length);    	non-compiled	[CE]  not  a  statement	52	None	replace
270	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray,  type);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  subarray,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  subarray,  type);	  ArrayUtils.copyCurrentStructure(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	46	None	replace
271	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.get(type,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.get(type,  array);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.get(type,  array);	  T[]    newArray    =(T[])subarray(array,    type);    	non-compiled	[CE]  not  a  statement	8	None	replace
272	[BUG]  [BUGGY]  JSError.make(element,  INDEX_NOT_FOUND,  newArray.length));  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(element,  INDEX_NOT_FOUND,  newArray.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(element,  INDEX_NOT_FOUND,  newArray.length));	  JSError.make(element,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	64	None	replace
273	[BUG]  [BUGGY]  MutableTreeUtils.checkState(type  ==  null,  array.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableTreeUtils.checkState(type  ==  null,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableTreeUtils.checkState(type  ==  null,  array.length);	  MutableTreeUtils.checkState(type    ==    null);    	non-compiled	[CE]  not  a  statement	59	None	replace
274	[BUG]  [BUGGY]  ArrayUtils.checkArgument(newArray.length  ==  0);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkArgument(newArray.length  ==  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkArgument(newArray.length  ==  0);	  ArrayUtils.checkArgument(type    ==    null);    	non-compiled	[CE]  not  a  statement	87	None	replace
275	[BUG]  [BUGGY]  ArrayUtils.checkState(array.length  >  0);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.length  >  0);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.length  >  0);	  ArrayUtils.checkState(array.length    ==    0);    	non-compiled	[CE]  not  a  statement	86	None	replace
276	[BUG]  [BUGGY]  T[]  newArray  =  (T[])array.getTypeGrow(type,  type);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  (T[])array.getTypeGrow(type,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  (T[])array.getTypeGrow(type,  type);	  T[]    newArray    =    (T[])typeGrow(array,    type);    	non-compiled	[CE]  not  a  statement	22	None	replace
277	[BUG]  [BUGGY]  T[]  newArray  =  array.getChildren();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =  array.getChildren();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =  array.getChildren();	  T[]    newArray    =    array.getTree();    	non-compiled	[CE]  not  a  statement	18	None	replace
278	[BUG]  [BUGGY]  if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(array,  type);  }	  aughtExceptionHandler.handleMissingClass(array,    type);    	non-compiled	[CE]  not  a  statement	29	None	replace
279	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  array.length  +  1);	  ArrayUtils.copyCurrentStructure(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	79	None	replace
280	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArray(array,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArray(array,  type);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArray(array,  type);	  T[]    newArray    =(T[])array.cloneTree().copyArrayGrow1(array,    type);    	non-compiled	[CE]  not  a  statement	24	None	replace
281	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  result);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  result);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  result);	  Type[]    copyArrayGrow2(array,    type,    subarray);    	non-compiled	[CE]  not  a  statement	37	None	replace
282	[BUG]  [BUGGY]  ArrayUtils.checkArgument(array.getClass()  ==  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkArgument(array.getClass()  ==  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkArgument(array.getClass()  ==  type);	  ArrayUtils.checkState(type.getClass()    ==    array);    	non-compiled	[CE]  not  a  statement	19	None	replace
283	[BUG]  [BUGGY]  ArrayUtils.checkAndFix(array.getClass());  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkAndFix(array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkAndFix(array.getClass());	  ArrayUtils.checkState(type.getClass()    ==    array);    	non-compiled	[CE]  not  a  statement	19	None	replace
284	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  +  1);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  array.length  +  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  array.length  +  1);	  Type[]    copyArrayGrow2(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
285	[BUG]  [BUGGY]  MutableArrayUtils.copyPath(array,  type,  array.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyPath(array,  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyPath(array,  type,  array.length);	  MutableArrayUtils.copyPath(array,    type);    	non-compiled	[CE]  not  a  statement	74	None	replace
286	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  result);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getTypeGrow1(type,  result);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getTypeGrow1(type,  result);	  T[]    newArray    =    (T[])array.getTypeGrow1(type,    array);    	non-compiled	[CE]  not  a  statement	62	None	replace
287	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(result,  type,  subarray.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyGrow1(result,  type,  subarray.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyGrow1(result,  type,  subarray.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	3	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length  +  1);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length  +  1);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  1,  type.length  +  1);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
289	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  type.length);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  1,  type.length,  type.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  1,  type.length,  type.length);	  System.arraycopy(array,    0,    array,    1,    type.length);    	non-compiled	[CE]  not  a  statement	42	None	replace
290	[BUG]  [BUGGY]  while(element!=  null  &&  element  instanceof  Class  <?>)  {  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null  &&  element  instanceof  Class  <?>)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null  &&  element  instanceof  Class  <?>)  {	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	78	None	replace
291	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.copyArrayGrow1(result,  type,  array.length);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
292	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(type,  result);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(type,  result);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree().copyArrayGrow1(type,  result);	  T[]    newArray    =(T[])array.copyArrayGrow1(result,    type);    	non-compiled	[CE]  not  a  statement	53	None	replace
293	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  array.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
294	[BUG]  [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArray  =  copyArrayGrow1(array,  type,  subarray.length);	  Type[]    copyArrayGrow1(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	13	None	replace
295	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  newArray.length));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  newArray.length));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  newArray.length));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND,    array.length));    	non-compiled	[CE]  not  a  statement	66	None	replace
296	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  inDEX_NOT_FOUND,  inDEX_NOT_FOUND);	  ArrayUtils.copyCurrentStructure(array,    type,    inDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	61	None	replace
297	[BUG]  [BUGGY]  while((  type  ==  null)&&(array.length  >  0))  {  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while((  type  ==  null)&&(array.length  >  0))  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while((  type  ==  null)&&(array.length  >  0))  {	  try    {    [Delete]    catch(NoSuchElementException    nsee)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
298	[BUG]  [BUGGY]  while((  type  ==  null)&&(array.length  >  0))  {  try  {  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while((  type  ==  null)&&(array.length  >  0))  {  try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while((  type  ==  null)&&(array.length  >  0))  {  try  {	  try    {    [Delete]    catch(NoSuchElementException    nsee)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
299	[BUG]  [BUGGY]  JSError.make(sourceURI,  element,  INDEX_NOT_FOUND));  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  element,  INDEX_NOT_FOUND));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  element,  INDEX_NOT_FOUND));	  JSError.make(element,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	64	None	replace
300	[BUG]  [BUGGY]  Type[]  newArrayGrow1  =(T[])copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArrayGrow1  =(T[])copyArrayGrow1(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArrayGrow1  =(T[])copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	15	None	replace
301	[BUG]  [BUGGY]  Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArrayGrow1  =  copyArrayGrow1(array,  type,  newArray);	  Type[]    copyArrayGrow1(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	15	None	replace
302	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getComponentType();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getComponentType();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getComponentType();	  T[]    newArray    =(T[])subarray(array,    type);    	non-compiled	[CE]  not  a  statement	8	None	replace
303	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  parent);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  parent);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  parent);	  ArrayUtils.copyCurrentStructure(array,    result);    	non-compiled	[CE]  not  a  statement	10	None	replace
304	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow(array,  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow(array,  type,  array.length);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	54	None	replace
305	[BUG]  [BUGGY]  Type[]  copyArrayGrow(array,  type,  element);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow(array,  type,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow(array,  type,  element);	  Type[]    copyArrayGrow(array,    type);    	non-compiled	[CE]  not  a  statement	54	None	replace
306	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  array,  type.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.getClass().getName(),  array,  type.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.getClass().getName(),  array,  type.length);	  T[]    newArray    =(T[])array.getClass().getName(),    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	80	None	replace
307	[BUG]  [BUGGY]  while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	33	None	replace
308	[BUG]  [BUGGY]  while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null  &&  element  instanceof  NoClassDefFoundError)  {	  try    {    [Delete]    catch(NoClassDefFoundError    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	33	None	replace
309	[BUG]  [BUGGY]  System.arraycopy(array,  0,  copyArrayGrow1(array,  0,  type.length));  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  copyArrayGrow1(array,  0,  type.length));  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  copyArrayGrow1(array,  0,  type.length));	  System.arraycopy(array,    0,    result,    0,    type.length);    	non-compiled	[CE]  not  a  statement	52	None	replace
310	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  element);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  element);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  element);	  Type[]    copyArrayGrow2(array,    type,    type);    	non-compiled	[CE]  not  a  statement	84	None	replace
311	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  newArray,  INDEX_NOT_FOUND));  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  newArray,  INDEX_NOT_FOUND));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  newArray,  INDEX_NOT_FOUND));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
312	[BUG]  [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  new  String[]  {  }  ));  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  new  String[]  {  }  ));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  type,  INDEX_NOT_FOUND,  new  String[]  {  }  ));	  JSError.make(sourceURI,    type,    INDEX_NOT_FOUND));    	non-compiled	[CE]  not  a  statement	65	None	replace
313	[BUG]  [BUGGY]  ArrayUtils.insert(array,  type,  newArray);  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.insert(array,  type,  newArray);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.insert(array,  type,  newArray);	  ArrayUtils.insert(array,    type);    	non-compiled	[CE]  not  a  statement	49	None	replace
314	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  element,  type);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  element,  type);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	50	None	replace
315	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  array);	  ArrayUtils.copyCurrentStructure(array,    element);    	non-compiled	[CE]  not  a  statement	50	None	replace
316	[BUG]  [BUGGY]  while((  type  ==  null)&&(array.getClass()!=  type))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while((  type  ==  null)&&(array.getClass()!=  type))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while((  type  ==  null)&&(array.getClass()!=  type))  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    nsee)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
317	[BUG]  [BUGGY]  while((  type  ==  null)&&!type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while((  type  ==  null)&&!type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while((  type  ==  null)&&!type.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  try    {    [Delete]    catch(NoClassCastException    nsee)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
318	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.restrictByNotNullOrUndefined();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.restrictByNotNullOrUndefined();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.restrictByNotNullOrUndefined();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
319	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.toObject();  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type.toObject();  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type.toObject();	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
320	[BUG]  [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type;  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableToJava2D  type  =(MutableToJava2D)type;  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableToJava2D  type  =(MutableToJava2D)type;	  MutableToJava2D    type    =(MutableToJava2D)type.clone();    	non-compiled	[CE]  not  a  statement	58	None	replace
321	[BUG]  [BUGGY]  JSError.make(sourceURI,  element,  INDEX_NOT_FOUND,  type));  [CE]  not  a  statement  [FE]                        ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  JSError.make(sourceURI,  element,  INDEX_NOT_FOUND,  type));  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	JSError.make(sourceURI,  element,  INDEX_NOT_FOUND,  type));	  JSError.make(element,    INDEX_NOT_FOUND,    type));    	non-compiled	[CE]  not  a  statement	67	None	replace
322	[BUG]  [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  type.length);  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  System.arraycopy(array,  0,  array,  2,  type.length,  type.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	System.arraycopy(array,  0,  array,  2,  type.length,  type.length);	  System.arraycopy(array,    0,    array,    2,    type.length);    	non-compiled	[CE]  not  a  statement	90	None	replace
323	[BUG]  [BUGGY]  type  =(T)array.clone();  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  type  =(T)array.clone();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	type  =(T)array.clone();	  array    =(T)array.clone();    	non-compiled	[CE]  not  a  statement	47	None	replace
324	[BUG]  [BUGGY]  while(type!=  null  &&  array.size()  >  0)  {  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(type!=  null  &&  array.size()  >  0)  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(type!=  null  &&  array.size()  >  0)  {	  try    {    [Delete]    catch(NoClassDefFoundError    t)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	34	None	replace
325	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND);	  MutableArrayUtils.copyCurrentStructure(array,    type);    	non-compiled	[CE]  not  a  statement	72	None	replace
326	[BUG]  [BUGGY]  final  T[]  newArray  =  array.asTree();  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.asTree();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.asTree();	  final    T[]    newArray    =    array.cloneTree();    	non-compiled	[CE]  not  a  statement	32	None	replace
327	[BUG]  [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  copyArrayGrow1(array,  type));  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  copyArrayGrow1(array,  type));  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.copyCurrentStructure(array,  type,  INDEX_NOT_FOUND,  copyArrayGrow1(array,  type));	  ArrayUtils.copyCurrentStructure(array,    type,    INDEX_NOT_FOUND);    	non-compiled	[CE]  not  a  statement	45	None	replace
328	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getClass());  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()  ==  type,  array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()  ==  type,  array.getClass());	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
329	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.getClass());  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.getClass());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()!=  type,  array.getClass());	  ArrayUtils.checkState(array.getClass()    ==    type,    type);    	non-compiled	[CE]  not  a  statement	20	None	replace
330	[BUG]  [BUGGY]  Type[]  copyArrayGrow2(array,  type,  result.length);  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  copyArrayGrow2(array,  type,  result.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  copyArrayGrow2(array,  type,  result.length);	  Type[]    copyArrayGrow2(array,    type,    subarray.length);    	non-compiled	[CE]  not  a  statement	36	None	replace
331	[BUG]  [BUGGY]  safely(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  safely(array,  type)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	safely(array,  type)  {  throw  new  IllegalArgumentException( " ");  }	  safeGet(array,    type)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	57	None	replace
332	[BUG]  [BUGGY]  while(element!=  null  &&  element.hasChildren())  {  try  {  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  while(element!=  null  &&  element.hasChildren())  {  try  {  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	while(element!=  null  &&  element.hasChildren())  {  try  {	  try    {    [Delete]    catch(NoSuchElementException    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	35	None	replace
333	[BUG]  [BUGGY]  T[]  newArray  =(T[])type.copyGrow1(array,  type,  array.length);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])type.copyGrow1(array,  type,  array.length);  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])type.copyGrow1(array,  type,  array.length);	  T[]    newArray    =(T[])array.copyGrow1(array,    type,    array.length);    	non-compiled	[CE]  not  a  statement	68	None	replace
334	[BUG]  [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  array.length);  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyFunction(array,  type,  array.length);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyFunction(array,  type,  array.length);	  MutableArrayUtils.copyFunction(array,    type);    	non-compiled	[CE]  not  a  statement	75	None	replace
335	[BUG]  [BUGGY]  final  T[]  newArray  =  array.getTreeLocation();  [CE]  not  a  statement  [FE]            ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  final  T[]  newArray  =  array.getTreeLocation();  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	final  T[]  newArray  =  array.getTreeLocation();	  final    T[]    newArray    =    (T[])type;    	non-compiled	[CE]  not  a  statement	17	None	replace
336	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentTree(array);  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentTree(array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentTree(array);	  MutableArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	73	None	replace
337	[BUG]  [BUGGY]  MutableArrayUtils.copyCurrentElement(array);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  MutableArrayUtils.copyCurrentElement(array);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	MutableArrayUtils.copyCurrentElement(array);	  MutableArrayUtils.copyCurrentStructure(array);    	non-compiled	[CE]  not  a  statement	73	None	replace
338	[BUG]  [BUGGY]  Type[]  newArray  =(T[])copyArrayGrow2(array,  type,  newArray);  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  Type[]  newArray  =(T[])copyArrayGrow2(array,  type,  newArray);  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	Type[]  newArray  =(T[])copyArrayGrow2(array,  type,  newArray);	  Type[]    copyArrayGrow2(array,    type,    newArray);    	non-compiled	[CE]  not  a  statement	38	None	replace
339	[BUG]  [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.getComponentType());  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  ArrayUtils.checkState(array.getClass()!=  type,  array.getComponentType());  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	ArrayUtils.checkState(array.getClass()!=  type,  array.getComponentType());	  ArrayUtils.checkState(array.getClass()!=    type,    type);    	non-compiled	[CE]  not  a  statement	41	None	replace
340	[BUG]  [BUGGY]  if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  [CE]  not  a  statement  [FE]                  ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(element!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
341	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
342	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  copyArrayGrow1(array,  type);  }  [CE]  not  a  statement  [FE]                      ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  copyArrayGrow1(array,  type);  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type!=  null)  {  aughtExceptionHandler.handleMissingClass(type);  }  else  {  copyArrayGrow1(array,  type);  }	  aughtExceptionHandler.handleMissingClass(type);    	non-compiled	[CE]  not  a  statement	30	None	replace
343	[BUG]  [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }  [CE]  not  a  statement  [FE]              ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type!=  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type!=  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }	  aughtExceptionHandler.throwAsUncheckedException(   "   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
344	[BUG]  [BUGGY]  if(type  ==  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  if(type  ==  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }  [BUGGY]      T[]  newArray  =  (T[])  copyArrayGrow1(array,  type);  newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	if(type  ==  null)  {  aughtExceptionHandler.throwAsUncheckedException( " ");  }	  aughtExceptionHandler.throwAsUncheckedException(   "   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
345	[BUG]  [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  JsonStringEncoder.getInstance());  [CE]  not  a  statement  [FE]                ClassCastException      [CONTEXT]      public  static  <T>  T[]  add(T[]  array,  T  element)  {  Class<?>  type;  if  (array  !=  null){  type  =  array.getClass();  }  else  if  (element  !=  null)  {  type  =  element.getClass();  }  else  {  type  =  Object.class;  }  @SuppressWarnings(     "unchecked     ")  //  type  must  be  T      [BUGGY]  T[]  newArray  =(T[])array.cloneTree(),  array,  JsonStringEncoder.getInstance());  [BUGGY]      newArray[newArray.length  -  1]  =  element;  return  newArray;  }  [CLASS]  ArrayUtils  [METHOD]  add  [RETURN_TYPE]  <T>  T[]  array  T  element  [VARIABLES]  Class[]  EMPTY_CLASS_ARRAY  long[]  EMPTY_LONG_ARRAY  array  array1  array2  joinedArray  result  subarray  short[]  EMPTY_SHORT_ARRAY  array  array1  array2  joinedArray  result  subarray  Character[]  EMPTY_CHARACTER_OBJECT_ARRAY  array  result  Boolean[]  EMPTY_BOOLEAN_OBJECT_ARRAY  array  result  int[]  EMPTY_INT_ARRAY  array  array1  array2  joinedArray  result  subarray  String[]  EMPTY_STRING_ARRAY  Integer[]  EMPTY_INTEGER_OBJECT_ARRAY  array  result  int  INDEX_NOT_FOUND  endIndexExclusive  i  j  newSize  startIndex  startIndexInclusive  tmp  valueForNull  valueToFind  float[]  EMPTY_FLOAT_ARRAY  array  array1  array2  joinedArray  result  subarray  char[]  EMPTY_CHAR_ARRAY  array  array1  array2  joinedArray  result  subarray  Short[]  EMPTY_SHORT_OBJECT_ARRAY  array  result  byte[]  EMPTY_BYTE_ARRAY  array  array1  array2  joinedArray  result  subarray  Double[]  EMPTY_DOUBLE_OBJECT_ARRAY  array  result  boolean  double[]  EMPTY_DOUBLE_ARRAY  array  array1  array2  joinedArray  result  subarray  T  element  Byte[]  EMPTY_BYTE_OBJECT_ARRAY  array  result  Float[]  EMPTY_FLOAT_OBJECT_ARRAY  array  result  T[]  array  newArray  Class  type  boolean[]  EMPTY_BOOLEAN_ARRAY  array  array1  array2  joinedArray  result  subarray  Object[]  EMPTY_OBJECT_ARRAY  array  array1  array2  entry  Long[]  EMPTY_LONG_OBJECT_ARRAY  array  result  	projects/Lang35/src/main/java/org/apache/commons/lang3/ArrayUtils.java	1.0	3298	3298	1	replace	T[]  newArray  =(T[])array.cloneTree(),  array,  JsonStringEncoder.getInstance());	  T[]    newArray    =(T[])array.cloneTree(),    array,    subarray.length);    	non-compiled	[CE]  not  a  statement	69	None	replace
