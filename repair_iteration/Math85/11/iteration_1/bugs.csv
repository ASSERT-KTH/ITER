bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    numIterations++  ;  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    numIterations++  ;		compilable	  [FE]  MathException  	22	1	add
2	[BUG]  [BUGGY]    numIterations++  ;  [FE]  MathException  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    numIterations++  ;  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    numIterations++  ;		compilable	  [FE]  MathException  	22	1	add
3	[BUG]  [BUGGY]  timeout  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    b  =  Math.min(a  +  1.0,  upperBound);		compilable	timeout	22	1	add
4	[BUG]  [BUGGY]    b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    b  =  Math.min(a  +  1.0,  upperBound);		compilable	timeout	22	1	add
5	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    fa  =  Math.min(a  +  1.0,  upperBound);		compilable	  [FE]  MathException  	22	1	add
6	[BUG]  [BUGGY]    fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    fa  =  Math.min(a  +  1.0,  upperBound);		compilable	  [FE]  MathException  	22	1	add
7	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    fa  =  Math.min(a  -  1.0,  upperBound);		compilable	  [FE]  MathException  	22	1	add
8	[BUG]  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    fa  =  Math.min(a  -  1.0,  upperBound);		compilable	  [FE]  MathException  	22	1	add
9	[BUG]  [BUGGY]  timeout  [FE]            MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    a  =  Math.min(a  +  1.0,  upperBound);		compilable	timeout	22	1	add
10	[BUG]  [BUGGY]    a  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    a  =  Math.min(a  +  1.0,  upperBound);		compilable	timeout	22	1	add
11	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(b);  [BUGGY]    fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(b);	fa  =  function.value(a);  	compilable	  [FE]  MathException  	21	2	replace
12	[BUG]  [BUGGY]  fa  =  function.value(b);  [FE]  MathException  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(b);  [BUGGY]    fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b);	fa  =  function.value(a);  	compilable	  [FE]  MathException  	21	2	replace
13	[BUG]  [BUGGY]  fa  =  function.value(fa);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(fa);  [BUGGY]    fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(fa);	fa  =  function.value(a);  	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	21	None	replace
14	[BUG]  [BUGGY]  fa  =  function.value(fb);  [CE]  variable  fb  might  not  have  been  initialized  [FE]        MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(fb);  [BUGGY]    fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(fb);	fa  =  function.value(a);  	non-compiled	[CE]  variable  fb  might  not  have  been  initialized	21	None	replace
15	[BUG]  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);		non-compiled	[CE]  possible  loss  of  precision	22	None	add
16	[BUG]  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    numIterations  =  Math.max(a  -  1.0,  upperBound);		non-compiled	[CE]  possible  loss  of  precision	22	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
18	[BUG]  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
20	[BUG]  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
21	[BUG]  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]            MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);		non-compiled	[CE]  possible  loss  of  precision	22	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
23	[BUG]  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    b  =  Math.min(b  +  1.0,  upperBound);		compilable	  [FE]  AssertionFailedError  	22	1	add
24	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);		compilable	  [FE]  MathException  	22	2	add
25	[BUG]  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);		compilable	  [FE]  MathException  	22	2	add
26	[BUG]  [BUGGY]  fa  =  function.value(a,  b);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]    MathException  [CONTEXT]  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]  fa  =  function.value(a,  b);  [BUGGY]    fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(   "number  of  iterations={0},  maximum  iterations={1},   "  +   "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},   "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b);	fa  =  function.value(a);  	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	21	None	replace
