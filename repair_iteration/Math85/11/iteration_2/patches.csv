bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(a  +  1.0,  lowerBound);	  b    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	5	None	replace
2	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  higherBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(a  +  1.0,  higherBound);	  b    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	5	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	186	1	add
4	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	186	1	add
5	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	186	1	add
6	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	186	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	186	1	add
8	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	186	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  <  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  <  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	186	1	add
10	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  <  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  <  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  <  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	186	1	add
11	[BUG]  [BUGGY]  [FE]  MathException  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	186	2	add
12	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	186	2	add
13	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  numIterations    =    Math.max(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	82	None	replace
14	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	82	None	replace
15	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  numIterations    =    Math.max(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	82	None	replace
16	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  if(a    >    lowerBound)    {    fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	155	None	replace
17	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  if(a    >    lowerBound)    {    fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	155	None	replace
18	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
19	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
20	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
21	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
22	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
23	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
24	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
25	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);	  	compilable	  [FE]  AssertionFailedError  	167	1	add
27	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);	  	compilable	  [FE]  AssertionFailedError  	167	1	add
28	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	195	None	replace
29	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	187	None	replace
30	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  ')'  expected	187	None	replace
31	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  ')'  expected	187	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	156	1	add
33	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	156	1	add
34	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	156	1	add
35	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	156	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	156	1	add
37	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	156	1	add
38	[BUG]  [BUGGY]  [FE]  MathException  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	156	2	add
39	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	156	2	add
40	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
41	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
43	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	2	add
45	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	2	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
47	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
49	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
50	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	27	None	add
51	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }	  fa    =    function.value(a);    b    =    Math.min(b    -    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	136	None	replace
52	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  }	  fa    =    function.value(a);    b    =    Math.min(b    -    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	136	None	replace
53	[BUG]  [BUGGY]  [FE]  MathException  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  lowerBound);	  fa    =    function.value(a);    b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	136	2	replace
54	[BUG]  [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  lowerBound);  [FE]  MathException  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  lowerBound);	  fa    =    function.value(a);    b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	136	2	replace
55	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }	  fa    =    function.value(b);    fa    =    function.value(b));    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	145	None	replace
56	[BUG]  [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }	  fa    =    function.value(b);    fa    =    function.value(b));    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	145	None	replace
57	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b));  }  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b));  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b));  }	  fa    =    function.value(b);    fa    =    function.value(b));    	non-compiled	[CE]  ';'  expected	145	None	replace
58	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
59	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
60	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
61	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
62	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
63	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	compilable	  [FE]  MathException  	114	2	replace
64	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	75	None	replace
65	[BUG]  [BUGGY]  n  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  n	75	None	replace
66	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	168	None	replace
67	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	168	None	replace
68	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	168	None	replace
69	[BUG]  [BUGGY]  fa  =  function.value(b,  a,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b,  a,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  a,  lowerBound);	  fa    =    function.value(b,    lowerBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	164	None	replace
70	[BUG]  [BUGGY]  fa  =  function.value(b,  initial,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b,  initial,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  initial,  lowerBound);	  fa    =    function.value(b,    lowerBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	164	None	replace
71	[BUG]  [BUGGY]  fa  =  function.value(a,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  lowerBound);	  fa    =    function.value(b,    lowerBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	164	None	replace
72	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fb,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fb,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fb,  lowerBound);	  fa    =    function.value(a,    b,    lowerBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	146	None	replace
73	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  lowerBound,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  lowerBound,  numIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  lowerBound,  numIterations);	  fa    =    function.value(a,    b,    lowerBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	146	None	replace
74	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	7	None	replace
75	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	7	None	replace
76	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	107	1	add
77	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	107	1	add
78	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	107	1	add
79	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	107	1	add
80	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	107	1	add
81	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	107	1	add
82	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	107	1	add
83	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	107	1	add
84	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	107	1	add
85	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	107	1	add
86	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  numIterations    =    Math.max(lowerBound    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	152	None	replace
87	[BUG]  [BUGGY]  numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  numIterations    =    Math.max(lowerBound    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	152	None	replace
88	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	1	add
89	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	1	add
90	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	109	1	add
91	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	109	1	add
92	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	1	add
93	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	1	add
94	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	2	add
95	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	109	2	add
96	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	109	None	add
97	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
98	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
99	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
100	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
101	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
102	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
103	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
104	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	113	1	add
105	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  b  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a,  b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a,  b  +  1.0,  upperBound);	  numIterations    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	1	None	replace
106	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
107	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
108	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  timeout    	compilable	  [FE]  MathException  	48	2	add
109	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [FE]  MathException  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  timeout    	compilable	  [FE]  MathException  	48	2	add
110	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	48	1	add
111	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	48	1	add
112	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
113	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
114	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
115	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	48	2	add
116	[BUG]  [BUGGY]  b  =  Math.min(fa  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(fa  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(fa  +  1.0,  lowerBound);	  b    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	68	None	replace
117	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	99	None	replace
118	[BUG]  [BUGGY]  fa  =  function.value(b,  a,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b,  a,  numIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  a,  numIterations);	  fa    =    function.value(b,    a);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	47	None	replace
119	[BUG]  [BUGGY]  fa  =  function.value(b,  a,  fb);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b,  a,  fb);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  a,  fb);	  fa    =    function.value(b,    a);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	47	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
121	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
122	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
123	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
124	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
125	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
126	[BUG]  [BUGGY]  timeout  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
127	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	100	1	add
128	[BUG]  [BUGGY]  [FE]  MathException  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	100	2	add
129	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	100	2	add
130	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	20	1	add
131	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	20	1	add
132	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);	  	compilable	timeout	20	1	add
133	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);	  	compilable	timeout	20	1	add
134	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
135	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
136	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
137	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
138	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	20	1	add
139	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	20	1	add
140	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [CE]  cannot  find  symbol  n  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  cannot  find  symbol  n	166	None	replace
141	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(b  -  1.0,  upperBound  +  1.0);  [CE]  cannot  find  symbol  n  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(b  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(b  -  1.0,  upperBound  +  1.0);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  cannot  find  symbol  n	166	None	replace
142	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
143	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
144	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
145	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
146	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
147	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
148	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
149	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	35	2	add
150	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	35	2	add
151	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	35	2	add
152	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	19	None	replace
153	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  lowerBound);	  a    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	92	None	replace
154	[BUG]  [BUGGY]  a  =  Math.max(b  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(b  -  1.0,  upperBound);	  a    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	92	None	replace
155	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  lowBound);	  a    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	92	None	replace
156	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  n	71	None	replace
157	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  n	71	None	replace
158	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
159	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
160	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
161	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
162	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
163	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
164	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	180	2	add
165	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	180	2	add
166	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
167	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	180	2	add
168	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }	  fa    =    function.value(b);    b    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	144	None	replace
169	[BUG]  [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  b  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  b  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  <  0.0)  {  fa  =  function.value(b);  b  =  function.value(b);  }	  fa    =    function.value(b);    b    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	144	None	replace
170	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }  else  {  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }  else  {  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  }  else  {  numIterations++  ;  }	  fa    =    function.value(b);    b    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	144	None	replace
171	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  b  =  function.value(b);  numIterations++  ;  }	  fa    =    function.value(b);    b    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	144	None	replace
172	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(a  -  1.0,  upperBound);	  b    =    Math.max(b    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	196	None	replace
173	[BUG]  [BUGGY]  b  =  Math.max(b  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(b  -  1.0,  lowerBound);	  b    =    Math.max(b    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	196	None	replace
174	[BUG]  [BUGGY]  b  =  Math.max(initial  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(initial  -  1.0,  upperBound);	  b    =    Math.max(b    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	196	None	replace
175	[BUG]  [BUGGY]  a  =  function.value(b);  [CE]  variable  fa  might  not  have  been  initialized  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  function.value(b);	  fa    =    function.value(b);    a    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	142	None	replace
176	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }	  fa    =    function.value(b);    a    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	142	None	replace
177	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  numIterations++  ;  }	  fa    =    function.value(b);    a    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	142	None	replace
178	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }  else  {  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }  else  {  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  a  =  function.value(b);  }  else  {  numIterations++  ;  }	  fa    =    function.value(b);    a    =    function.value(b);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	142	None	replace
179	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	181	2	replace
180	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	181	2	replace
181	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	181	None	replace
182	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	181	2	replace
183	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	181	2	replace
184	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }	  fa    =    function.value(b);    fa    =    function.value(b);    }    else    if(numIterations    <    maximumIterations)    {    fa    =    function.value(b);    numIterations++    ;    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
185	[BUG]  [BUGGY]  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }	  fa    =    function.value(b);    fa    =    function.value(b);    }    else    if(numIterations    <    maximumIterations)    {    fa    =    function.value(b);    numIterations++    ;    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
186	[BUG]  [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  numIterations++;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  <  0.0)  {  fa  =  function.value(b);  numIterations++;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  <  0.0)  {  fa  =  function.value(b);  numIterations++;  }	  fa    =    function.value(b);    fa    =    function.value(b);    }    else    if(numIterations    <    maximumIterations)    {    fa    =    function.value(b);    numIterations++    ;    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
187	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }	  fa    =    function.value(b);    fa    =    function.value(b);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	24	None	replace
188	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  else  {  numIterations++  ;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  else  {  numIterations++  ;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  else  {  numIterations++  ;  }	  fa    =    function.value(b);    fa    =    function.value(b);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	24	None	replace
189	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	148	None	replace
190	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound  +  1.0);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  -  1.0,  upperBound  +  1.0);	  b    =    Math.min(b    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	148	None	replace
191	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
192	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
193	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	158	1	add
194	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	158	1	add
195	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.max(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
196	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.max(a  *  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  fa  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    *    1.0,    upperBound);    fa  =  Math.max(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
197	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
198	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	158	1	add
199	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
200	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
201	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
202	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
203	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	56	1	add
204	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	56	1	add
205	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	2	add
206	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	2	add
207	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
208	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	56	1	add
209	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          numIterations++    ;    numIterations++  ;  numIterations++  ;  numIterations++  ;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                numIterations++        ;        numIterations++    ;    numIterations++  ;  numIterations++  ;	  	compilable	  [FE]  MathException  	83	1	add
210	[BUG]  [BUGGY]          numIterations++    ;    numIterations++  ;  numIterations++  ;  numIterations++  ;  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          numIterations++    ;    numIterations++  ;  numIterations++  ;  numIterations++  ;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                numIterations++        ;        numIterations++    ;    numIterations++  ;  numIterations++  ;	  	compilable	  [FE]  MathException  	83	1	add
211	[BUG]  [BUGGY]          numIterations++    ;    numIterations++  ;  int  numIterations++  ;  numIterations++  ;  [CE]  ';'  expected  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          numIterations++    ;    numIterations++  ;  int  numIterations++  ;  numIterations++  ;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                numIterations++        ;        numIterations++    ;    int  numIterations++  ;  numIterations++  ;	  	non-compiled	[CE]  ';'  expected	83	None	add
212	[BUG]  [BUGGY]          numIterations++    ;    numIterations++  ;  double  numIterations++  ;  numIterations++  ;  [CE]  ';'  expected  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          numIterations++    ;    numIterations++  ;  double  numIterations++  ;  numIterations++  ;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                numIterations++        ;        numIterations++    ;    double  numIterations++  ;  numIterations++  ;	  	non-compiled	[CE]  ';'  expected	83	None	add
213	[BUG]  [BUGGY]          numIterations++    ;    numIterations++  ;  numIterations++,  numIterations++  ;  [CE]  ';'  expected  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          numIterations++    ;    numIterations++  ;  numIterations++,  numIterations++  ;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                numIterations++        ;        numIterations++    ;    numIterations++,  numIterations++  ;	  	non-compiled	[CE]  ';'  expected	83	None	add
214	[BUG]  [BUGGY]  numIterations++  -  a;  [CE]  not  a  statement  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations++  -  a;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations++  -  a;	          numIterations++    ;    numIterations++    -    a;    	non-compiled	[CE]  not  a  statement	177	None	replace
215	[BUG]  [BUGGY]  numIterations++  -  b;  [CE]  not  a  statement  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations++  -  b;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations++  -  b;	          numIterations++    ;    numIterations++    -    a;    	non-compiled	[CE]  not  a  statement	177	None	replace
216	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  0.5,  lowerBound);	  b    =    Math.min(a    +    0.5,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	69	None	replace
217	[BUG]  [BUGGY]  b  =  Math.min(b  +  0.5,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  +  0.5,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  +  0.5,  upperBound);	  b    =    Math.min(a    +    0.5,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	69	None	replace
218	[BUG]  [BUGGY]  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a,    b);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	22	None	replace
219	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a,    b);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	22	None	replace
220	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a,  b  +  1.0,  upperBound);  fa  =  function.value(a,  b  +  1.0,  upperBound);  }  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a,  b  +  1.0,  upperBound);  fa  =  function.value(a,  b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a,  b  +  1.0,  upperBound);  fa  =  function.value(a,  b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a,    b);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	22	None	replace
221	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a,    b);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	22	None	replace
222	[BUG]  [BUGGY]  b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a,    lowerBound    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	201	None	replace
223	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  lowerBound  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a,    lowerBound    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	201	None	replace
224	[BUG]  [BUGGY]  b  =  Math.min(a,  b  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a,  b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a,  b  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a,    lowerBound    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	201	None	replace
225	[BUG]  [BUGGY]  b  =  Math.min(a,  upperBound  +  1.0,  lowerBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a,  upperBound  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a,  upperBound  +  1.0,  lowerBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a,    lowerBound    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	201	None	replace
226	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	193	None	replace
227	[BUG]  [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	193	None	replace
228	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [CE]  ')'  expected  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperB	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  ')'  expected	193	None	replace
229	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  [CE]  cannot  find  symbol  n  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  -  1.0,  lowerBound);	          fa    =    Math.min(a    -    1.0,    upperBound);    fa    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  cannot  find  symbol  n	73	None	replace
230	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  +=  Math.max(a  -  1.0,  lowerBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	190	None	replace
231	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  +=  Math.min(a  -  1.0,  upperBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	190	None	replace
232	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  higherBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  +=  Math.max(a  -  1.0,  higherBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	190	None	replace
233	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	40	None	replace
234	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	40	None	replace
235	[BUG]  [BUGGY]  na  =  Math.max(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  na  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  na  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	na  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    fa    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  na	57	None	replace
236	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
237	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
238	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
239	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
240	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	2	add
241	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	2	add
242	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
243	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
244	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
245	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	72	1	add
246	[BUG]  [BUGGY]  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	67	None	replace
247	[BUG]  [BUGGY]  a  =  function.value(b);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  function.value(b);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  function.value(b);  b  =  Math.min(b  +  1.0,  upperBound);	  a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	67	None	replace
248	[BUG]  [BUGGY]  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;	          numIterations++    ;    initMajorBounds(fa,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
249	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  numIterations++;  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }	          numIterations++    ;    initMajorBounds(fa,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
250	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  }  else  {  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  }  else  {  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  numIterations++;  }  else  {  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++;  }	          numIterations++    ;    initMajorBounds(fa,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
251	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	17	None	replace
252	[BUG]  [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	17	None	replace
253	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  -  1.0,  lowerBound);	  b    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	191	None	replace
254	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  b    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	191	None	replace
255	[BUG]  [BUGGY]  numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  if(numIterations    >    0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
256	[BUG]  [BUGGY]  numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  if(numIterations    >    0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  not  a  statement	130	None	replace
257	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
258	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
259	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
260	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
261	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
262	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
263	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
264	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	8	2	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
266	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	8	1	add
267	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  numIterations);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  numIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  numIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    numIterations);    	non-compiled	[CE]  possible  loss  of  precision	90	None	replace
268	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  numIterations);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  numIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  +  1.0,  numIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    numIterations);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	90	None	replace
269	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  maximumIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    numIterations);    	non-compiled	[CE]  possible  loss  of  precision	90	None	replace
270	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  *  1.0,  lowerBound);	  fa    =    Math.max(a    +    1.0,    lowerBound);    	compilable	  [FE]  MathException  	108	2	replace
271	[BUG]  [BUGGY]  fa  =  Math.max(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  *  1.0,  lowerBound);	  fa    =    Math.max(a    +    1.0,    lowerBound);    	compilable	  [FE]  MathException  	108	2	replace
272	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  *  1.0,  lowerBound);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
273	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  *  1.0,  lowerBound);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
274	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  *  1.0,  upperBound  +  1.0);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
275	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  *  1.0,  upperBound  +  1.0);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
276	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  *  1.0,  upperBound);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
277	[BUG]  [BUGGY]  fa  =  Math.max(a  *  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  *  1.0,  upperBound);	  fa    =    Math.min(a    *    1.0,    upperBound);    	compilable	  [FE]  MathException  	159	2	replace
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
279	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
281	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
282	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	16	1	add
283	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	16	1	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
285	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
286	[BUG]  [BUGGY]  [FE]  MathException  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  	compilable	  [FE]  MathException  	16	2	add
287	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [FE]  MathException  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  	compilable	  [FE]  MathException  	16	2	add
288	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	154	None	replace
289	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	154	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
291	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
293	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
294	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	6	1	add
295	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	6	1	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
297	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
299	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
300	[BUG]  [BUGGY]  initMajorBounds(a,  upperBound);  numIterations++;  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(a,  upperBound);  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(a,  upperBound);  numIterations++;	          numIterations++    ;    initMajorBounds(a,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
301	[BUG]  [BUGGY]  initMajorBounds(a,  lowerBound);  numIterations++;  [CE]  cannot  find  symbol  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(a,  lowerBound);  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(a,  lowerBound);  numIterations++;	          numIterations++    ;    initMajorBounds(a,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
302	[BUG]  [BUGGY]  initMajorBounds(a,  upperBound);  [CE]  cannot  find  symbol  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(a,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(a,  upperBound);	          numIterations++    ;    initMajorBounds(a,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
304	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	115	1	add
305	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	115	2	add
306	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	115	2	add
307	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	115	1	add
308	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	115	1	add
309	[BUG]  [BUGGY]  [FE]  MathException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	115	2	add
310	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	115	2	add
311	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	115	1	add
312	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	115	1	add
313	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
314	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
315	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
316	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
317	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
318	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
319	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	2	add
320	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	2	add
321	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
322	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound    +    1.0);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	165	1	add
323	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	194	2	add
324	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	194	2	add
325	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathRuntimeException$4  	194	2	add
326	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathRuntimeException$4  	194	2	add
327	[BUG]  [BUGGY]  timeout  [FE]        MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	194	1	add
328	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	194	1	add
329	[BUG]  [BUGGY]  timeout  [FE]          MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	194	1	add
330	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]          MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	194	1	add
331	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	194	2	add
332	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathRuntimeException$4    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	194	2	add
333	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	21	None	replace
334	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	21	None	replace
335	[BUG]  [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;  [CE]  cannot  find  symbol  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;	          numIterations++    ;    initMajorBounds(a,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
336	[BUG]  [BUGGY]  if(initial  <  lowerBound)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;  }  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(initial  <  lowerBound)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(initial  <  lowerBound)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++;  }	          numIterations++    ;    initMajorBounds(a,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
337	[BUG]  [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	initMajorBounds(a,  lowerBound,  upperBound);	          numIterations++    ;    initMajorBounds(a,    lowerBound,    upperBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
338	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    topBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	102	None	replace
339	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  topBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    topBound);    	non-compiled	[CE]  cannot  find  symbol  topBound	102	None	replace
340	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }	          numIterations++    ;    int    numIterations++    ;    	non-compiled	[CE]  ';'  expected	88	None	replace
341	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  numIterations++;  int  numIterations++;  }	          numIterations++    ;    int    numIterations++    ;    	non-compiled	[CE]  ';'  expected	88	None	replace
342	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);	  a    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	139	None	replace
343	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  a    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	139	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
345	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
347	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
349	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
350	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	14	1	add
351	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	14	1	add
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
353	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	14	1	add
354	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	98	2	add
355	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	98	2	add
356	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	98	2	add
357	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	98	2	add
358	[BUG]  [BUGGY]  timeout  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	98	1	add
359	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	98	1	add
360	[BUG]  [BUGGY]  timeout  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	timeout	98	1	add
361	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	timeout	98	1	add
362	[BUG]  [BUGGY]  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	43	1	add
363	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	43	1	add
364	[BUG]  [BUGGY]  timeout  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	43	1	add
365	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	43	1	add
366	[BUG]  [BUGGY]  [FE]  MathException  [FE]                                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	43	2	add
367	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	43	2	add
368	[BUG]  [BUGGY]  [FE]  MathException  [FE]                                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	43	2	add
369	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]                                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	43	2	add
370	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  higherBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  higherBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	43	None	add
371	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  }  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	183	None	replace
372	[BUG]  [BUGGY]  numIterations  =  1;  [CE]  variable  fa  might  not  have  been  initialized  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  1;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  1;	  numIterations    =    0;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	140	None	replace
373	[BUG]  [BUGGY]  int  numIterations  =  0;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  int  numIterations  =  0;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	int  numIterations  =  0;	  numIterations    =    0;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	140	None	replace
374	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
375	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
376	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
377	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
378	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
379	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
380	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
381	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	117	2	add
382	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	117	1	add
383	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	117	1	add
384	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	50	1	add
385	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	50	1	add
386	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	50	2	add
387	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	50	2	add
388	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	50	1	add
389	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	50	1	add
390	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	50	1	add
391	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	50	1	add
392	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  	compilable	  [FE]  MathException  	50	2	add
393	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);	  	compilable	  [FE]  MathException  	50	2	add
394	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  fa  =  function.value(b);  fa  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        fa    =    function.value(b);    fa  =  function.value(b);  fa  =  function.value(b);	  	compilable	  [FE]  MathException  	23	1	add
395	[BUG]  [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  fa  =  function.value(b);  fa  =  function.value(b);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  fa  =  function.value(b);  fa  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        fa    =    function.value(b);    fa  =  function.value(b);  fa  =  function.value(b);	  	compilable	  [FE]  MathException  	23	1	add
396	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  a  =  function.value(b);  fa  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        fa    =    function.value(b);    a  =  function.value(b);  fa  =  function.value(b);	  	compilable	timeout	23	1	add
397	[BUG]  [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  a  =  function.value(b);  fa  =  function.value(b);  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  a  =  function.value(b);  fa  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        fa    =    function.value(b);    a  =  function.value(b);  fa  =  function.value(b);	  	compilable	timeout	23	1	add
398	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  if(b  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        fa    =    function.value(b);    if(b  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }	  	compilable	  [FE]  MathException  	23	1	add
399	[BUG]  [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  if(b  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  if(b  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        fa    =    function.value(b);    if(b  <  0.0)  {  fa  =  function.value(b);  fa  =  function.value(b);  }	  	compilable	  [FE]  MathException  	23	1	add
400	[BUG]  [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  if(function.value(b);  fa  =  function.value(b);  numIterations++  ;  [CE]  ')'  expected  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    fa  =  function.value(b);  if(function.value(b);  fa  =  function.value(b);  numIterations++  ;  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        fa    =    function.value(b);    if(function.value(b);  fa  =  function.value(b);  numIterations++  ;	  	non-compiled	[CE]  ')'  expected	23	None	add
401	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	1	add
402	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	1	add
403	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	103	1	add
404	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	103	1	add
405	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	1	add
406	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	1	add
407	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	2	add
408	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	103	2	add
409	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	103	None	add
410	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	          b    =    Math.min(b    +    1.0,    upperBound);    b    =    Math.max(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	120	None	replace
411	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	          b    =    Math.min(b    +    1.0,    upperBound);    b    =    Math.max(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	120	None	replace
412	[BUG]  [BUGGY]  b  =  Math.max(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(b  +  1.0,  upperBound);	          b    =    Math.min(b    +    1.0,    upperBound);    b    =    Math.max(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	120	None	replace
413	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	1	add
414	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	1	add
415	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	1	add
416	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	1	add
417	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	1	add
418	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	1	add
419	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	1	add
420	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	1	add
421	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	2	add
422	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        fa    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	60	2	add
423	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);	  numIterations    =    Math.max(lowerBound    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
424	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
425	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
426	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
427	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
428	[BUG]  [BUGGY]  timeout  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	178	1	add
429	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	178	1	add
430	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
431	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	178	2	add
432	[BUG]  [BUGGY]  timeout  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	timeout	178	1	add
433	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	timeout	178	1	add
434	[BUG]  [BUGGY]  if(numIterations  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]        AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  if(fa    >    0.0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	171	None	replace
435	[BUG]  [BUGGY]  if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  if(fa    >    0.0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	171	None	replace
436	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	192	1	add
437	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	192	1	add
438	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	192	1	add
439	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	192	1	add
440	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	192	2	add
441	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	192	2	add
442	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  MathException  	192	2	add
443	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  MathException  	192	2	add
444	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	192	1	add
445	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	192	1	add
446	[BUG]  [BUGGY]  n  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    fa    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  n	59	None	replace
447	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    fa    =    Math.max(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	59	2	replace
448	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  +  1.0,  lowerBound);  fa  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    fa    =    Math.max(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	59	2	replace
449	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fa,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fa,  numIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fa,  numIterations);	  fa    =    function.value(a,    b,    fa);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	127	None	replace
450	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fa,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fa,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fa,  lowerBound);	  fa    =    function.value(a,    b,    fa);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	127	None	replace
451	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fb,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fb,  numIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fb,  numIterations);	  fa    =    function.value(a,    b,    fa);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	127	None	replace
452	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fa,  initial);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fa,  initial);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fa,  initial);	  fa    =    function.value(a,    b,    fa);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	127	None	replace
453	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
454	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
455	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
456	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
457	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
458	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	74	1	add
459	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	74	1	add
460	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	74	1	add
461	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	timeout	74	1	add
462	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	timeout	74	1	add
463	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	29	None	replace
464	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(initial  -  1.0,  lowerBound);	  numIterations    =    Math.max(initial    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
465	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(numIterations  -  1.0,  upperBound);	  numIterations    =    Math.max(initial    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
466	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  +  1.0,  lowerBound);	  a    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	91	None	replace
467	[BUG]  [BUGGY]  a  =  Math.min(b  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(b  +  1.0,  lowerBound);	  a    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	91	None	replace
468	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	173	None	replace
469	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	173	None	replace
470	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	173	None	replace
471	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	1	add
472	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	1	add
473	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	1	add
474	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	1	add
475	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	105	1	add
476	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	105	1	add
477	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	2	add
478	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	105	2	add
479	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	105	1	add
480	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	105	1	add
481	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0);  fa  =  function.value(b  +  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    function.value(b    +    1.0);    fa  =  function.value(b  +  1.0);	  timeout    	compilable	  [FE]  MathException  	45	1	add
482	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0);  fa  =  function.value(b  +  1.0);  [FE]  MathException  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0);  fa  =  function.value(b  +  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b    +    1.0);    fa  =  function.value(b  +  1.0);	  timeout    	compilable	  [FE]  MathException  	45	1	add
483	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0);  a  =  function.value(b  +  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    function.value(b    +    1.0);    a  =  function.value(b  +  1.0);	  timeout    	compilable	timeout	45	1	add
484	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0);  a  =  function.value(b  +  1.0);  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0);  a  =  function.value(b  +  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b    +    1.0);    a  =  function.value(b  +  1.0);	  timeout    	compilable	timeout	45	1	add
485	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0);  int  fa  =  function.value(b  +  1.0);  [CE]  variable  fa  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0);  int  fa  =  function.value(b  +  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b    +    1.0);    int  fa  =  function.value(b  +  1.0);	  timeout    	non-compiled	[CE]  variable  fa  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	45	None	add
486	[BUG]  [BUGGY]  fa  =  function.value(b,  lowerBound,  a);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b,  lowerBound,  a);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  lowerBound,  a);	  fa    =    function.value(a,    lowerBound,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	147	None	replace
487	[BUG]  [BUGGY]  fa  =  function.value(a,  initial,  lowerBound,  b);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  initial,  lowerBound,  b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  initial,  lowerBound,  b);	  fa    =    function.value(a,    lowerBound,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	147	None	replace
488	[BUG]  [BUGGY]  fa  =  function.value(a,  lowerBound,  b,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  lowerBound,  b,  numIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  lowerBound,  b,  numIterations);	  fa    =    function.value(a,    lowerBound,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	147	None	replace
489	[BUG]  [BUGGY]  b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);	  b    =    Math.min(a    *    upperBound    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	150	None	replace
490	[BUG]  [BUGGY]  b  =  Math.min(a  *  fb  +  1.0,  upperBound);  [CE]  variable  fb  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  *  fb  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  fb  +  1.0,  upperBound);	  b    =    Math.min(a    *    upperBound    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fb  might  not  have  been  initialized	150	None	replace
491	[BUG]  [BUGGY]  b  =  Math.min(a  *  upperBound  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  *  upperBound  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  upperBound  +  1.0,  lowerBound);	  b    =    Math.min(a    *    upperBound    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	150	None	replace
492	[BUG]  [BUGGY]  b  =  Math.min(a  *  initial  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  *  initial  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  initial  +  1.0,  upperBound);	  b    =    Math.min(a    *    upperBound    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	150	None	replace
493	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	65	1	replace
494	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	65	1	replace
495	[BUG]  [BUGGY]  [FE]  MathException  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	65	2	replace
496	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	65	2	replace
497	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	36	None	replace
498	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	36	None	replace
499	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
500	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
501	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
502	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
503	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
504	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
505	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
506	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
507	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
508	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                      AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	121	1	add
509	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  fa  =  function.value(b);  b  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        b    =    function.value(b);    fa  =  function.value(b);  b  =  function.value(b);	  timeout    	compilable	timeout	143	1	add
510	[BUG]  [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  fa  =  function.value(b);  b  =  function.value(b);  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  fa  =  function.value(b);  b  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        b    =    function.value(b);    fa  =  function.value(b);  b  =  function.value(b);	  timeout    	compilable	timeout	143	1	add
511	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  a  =  function.value(b);  b  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        b    =    function.value(b);    a  =  function.value(b);  b  =  function.value(b);	  timeout    	compilable	timeout	143	1	add
512	[BUG]  [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  a  =  function.value(b);  b  =  function.value(b);  timeout  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  a  =  function.value(b);  b  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        b    =    function.value(b);    a  =  function.value(b);  b  =  function.value(b);	  timeout    	compilable	timeout	143	1	add
513	[BUG]  [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  int  a  =  function.value(b);  b  =  function.value(b);  [CE]  variable  a  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    b  =  function.value(b);  int  a  =  function.value(b);  b  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        b    =    function.value(b);    int  a  =  function.value(b);  b  =  function.value(b);	  timeout    	non-compiled	[CE]  variable  a  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	143	None	add
514	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
515	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
516	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	172	2	add
517	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	172	2	add
518	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	172	1	add
519	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	172	1	add
520	[BUG]  [BUGGY]  timeout  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
521	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
522	[BUG]  [BUGGY]  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
523	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	172	1	add
524	[BUG]  [BUGGY]  fa  =  function.value(a,  fb,  b);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  fb,  b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  fb,  b);	  fa    =    function.value(a,    b,    fb);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	128	None	replace
525	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fb,  initial);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  fb,  initial);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fb,  initial);	  fa    =    function.value(a,    b,    fb);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	128	None	replace
526	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
527	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  timeout  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
528	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
529	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  timeout  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
530	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
531	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
532	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                    AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	12	2	add
533	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                    AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	12	2	add
534	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
535	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                      AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	12	1	add
536	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	9	None	replace
537	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  2.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a  /  2.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  /  2.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  numIterations    =    Math.max(a    /    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	89	None	replace
538	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  higherBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  +  1.0,  higherBound);	  a    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	93	None	replace
539	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  +  1.0,  lowBound);	  a    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	93	None	replace
540	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b  +  1.0,  lowerBound);	  fa    =    function.value(b    +    1.0);    timeout    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	46	None	replace
541	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  /  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(b  /  1.0);	  fa    =    function.value(b    +    1.0);    timeout    	compilable	  [FE]  MathException  	46	2	replace
542	[BUG]  [BUGGY]  fa  =  function.value(b  /  1.0);  [FE]  MathException  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  /  1.0);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b  /  1.0);	  fa    =    function.value(b    +    1.0);    timeout    	compilable	  [FE]  MathException  	46	2	replace
543	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0,  upperBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(b  +  1.0,  upperBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b  +  1.0,  upperBound);	  fa    =    function.value(b    +    1.0);    timeout    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	46	None	replace
544	[BUG]  [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound    	non-compiled	[CE]  ')'  expected	188	None	replace
545	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound    	non-compiled	[CE]  ')'  expected	188	None	replace
546	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  fa  =  function.value(b);  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        a    =    function.value(b);    fa  =  function.value(b);  a  =  function.value(b);	  timeout    	compilable	timeout	141	1	add
547	[BUG]  [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  fa  =  function.value(b);  a  =  function.value(b);  timeout  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  fa  =  function.value(b);  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        a    =    function.value(b);    fa  =  function.value(b);  a  =  function.value(b);	  timeout    	compilable	timeout	141	1	add
548	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  a  =  function.value(b);  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa        =        function.value(b);        a    =    function.value(b);    a  =  function.value(b);  a  =  function.value(b);	  timeout    	compilable	timeout	141	1	add
549	[BUG]  [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  a  =  function.value(b);  a  =  function.value(b);  timeout  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  a  =  function.value(b);  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        a    =    function.value(b);    a  =  function.value(b);  a  =  function.value(b);	  timeout    	compilable	timeout	141	1	add
550	[BUG]  [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  fa  =  parameter.value(b);  a  =  function.value(b);  [CE]  cannot  find  symbol  parameter  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa    =    function.value(b);    a  =  function.value(b);  fa  =  parameter.value(b);  a  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa        =        function.value(b);        a    =    function.value(b);    fa  =  parameter.value(b);  a  =  function.value(b);	  timeout    	non-compiled	[CE]  cannot  find  symbol  parameter	141	None	add
551	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  numIterations,  maximumIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  numIterations,  maximumIterations);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  numIterations,  maximumIterations);	  fa    =    function.value(a,    b,    numIterations);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	126	None	replace
552	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  numIterations,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  numIterations,  lowerBound);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  numIterations,  lowerBound);	  fa    =    function.value(a,    b,    numIterations);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	126	None	replace
553	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  numIterations,  fa);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  function.value(a,  b,  numIterations,  fa);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  numIterations,  fa);	  fa    =    function.value(a,    b,    numIterations);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	126	None	replace
554	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    *    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	42	None	replace
555	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.min(a    *    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	42	None	replace
556	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  lowBound);	  fa    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	112	None	replace
557	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.max(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	38	None	replace
558	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.max(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	38	None	replace
559	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	53	None	replace
560	[BUG]  [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	53	None	replace
561	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  b  +  1.0,  lowerBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.max(a,  b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a,  b  +  1.0,  lowerBound);	  numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	3	None	replace
562	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  +  1.0,  lowerBound);	  numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
563	[BUG]  [BUGGY]  [FE]  MathException  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	153	2	add
564	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	153	2	add
565	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
566	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
567	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
568	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
569	[BUG]  [BUGGY]  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	153	2	add
570	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	153	2	add
571	[BUG]  [BUGGY]  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
572	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	153	1	add
573	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	96	2	add
574	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	96	2	add
575	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	96	2	add
576	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	96	2	add
577	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
578	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
579	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
580	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
581	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
582	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	96	1	add
583	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	54	1	add
584	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	54	1	add
585	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	54	1	add
586	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	54	1	add
587	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	54	1	add
588	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	54	1	add
589	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);	  timeout    	compilable	timeout	54	1	add
590	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);	  timeout    	compilable	timeout	54	1	add
591	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	54	1	add
592	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	54	1	add
593	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  ')'  expected	133	None	replace
594	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  ')'  expected	133	None	replace
595	[BUG]  [BUGGY]  if(numIterations  >=  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  ')'  expected	133	None	replace
596	[BUG]  [BUGGY]  if(numIterations  <  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  <  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  <  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  ')'  expected	133	None	replace
597	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  -  1.0,  lowerBound);	  numIterations    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	81	None	replace
598	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);	  numIterations    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	81	None	replace
599	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
600	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
601	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
602	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
603	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	169	2	add
604	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	169	2	add
605	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	169	2	add
606	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathRuntimeException$4  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	169	2	add
607	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
608	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	169	1	add
609	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }	          numIterations++    ;    numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	84	None	replace
610	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }	          numIterations++    ;    numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	84	None	replace
611	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  System.arraycopy(fa,  0,  fb,  a,  upperBound);  numIterations++;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  System.arraycopy(fa,  0,  fb,  a,  upperBound);  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  numIterations++;  numIterations++;  }  else  {  System.arraycopy(fa,  0,  fb,  a,  upperBound);  numIterations++;  }	          numIterations++    ;    numIterations++    ;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	84	None	replace
612	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
613	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
614	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
615	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
616	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
617	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
618	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
619	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
620	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
621	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
622	[BUG]  [BUGGY]  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
623	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
624	[BUG]  [BUGGY]  [FE]  MathException  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
625	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
626	[BUG]  [BUGGY]  [FE]  MathException  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
627	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
628	[BUG]  [BUGGY]  timeout  [FE]                                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	41	1	add
629	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	41	1	add
630	[BUG]  [BUGGY]  [FE]  MathException  [FE]                                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.max(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
631	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]                                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.max(a  *  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	41	2	add
632	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  +  1.0,  upperBound  +  1.0);	  numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
633	[BUG]  [BUGGY]  numIterations  =  Math.min(a,  b  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  numIterations  =  Math.min(a,  b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a,  b  +  1.0,  upperBound);	  numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	2	None	replace
634	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    <    0.0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	185	None	replace
635	[BUG]  [BUGGY]  if(numIterations  <  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  <  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  <  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    <    0.0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	185	None	replace
636	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  while  expected  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a    <    0.0)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    	non-compiled	[CE]  while  expected	185	None	replace
637	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(b    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	179	None	replace
638	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    *    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	101	None	replace
639	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
640	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
641	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
642	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
643	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
644	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
645	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	39	2	add
646	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	39	2	add
647	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
648	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	39	2	add
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	182	1	add
650	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	182	1	add
651	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	182	1	add
652	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	182	1	add
653	[BUG]  [BUGGY]  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	182	2	add
654	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	182	2	add
655	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	182	2	add
656	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  fa  =  function.value(a);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    fa  =  function.value(a);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	182	2	add
657	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	182	1	add
658	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        upperBound);        if(a    >    lowerBound)    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    else    {    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    }    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	182	1	add
659	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(b);  numIterations++;  }	  fa    =    function.value(b);    if(fa    =    function.value(b);    numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	197	None	replace
660	[BUG]  [BUGGY]  b  =  Math.min(b  /  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  /  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  /  1.0,  lowerBound);	  b    =    Math.min(b    /    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	149	None	replace
661	[BUG]  [BUGGY]  b  =  Math.min(a  /  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(a  /  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  /  1.0,  upperBound);	  b    =    Math.min(b    /    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	149	None	replace
662	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  /  2.0,  upperBound);	  b    =    Math.min(b    /    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	149	None	replace
663	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	1	add
664	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	1	add
665	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	1	add
666	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	1	add
667	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	111	1	add
668	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	111	1	add
669	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	2	add
670	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	111	2	add
671	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	111	1	add
672	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	111	1	add
673	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
674	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
675	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
676	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
677	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
678	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
679	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	76	1	add
680	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	76	1	add
681	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
682	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	76	1	add
683	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
684	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
685	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
686	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
687	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
688	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
689	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	2	add
690	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	2	add
691	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
692	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	70	1	add
693	[BUG]  [BUGGY]  int  numIterations  =  numIterations++;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  int  numIterations  =  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	int  numIterations  =  numIterations++;	  if(a    >    lowerBound)    {    numIterations++;    }    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	189	None	replace
694	[BUG]  [BUGGY]  int  numIterations  =  numIterations;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  int  numIterations  =  numIterations;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	int  numIterations  =  numIterations;	  if(a    >    lowerBound)    {    numIterations++;    }    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	189	None	replace
695	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
696	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
697	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
698	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
699	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	52	1	add
700	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	timeout	52	1	add
701	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
702	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
703	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);	  timeout    	compilable	timeout	52	1	add
704	[BUG]  [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        function.value(a);        b        =        Math.min(b        +        1.0,        lowerBound);        a    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);	  timeout    	compilable	timeout	52	1	add
705	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	55	None	replace
706	[BUG]  [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	55	None	replace
707	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	  fa    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	157	None	replace
708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
709	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
710	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	10	1	add
711	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	10	1	add
712	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
713	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
714	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
715	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
716	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
717	[BUG]  [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        -        1.0,        upperBound);        b        =        Math.min(b        +        1.0,        upperBound);        a    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
718	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	175	2	replace
719	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          fa    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.max(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	175	2	replace
720	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
721	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
722	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
723	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
724	[BUG]  [BUGGY]  [FE]  MathException  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
725	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
726	[BUG]  [BUGGY]  [FE]  MathException  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
727	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
728	[BUG]  [BUGGY]  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
729	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	62	2	add
730	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
731	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
732	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	137	1	add
733	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	137	1	add
734	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
735	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
736	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	137	1	add
737	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	137	1	add
738	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
739	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	137	1	add
740	[BUG]  [BUGGY]  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
741	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
742	[BUG]  [BUGGY]  [FE]  MathException  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
743	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
744	[BUG]  [BUGGY]  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
745	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]                          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
746	[BUG]  [BUGGY]  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	37	1	add
747	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	37	1	add
748	[BUG]  [BUGGY]  [FE]  MathException  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
749	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                a        =        Math.min(a        +        1.0,        upperBound);        a    =    Math.max(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	37	2	add
750	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	49	None	replace
751	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >=  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	49	None	replace
752	[BUG]  [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  1)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	          fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	49	None	replace
753	[BUG]  [BUGGY]  init();  numIterations++;  [CE]  cannot  find  symbol  [FE]        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  init();  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	init();  numIterations++;	          numIterations++    ;    init();    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
754	[BUG]  [BUGGY]  if(initial  <  maximumIterations)  {  numIterations++;  init();  numIterations++;  }  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(initial  <  maximumIterations)  {  numIterations++;  init();  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(initial  <  maximumIterations)  {  numIterations++;  init();  numIterations++;  }	          numIterations++    ;    init();    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
755	[BUG]  [BUGGY]  if(initial)  {  numIterations++;  init();  numIterations++;  }  [CE]  incompatible  types  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  if(initial)  {  numIterations++;  init();  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(initial)  {  numIterations++;  init();  numIterations++;  }	          numIterations++    ;    init();    numIterations++    ;    	non-compiled	[CE]  incompatible  types	176	None	replace
756	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
757	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
758	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
759	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
760	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
761	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
762	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
763	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
764	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
765	[BUG]  [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                fa        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	64	1	add
766	[BUG]  [BUGGY]  fb  =  function.value(b);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fb  =  function.value(b);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fb  =  function.value(b);	  fb    =    function.value(a);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	34	None	replace
767	[BUG]  [BUGGY]  fb  =  function.value(initial);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fb  =  function.value(initial);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fb  =  function.value(initial);	  fb    =    function.value(a);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	34	None	replace
768	[BUG]  [BUGGY]  fb  =  function.value(fa);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fb  =  function.value(fa);  [BUGGY]        fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fb  =  function.value(fa);	  fb    =    function.value(a);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	34	None	replace
769	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	          a    =    Math.min(a    +    1.0,    upperBound);    a    =    Math.max(a    +    1.0,    lowerBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	44	None	replace
770	[BUG]  [BUGGY]  a  =  initMajorBounds(a,  lowerBound);  numIterations++;  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  a  =  initMajorBounds(a,  lowerBound);  numIterations++;  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  initMajorBounds(a,  lowerBound);  numIterations++;	          numIterations++    ;    initMajorBounds(a,    lowerBound);    numIterations++    ;    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
771	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
772	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
773	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
774	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
775	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
776	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
777	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
778	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	94	1	add
779	[BUG]  [BUGGY]  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	94	2	add
780	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]                      MathException      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	94	2	add
781	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
782	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
783	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
784	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
785	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
786	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
787	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	30	1	add
788	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	30	1	add
789	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	30	None	add
790	[BUG]  [BUGGY]  n  =  Math.max(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]              AssertionFailedError      [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]  n  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	n  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(b    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	122	None	replace
791	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
792	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
793	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
794	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
795	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
796	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [FE]  MaxIterationsExceededException  [FE]        MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
797	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
798	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	119	2	add
799	[BUG]  [BUGGY]  timeout  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	timeout	119	1	add
800	[BUG]  [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  timeout  [FE]            MaxIterationsExceededException    [CONTEXT]      }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);      [BUGGY]          b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +       "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	                b        =        Math.min(b        +        1.0,        upperBound);        b    =    Math.max(b    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	timeout	119	1	add
