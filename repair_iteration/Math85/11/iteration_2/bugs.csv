bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  +  1.0,  upperBound);	      numIterations++    ;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
2	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  +  1.0,  upperBound);	      numIterations++    ;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
3	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  +  1.0,  lowerBound);	      numIterations++    ;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
4	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  +  1.0,  lowerBound);	      b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	23	None	replace
5	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(a  +  1.0,  upperBound);	      b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	23	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
7	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
9	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
11	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
12	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	19	1	add
13	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	19	1	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
15	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	17	1	add
17	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	17	1	add
18	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	17	1	add
19	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	17	1	add
20	[BUG]  [BUGGY]  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	17	2	add
21	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	17	2	add
22	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  function.value(a,  b);  b  =  Math.min(b  +  1.0,  upperBound);	  	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	17	None	add
23	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    function.value(b);    fa  =  function.value(b);	  	compilable	  [FE]  MathException  	11	1	add
24	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b);	  	compilable	  [FE]  MathException  	11	1	add
25	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  [CE]  while  expected  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }	  	non-compiled	[CE]  while  expected	11	None	add
26	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  while((  a  *  fb  >  0.0)&&((  a  *  fb  *  [CE]  while  expected  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  while((  a  *  fb  >  0.0)&&((  a  *  fb  *  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b);  }  else  if(numIterations  <  maximumIterations)  {  fa  =  function.value(b);  numIterations++  ;  }  while((  a  *  fb  >  0.0)&&((  a  *  fb  *	  	non-compiled	[CE]  while  expected	11	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  AssertionFailedError  	20	2	replace
28	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  AssertionFailedError  	20	2	replace
29	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	20	None	replace
30	[BUG]  [BUGGY]  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	20	2	replace
31	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	20	2	replace
32	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(initial);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(initial);	  fa    =    function.value(fb);    	compilable	timeout	14	1	replace
33	[BUG]  [BUGGY]  fa  =  function.value(initial);  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(initial);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(initial);	  fa    =    function.value(fb);    	compilable	timeout	14	1	replace
34	[BUG]  [BUGGY]  fb  =  function.value(a);  [CE]  variable  fa  might  not  have  been  initialized  [FE]              MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fb  =  function.value(a);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fb  =  function.value(a);	  fa    =    function.value(fb);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	14	None	replace
35	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	9	2	add
36	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	9	2	add
37	[BUG]  [BUGGY]  timeout  [FE]                  MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
38	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                  MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
39	[BUG]  [BUGGY]  [FE]  MathException  [FE]                    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	9	2	add
40	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]                    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	9	2	add
41	[BUG]  [BUGGY]  timeout  [FE]                      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
42	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
43	[BUG]  [BUGGY]  timeout  [FE]                        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
44	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
45	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b  +  1.0);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(b  +  1.0);	  fa    =    function.value(b);    	compilable	timeout	12	1	replace
46	[BUG]  [BUGGY]  fa  =  function.value(b  +  1.0);  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b  +  1.0);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b  +  1.0);	  fa    =    function.value(b);    	compilable	timeout	12	1	replace
47	[BUG]  [BUGGY]  fa  =  function.value(b,  a);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b,  a);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  a);	  fa    =    function.value(b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	12	None	replace
48	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	24	1	add
49	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	24	1	add
50	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	24	2	add
51	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	24	2	add
52	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	24	1	add
53	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	24	1	add
54	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	24	1	add
55	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    a  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	24	1	add
56	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	1	add
57	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	1	add
58	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	1	add
59	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	1	add
60	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	1	add
61	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    fa  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	1	add
62	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	5	1	add
63	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	5	1	add
64	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	5	1	add
65	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	5	1	add
66	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
67	[BUG]  [BUGGY]  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
68	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	4	None	replace
69	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  +  0.5,  upperBound);	      b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	4	None	replace
70	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
71	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
72	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	7	1	add
73	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	7	1	add
74	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
75	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
76	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
77	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	7	1	add
78	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	7	1	add
79	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	7	1	add
80	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
81	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.min(a  -  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
82	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]              MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
83	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        numIterations++    ;    numIterations++  ;	  	compilable	  [FE]  MathException  	1	1	add
84	[BUG]  [BUGGY]      numIterations++  ;  numIterations++  ;  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    numIterations++  ;	  	compilable	  [FE]  MathException  	1	1	add
85	[BUG]  [BUGGY]      numIterations++  ;  numIterations++  if(a  >  lowerBound)  {  numIterations++  ;  }  [CE]  ';'  expected  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  if(a  >  lowerBound)  {  numIterations++  ;  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    numIterations++  if(a  >  lowerBound)  {  numIterations++  ;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
86	[BUG]  [BUGGY]      numIterations++  ;  numIterations++  if(a  >  upperBound)  {  numIterations++  ;  }  [CE]  ';'  expected  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  if(a  >  upperBound)  {  numIterations++  ;  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    numIterations++  if(a  >  upperBound)  {  numIterations++  ;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
87	[BUG]  [BUGGY]      numIterations++  ;  numIterations++  if(fa  >  lowerBound)  {  numIterations++  ;  }  [CE]  ';'  expected  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  if(fa  >  lowerBound)  {  numIterations++  ;  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    numIterations++  if(fa  >  lowerBound)  {  numIterations++  ;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
88	[BUG]  [BUGGY]      numIterations++  ;  int  numIterations++  ;  [CE]  ';'  expected  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  int  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    int  numIterations++  ;	  	non-compiled	[CE]  ';'  expected	1	None	add
89	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  /  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  /  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
90	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  numIterations);  [CE]  possible  loss  of  precision  [FE]                  MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  numIterations);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  numIterations);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
91	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  +  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	10	None	replace
92	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                  MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  -  1.0,  upperBound);	      a    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	10	None	replace
93	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.max(a  +  1.0,  upperBound);	      a    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	10	None	replace
94	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	3	1	add
95	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	3	1	add
96	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	3	2	add
97	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	3	2	add
98	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]              MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	3	2	add
99	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]              MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	3	2	add
100	[BUG]  [BUGGY]  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	3	1	add
101	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	3	1	add
102	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                  MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  topBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	3	None	add
103	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  +  1.0,  lowerBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
104	[BUG]  [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  +  1.0,  lowerBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
105	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  +  1.0,  upperBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
106	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  +  1.0,  upperBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
107	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  +  1.0,  lowerBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
108	[BUG]  [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  +  1.0,  lowerBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
109	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
110	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
111	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
112	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
113	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
114	[BUG]  [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
116	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
117	[BUG]  [BUGGY]  [FE]  MathException  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
118	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
119	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	22	2	add
120	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	22	2	add
121	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	22	1	add
122	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	22	1	add
123	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]            AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  topBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  topBound);	  	non-compiled	[CE]  cannot  find  symbol  topBound	22	None	add
124	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
125	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(a  /  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(a  /  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
126	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  numIterations);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a,  b,  numIterations);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  numIterations);	  fa    =    function.value(a,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	26	None	replace
127	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fa);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a,  b,  fa);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fa);	  fa    =    function.value(a,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	26	None	replace
128	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  fb);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a,  b,  fb);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  fb);	  fa    =    function.value(a,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	26	None	replace
129	[BUG]  [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	18	None	replace
130	[BUG]  [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(numIterations  >  0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	18	None	replace
131	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(initial  -  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
132	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]            MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
133	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);	  	non-compiled	[CE]  ')'  expected	17	None	add
134	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	18	None	replace
135	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	18	1	replace
136	[BUG]  [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a);  b  =  Math.min(b  -  1.0,  upperBound);	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	18	1	replace
137	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
138	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    	compilable	  [FE]  MathException  	8	2	replace
139	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	a  =  Math.min(a  -  1.0,  upperBound);	      a    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	10	None	replace
140	[BUG]  [BUGGY]  numIterations  =  0;  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  0;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  0;	      numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	2	None	replace
141	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  a  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    function.value(b);    a  =  function.value(b);	  	compilable	timeout	11	1	add
142	[BUG]  [BUGGY]  fa  =  function.value(b);  a  =  function.value(b);  timeout  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  a  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    a  =  function.value(b);	  	compilable	timeout	11	1	add
143	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  b  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa    =    function.value(b);    b  =  function.value(b);	  	compilable	timeout	11	1	add
144	[BUG]  [BUGGY]  fa  =  function.value(b);  b  =  function.value(b);  timeout  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  b  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    b  =  function.value(b);	  	compilable	timeout	11	1	add
145	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b));  [CE]  ';'  expected  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b));  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b));	  	non-compiled	[CE]  ';'  expected	11	None	add
146	[BUG]  [BUGGY]  fa  =  function.value(a,  b,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a,  b,  lowerBound);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  b,  lowerBound);	  fa    =    function.value(a,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	26	None	replace
147	[BUG]  [BUGGY]  fa  =  function.value(a,  lowerBound,  b);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(a,  lowerBound,  b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(a,  lowerBound,  b);	  fa    =    function.value(a,    b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	26	None	replace
148	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  -  1.0,  upperBound);	      b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	23	None	replace
149	[BUG]  [BUGGY]  b  =  Math.min(b  /  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(b  /  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(b  /  1.0,  upperBound);	      b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	23	None	replace
150	[BUG]  [BUGGY]  b  =  Math.min(a  *  upperBound  +  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(a  *  upperBound  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  *  upperBound  +  1.0,  upperBound);	      b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	4	None	replace
151	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
152	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
153	[BUG]  [BUGGY]  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
154	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
155	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(a  >  lowerBound)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  }	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	20	None	replace
156	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	20	1	replace
157	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	20	1	replace
158	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.min(a  *  1.0,  upperBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
159	[BUG]  [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.min(a  *  1.0,  upperBound);	      fa    =    Math.min(a    +    1.0,    upperBound);    	compilable	  [FE]  MathException  	6	2	replace
160	[BUG]  [BUGGY]      numIterations++  ;  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++  ;  [CE]  cannot  find  symbol  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  initMajorBounds(a,  lowerBound,  upperBound);  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    initMajorBounds(a,  lowerBound,  upperBound);  numIterations++  ;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
161	[BUG]  [BUGGY]      numIterations++  ;  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++  ;  [CE]  cannot  find  symbol  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    initMajorBounds(fa,  lowerBound,  upperBound);  numIterations++  ;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
162	[BUG]  [BUGGY]      numIterations++  ;  initMajorBounds(a,  lowerBound);  numIterations++  ;  [CE]  cannot  find  symbol  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  initMajorBounds(a,  lowerBound);  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    initMajorBounds(a,  lowerBound);  numIterations++  ;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
163	[BUG]  [BUGGY]      numIterations++  ;  initMajorBounds(a,  upperBound);  numIterations++  ;  [CE]  cannot  find  symbol  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  initMajorBounds(a,  upperBound);  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    initMajorBounds(a,  upperBound);  numIterations++  ;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
164	[BUG]  [BUGGY]  fa  =  function.value(b,  lowerBound);  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b,  lowerBound);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  function.value(b,  lowerBound);	  fa    =    function.value(b);    	non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	12	None	replace
165	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	7	1	add
166	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  	compilable	  [FE]  MathException  	7	1	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
168	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
169	[BUG]  [BUGGY]  [FE]  MathException  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	19	2	add
170	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	19	2	add
171	[BUG]  [BUGGY]  if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	18	None	replace
172	[BUG]  [BUGGY]  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
173	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]                MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
174	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	5	2	add
175	[BUG]  [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	5	2	add
176	[BUG]  [BUGGY]      numIterations++  ;  init();  numIterations++  ;  [CE]  cannot  find  symbol  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  init();  numIterations++  ;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    init();  numIterations++  ;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
177	[BUG]  [BUGGY]      numIterations++  ;  numIterations++  -  a;  [CE]  not  a  statement  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      numIterations++  ;  numIterations++  -  a;  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        numIterations++    ;    numIterations++  -  a;	  	non-compiled	[CE]  not  a  statement	1	None	add
178	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	22	2	add
179	[BUG]  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	22	2	add
180	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	7	2	add
181	[BUG]  [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	7	2	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
183	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
185	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  <  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
187	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
188	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    upperBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  else  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound	  	non-compiled	[CE]  ')'  expected	17	None	add
189	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  lowerBound)  {  numIterations++;  }	      numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	2	None	replace
190	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	numIterations  +=  Math.max(a  -  1.0,  upperBound);	      numIterations++    ;    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	2	None	replace
191	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.min(a  -  1.0,  upperBound);	      b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	4	None	replace
192	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  MathException  	24	2	add
193	[BUG]  [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [FE]  MathException  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    if(a  >  lowerBound)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  upperBound);  }	  	compilable	  [FE]  MathException  	24	2	add
194	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	add	fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  MathRuntimeException$4  	20	2	replace
195	[BUG]  [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	  [FE]  MathRuntimeException$4  	20	2	replace
196	[BUG]  [BUGGY]  b  =  Math.max(b  -  1.0,  upperBound);  [CE]  variable  fa  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  b  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	b  =  Math.max(b  -  1.0,  upperBound);	      fa    =    Math.min(a    -    1.0,    upperBound);    b    =    Math.min(b    +    1.0,    upperBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	20	None	replace
197	[BUG]  [BUGGY]  fa  =  function.value(b);  if(fa  =  function.value(b);  numIterations++  ;  [CE]  ')'  expected  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  if(fa  =  function.value(b);  numIterations++  ;  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    if(fa  =  function.value(b);  numIterations++  ;	  	non-compiled	[CE]  ')'  expected	11	None	add
198	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  fa  =  function.value(b);  [CE]  while  expected  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  }  fa  =  function.value(b);  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b);  }  fa  =  function.value(b);	  	non-compiled	[CE]  while  expected	11	None	add
199	[BUG]  [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  this.numIterations++  ;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  fa  =  function.value(b);  this.numIterations++  ;  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    fa  =  function.value(b);  this.numIterations++  ;	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	11	None	add
200	[BUG]  [BUGGY]  fa  =  function.value(b);  if(fa  =  function.value(b);  numIterations++  ;  }  [CE]  ')'  expected  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  fa  =  function.value(b);  if(fa  =  function.value(b);  numIterations++  ;  }  [BUGGY]      fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	fa    =    function.value(b);    if(fa  =  function.value(b);  numIterations++  ;  }	  	non-compiled	[CE]  ')'  expected	11	None	add
201	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]          MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a,  lowerBound  +  1.0,  upperBound);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	3	None	add
202	[BUG]  [BUGGY]  if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]    MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(fa  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
203	[BUG]  [BUGGY]  if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [CE]  variable  fa  might  not  have  been  initialized  [FE]      MathException    [CONTEXT]    }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);    [BUGGY]  if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +     "initial={2},  lower  bound={3},  upper  bound={4},  final  a  value={5},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	191	191	1	replace	if(a  >  0.0)  {  fa  =  function.value(a);  b  =  Math.min(b  +  1.0,  lowerBound);  }	      fa    =    function.value(a);    b    =    Math.min(b    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	25	None	replace
