bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  numIterations++;  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                numIterations++;        numIterations++;    numIterations++;  numIterations++;	  	compilable	  [FE]  MathException  	89	1	add
2	[BUG]  [BUGGY]          numIterations++;    numIterations++;  numIterations++;  numIterations++;  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  numIterations++;  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    numIterations++;  numIterations++;	  	compilable	  [FE]  MathException  	89	1	add
3	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations++;  numIterations++;  [CE]  ';'  expected  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations++;  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations++;  numIterations++;	  	non-compiled	[CE]  ';'  expected	89	None	add
4	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations  =  Math.min(a  -  1.0,  lowerBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	89	None	add
5	[BUG]  [BUGGY]          numIterations++;    numIterations++;  double  numIterations++;  numIterations++;  [CE]  ';'  expected  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  double  numIterations++;  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    double  numIterations++;  numIterations++;	  	non-compiled	[CE]  ';'  expected	89	None	add
6	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	55	1	replace
7	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	55	1	replace
8	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  lowerBound);  [CE]  no  suitable  method  found  for  max(double,int,double)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  maximumIterations,  lowerBound);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int,double)	29	None	replace
9	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  upperBound);  [CE]  no  suitable  method  found  for  max(double,int,double)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  maximumIterations,  upperBound);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int,double)	29	None	replace
10	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  fb,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  fb,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound,  fb,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	29	None	replace
11	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  +  1.0,  upperBound);	  a    =    Math.min(lowerBound    +    1.0,    lowerBound);    timeout    	compilable	timeout	113	1	replace
12	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  +  1.0,  upperBound);	  a    =    Math.min(lowerBound    +    1.0,    lowerBound);    timeout    	compilable	timeout	113	1	replace
13	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  topBound);	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    topBound);    	non-compiled	[CE]  cannot  find  symbol  topBound	101	None	replace
14	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
15	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
16	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
17	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
18	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  int  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  int  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a    -    1.0,    upperBound);    int  numIterations  +=  Math.max(a  -  1.0,  upperBound);	  timeout    	non-compiled	[CE]  ';'  expected	145	None	add
19	[BUG]  [BUGGY]  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
20	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	145	1	add
21	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
22	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
23	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
24	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
25	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(upperBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(upperBound  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
26	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(upperBound  +  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(upperBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(upperBound  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	112	2	add
27	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	timeout	112	1	add
28	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	timeout	112	1	add
29	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(higherBound  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  higherBound  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(higherBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(higherBound  +  1.0,  lowerBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	112	None	add
30	[BUG]  [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  [CE]  cannot  find  symbol  n  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  n  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	n  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  cannot  find  symbol  n	5	None	replace
31	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.5,  upperBound);	  timeout    	compilable	timeout	81	1	add
32	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.5,  upperBound);	  timeout    	compilable	timeout	81	1	add
33	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.5,  lowerBound);	  timeout    	compilable	timeout	81	1	add
34	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.5,  lowerBound);	  timeout    	compilable	timeout	81	1	add
35	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.3,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.3,  upperBound);	  timeout    	compilable	timeout	81	1	add
36	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.3,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.3,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.3,  upperBound);	  timeout    	compilable	timeout	81	1	add
37	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.5,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.5,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	81	None	add
38	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.0,  upperBound);	  timeout    	compilable	timeout	126	1	add
39	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.0,  upperBound);	  timeout    	compilable	timeout	126	1	add
40	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.0,  lowerBound);	  timeout    	compilable	timeout	126	1	add
41	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.0,  lowerBound);	  timeout    	compilable	timeout	126	1	add
42	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	126	1	add
43	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	126	1	add
44	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	126	None	add
45	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
46	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
47	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
48	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
49	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowBound  +  1.0);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowBound  +  1.0);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	15	None	add
50	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    b  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	timeout	15	1	add
51	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    b  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	timeout	15	1	add
52	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
53	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  lowerBound);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
54	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  maximumIterations);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
55	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
56	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
57	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
58	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
59	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
60	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
61	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
62	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	42	1	add
63	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	42	None	add
64	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  higherBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	8	None	replace
65	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	8	None	replace
66	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fb);  [CE]  no  suitable  method  found  for  min(double,int,double)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fb);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fb);	  numIterations    =    Math.min(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,int,double)	19	None	replace
67	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fa);  [CE]  no  suitable  method  found  for  min(double,int,double)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fa);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  maximumIterations,  fa);	  numIterations    =    Math.min(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,int,double)	19	None	replace
68	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	16	1	replace
69	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	16	1	replace
70	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	16	None	replace
71	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [CE]  no  suitable  method  found  for  min(double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,int)	16	None	replace
72	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  /  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  1.0,  upperBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
73	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  2.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  /  2.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  2.0,  lowerBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
74	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  /  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  1.0,  maximumIterations);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
75	[BUG]  [BUGGY]  [FE]  MathException  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  1.0,  lowerBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	75	2	replace
76	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  1.0,  lowerBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	75	2	replace
77	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a);	  timeout    	compilable	timeout	116	1	add
78	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a);	  timeout    	compilable	timeout	116	1	add
79	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a));  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a));	  timeout    	non-compiled	[CE]  ';'  expected	116	None	add
80	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a)  [CE]  ';'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a)	  timeout    	non-compiled	[CE]  ';'  expected	116	None	add
81	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).  [CE]  double  cannot  be  dereferenced  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a).	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	116	None	add
82	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    lowerBound);    timeout    	compilable	timeout	49	1	replace
83	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    lowerBound);    timeout    	compilable	timeout	49	1	replace
84	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  fb,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  fb,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound,  fb,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	1	None	replace
85	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  initial,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  initial,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound,  initial,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	1	None	replace
86	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	169	1	add
87	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	169	1	add
88	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	169	1	add
89	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.01,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	169	1	add
90	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  lowerBound);	  timeout    	compilable	timeout	169	1	add
91	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  lowerBound);	  timeout    	compilable	timeout	169	1	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  3.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  3.01,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	169	1	add
93	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  3.01,  upperBound);  [FE]  AssertionFailedError  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  3.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  3.01,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	169	1	add
94	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01.01,  upperBound);  [CE]  ')'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.01,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01.01,  upperBound);	  timeout    	non-compiled	[CE]  ')'  expected	169	None	add
95	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(a  -  1.0,  lowerBound);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
96	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(a  -  1.0,  lowerBound);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
97	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(a  -  1.0,  maximumIterations);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
98	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  maximumIterations);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(a  -  1.0,  maximumIterations);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
99	[BUG]  [BUGGY]  if(a  <  0)  {  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a));  }  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a));  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a));  }	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a));    	non-compiled	[CE]  ';'  expected	36	None	replace
100	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  +  1.0,  upperBound);	  b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	66	2	replace
101	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  +  1.0,  upperBound);	  b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	66	2	replace
102	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
103	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
104	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
105	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
106	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	118	2	add
107	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	118	2	add
108	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	118	2	add
109	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	118	2	add
110	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	118	2	add
111	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	118	2	add
112	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  higherBound);	  	non-compiled	[CE]  cannot  find  symbol  higherBound	118	None	add
113	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	118	2	add
114	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	118	2	add
115	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  numIterations  +=  a;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    a;    numIterations  +=  a;	  timeout    	compilable	  [FE]  MathException  	32	1	add
116	[BUG]  [BUGGY]  numIterations  +=  a;  numIterations  +=  a;  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  numIterations  +=  a;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    a;    numIterations  +=  a;	  timeout    	compilable	  [FE]  MathException  	32	1	add
117	[BUG]  [BUGGY]  numIterations  +=  a;  int  numIterations  +=  a;  [CE]  ';'  expected  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  int  numIterations  +=  a;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    a;    int  numIterations  +=  a;	  timeout    	non-compiled	[CE]  ';'  expected	32	None	add
118	[BUG]  [BUGGY]  numIterations  +=  a;  double  numIterations  +=  a;  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  double  numIterations  +=  a;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    a;    double  numIterations  +=  a;	  timeout    	non-compiled	[CE]  ';'  expected	32	None	add
119	[BUG]  [BUGGY]  numIterations  +=  a;  numIterations  +=  a);  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  numIterations  +=  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    a;    numIterations  +=  a);	  timeout    	non-compiled	[CE]  ';'  expected	32	None	add
120	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
121	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
122	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  upperBound);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	140	None	replace
123	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  +  1.0,  upperBound);	  numIterations    =    Math.max(initial    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	134	None	replace
124	[BUG]  [BUGGY]  int  numIterations  =  Math.max(initial  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(initial  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(initial  +  1.0,  lowerBound);	  numIterations    =    Math.max(initial    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	134	None	replace
125	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  upperBound  +  1.0);	  numIterations    =    Math.min(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
126	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  +  1.0,  maximumIterations);	  numIterations    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	96	None	replace
127	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  +  1.0,  lowerBound);	  numIterations    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	96	None	replace
128	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  +  1.0,  upperBound);	  a    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	86	1	replace
129	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  +  1.0,  upperBound);	  a    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	86	1	replace
130	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
131	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
132	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	27	2	add
133	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	27	2	add
134	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
135	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
136	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
137	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
138	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
139	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
140	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(numIterations  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(numIterations  +  1.0,  lowerBound);	  numIterations    =    Math.max(lowerBound    +    1.0,    a);    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
141	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  +  1.0,  upperBound);	  numIterations    =    Math.max(lowerBound    +    1.0,    a);    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
142	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
143	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
144	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
145	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
146	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	87	None	add
147	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowestBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowestBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	87	None	add
148	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	87	1	add
149	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	87	1	add
150	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int,int)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  maximumIterations);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int,int)	80	None	replace
151	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  fb,  numIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  fb,  numIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  fb,  numIterations);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	80	None	replace
152	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  minimumIterations);  [CE]  cannot  find  symbol  minimumIterations  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  minimumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  minimumIterations);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  cannot  find  symbol  minimumIterations	80	None	replace
153	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	80	None	replace
154	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.0,  b);	  timeout    	compilable	timeout	76	1	add
155	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.0,  b);	  timeout    	compilable	timeout	76	1	add
156	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b));  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.0,  b));	  timeout    	non-compiled	[CE]  ';'  expected	76	None	add
157	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    b);    a  =  Math.min(a  +  1.0,  b);	  timeout    	compilable	timeout	76	1	add
158	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(a  +  1.0,  b);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    a  =  Math.min(a  +  1.0,  b);	  timeout    	compilable	timeout	76	1	add
159	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b).  [CE]  double  cannot  be  dereferenced  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.0,  b).  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.0,  b).	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	76	None	add
160	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  -  1.0,  upperBound);	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
161	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  -  1.0,  upperBound);	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
162	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
163	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
164	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
165	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
166	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
167	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
168	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
169	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
170	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
171	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
172	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	46	1	add
173	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	46	1	add
174	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	46	2	add
175	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	46	2	add
176	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	46	None	add
177	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  UpperBound);  [CE]  cannot  find  symbol  UpperBound  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  UpperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  UpperBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  UpperBound	46	None	add
178	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.01,    upperBound);    timeout    	compilable	timeout	160	1	replace
179	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.01,    upperBound);    timeout    	compilable	timeout	160	1	replace
180	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.01,    upperBound);    timeout    	compilable	timeout	160	1	replace
181	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.01,    upperBound);    timeout    	compilable	timeout	160	1	replace
182	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
183	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
184	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
185	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  else  {  numIterations++;  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
186	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	1	add
187	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	1	add
188	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	13	2	add
189	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	13	2	add
190	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	13	1	add
191	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	13	1	add
192	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	13	1	add
193	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	13	1	add
194	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	2	add
195	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	2	add
196	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  -  1.0,  upperBound);	  numIterations    =    Math.min(lowerBound    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
197	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(numIterations  -  1.0,  lowerBound);	  numIterations    =    Math.min(lowerBound    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	131	None	replace
198	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(b  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
199	[BUG]  [BUGGY]  a  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(b  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
200	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	124	2	add
201	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	124	2	add
202	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	timeout	124	1	add
203	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  timeout    	compilable	timeout	124	1	add
204	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(upperBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(upperBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	124	2	add
205	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(upperBound  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(upperBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(upperBound  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	124	2	add
206	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	124	1	add
207	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	124	1	add
208	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
209	[BUG]  [BUGGY]  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
210	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
211	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  b);  a  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
212	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
213	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
214	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  maximumIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations++;  maximumIterations++;	          numIterations++;    nIterations++;    	compilable	  [FE]  MathException  	93	2	replace
215	[BUG]  [BUGGY]  numIterations++;  maximumIterations++;  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  maximumIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  maximumIterations++;	          numIterations++;    nIterations++;    	compilable	  [FE]  MathException  	93	2	replace
216	[BUG]  [BUGGY]  nIterations++;  [CE]  cannot  find  symbol  nIterations  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  nIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	nIterations++;	          numIterations++;    nIterations++;    	non-compiled	[CE]  cannot  find  symbol  nIterations	93	None	replace
217	[BUG]  [BUGGY]  int  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(initial  -  1.0,  lowerBound);	  numIterations    =    Math.max(initial    -    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	106	None	replace
218	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	129	None	replace
219	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  +  1.0,  upperBound);	  numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	103	None	replace
220	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
221	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
222	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	152	2	add
223	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	152	2	add
224	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
225	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
226	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
227	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
228	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
229	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	152	2	add
230	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
231	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
232	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
233	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
234	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
235	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
236	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  higherBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	156	None	add
237	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [CE]  no  suitable  method  found  for  min(double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);	  numIterations    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,int)	18	None	replace
238	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0,  upperBound);	  numIterations    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	18	None	replace
239	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  fb);  [CE]  no  suitable  method  found  for  max(double,int,double)  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations,  fb);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  maximumIterations,  fb);	  numIterations    =    Math.max(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int,double)	2	None	replace
240	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
241	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
242	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	22	2	add
243	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	22	2	add
244	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
245	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
246	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
247	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
248	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	22	2	add
249	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	22	2	add
250	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(initial  +  1.0,  lowerBound);	  b    =    Math.min(initial    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	127	2	replace
251	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(initial  +  1.0,  lowerBound);	  b    =    Math.min(initial    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	127	2	replace
252	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(numIterations  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(numIterations  +  1.0,  upperBound);	  b    =    Math.min(initial    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	127	1	replace
253	[BUG]  [BUGGY]  b  =  Math.min(numIterations  +  1.0,  upperBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(numIterations  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(numIterations  +  1.0,  upperBound);	  b    =    Math.min(initial    +    1.0,    upperBound);    timeout    	compilable	  [FE]  MathException  	127	1	replace
254	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
255	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
256	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
257	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
258	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	40	1	add
259	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	40	1	add
260	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
261	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    a  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	40	1	add
262	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	40	2	add
263	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.max(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	40	2	add
264	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a)  [CE]  ';'  expected  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a)	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a)    	non-compiled	[CE]  ';'  expected	39	None	replace
265	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a)  [CE]  ';'  expected  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a)	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a)    	non-compiled	[CE]  ';'  expected	39	None	replace
266	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound)  [CE]  ';'  expected  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound)	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a)    	non-compiled	[CE]  ';'  expected	39	None	replace
267	[BUG]  [BUGGY]  initMatrix(fa,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(fa,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(fa,  initial,  upperBound);	          numIterations++;    initMatrix(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
268	[BUG]  [BUGGY]  numIterations++;  initMatrix(fa,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  initMatrix(fa,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  initMatrix(fa,  initial,  upperBound);	          numIterations++;    initMatrix(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
269	[BUG]  [BUGGY]  initMatrix(a,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(a,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(a,  lowerBound,  upperBound);	          numIterations++;    initMatrix(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
270	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  /  1.0,  upperBound);	  a    =    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	79	1	replace
271	[BUG]  [BUGGY]  a  =  Math.max(a  /  1.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  /  1.0,  upperBound);	  a    =    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	79	1	replace
272	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
273	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
274	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
275	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
276	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
277	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
278	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	6	1	add
279	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	6	1	add
280	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(a  -  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	6	None	add
281	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
282	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
283	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
284	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
285	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  lowerBound);	  timeout    	compilable	timeout	159	1	add
286	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  lowerBound);	  timeout    	compilable	timeout	159	1	add
287	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01.01,  upperBound);  [CE]  ')'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01.01,  upperBound);	  timeout    	non-compiled	[CE]  ')'  expected	159	None	add
288	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  3.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  3.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
289	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  3.01,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  3.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.01,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  3.01,  upperBound);	  timeout    	compilable	timeout	159	1	add
290	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.0,  upperBound);	  timeout    	compilable	timeout	83	1	add
291	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.0,  upperBound);	  timeout    	compilable	timeout	83	1	add
292	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.0,  lowerBound);	  timeout    	compilable	timeout	83	1	add
293	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.0,  lowerBound);	  timeout    	compilable	timeout	83	1	add
294	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	83	1	add
295	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	83	1	add
296	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.00,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.00,  upperBound);	  timeout    	compilable	timeout	83	1	add
297	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.00,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.00,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.00,  upperBound);	  timeout    	compilable	timeout	83	1	add
298	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  maximumIterations);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
299	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  upperBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  upperBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  upperBound,  maximumIterations);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	102	None	replace
300	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  upperBound  +  1.0);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
301	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  initial,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  initial,  upperBound);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	102	None	replace
302	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
303	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
304	[BUG]  [BUGGY]  timeout  [FE]      MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	167	1	add
305	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]      MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	167	1	add
306	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]        MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  topBound);	  	non-compiled	[CE]  cannot  find  symbol  topBound	167	None	add
307	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  0.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
308	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  0.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]          MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  0.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
309	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  lowBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	56	None	replace
310	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
311	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
312	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
313	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
314	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
315	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
316	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
317	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	161	2	add
318	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
319	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
320	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
321	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
322	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	108	2	add
323	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	108	2	add
324	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(upperBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(upperBound  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
325	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(upperBound  +  1.0,  lowerBound);  timeout  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(upperBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(upperBound  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
326	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(higherBound  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  higherBound  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(higherBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(higherBound  +  1.0,  lowerBound);	  	non-compiled	[CE]  cannot  find  symbol  higherBound	108	None	add
327	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
328	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	108	1	add
329	[BUG]  [BUGGY]  initMatrix(a,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(a,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(a,  initial,  upperBound);	          numIterations++;    initMatrix(initial,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
330	[BUG]  [BUGGY]  initMatrix(initial,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(initial,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(initial,  lowerBound,  upperBound);	          numIterations++;    initMatrix(initial,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
331	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	139	1	add
332	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	139	1	add
333	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	139	2	add
334	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	139	2	add
335	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  timeout    	compilable	timeout	139	1	add
336	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  timeout    	compilable	timeout	139	1	add
337	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowBound  +  1.0);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  lowBound  +  1.0);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	139	None	add
338	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowestBound  +  1.0);  [CE]  cannot  find  symbol  lowestBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.max(a  -  1.0,  lowestBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.max(a  -  1.0,  lowestBound  +  1.0);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	139	None	add
339	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	154	1	add
340	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	154	1	add
341	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	154	1	add
342	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	154	1	add
343	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	154	None	add
344	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  0.0,  upperBound);	  timeout    	compilable	timeout	154	1	add
345	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  0.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  0.0,  upperBound);	  timeout    	compilable	timeout	154	1	add
346	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
347	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
348	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
349	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
350	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	171	1	add
351	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	171	1	add
352	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
353	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
354	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowestBound);    	compilable	  [FE]  MathException  	57	2	replace
355	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowestBound);    	compilable	  [FE]  MathException  	57	2	replace
356	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	50	2	add
357	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	50	2	add
358	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	50	1	add
359	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	50	1	add
360	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	50	None	add
361	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowestBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowestBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	50	None	add
362	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  bottomBound);  [CE]  cannot  find  symbol  bottomBound  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  bottomBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  bottomBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  bottomBound	50	None	add
363	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	157	2	replace
364	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	157	2	replace
365	[BUG]  [BUGGY]  n  =  Math.min(a  +  1.0,  lowerBound);  n  =  Math.max(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  n  =  Math.min(a  +  1.0,  lowerBound);  n  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	n  =  Math.min(a  +  1.0,  lowerBound);  n  =  Math.max(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	157	None	replace
366	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
367	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
368	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
369	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
370	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	122	1	add
371	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	122	1	add
372	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
373	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
374	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	122	None	add
375	[BUG]  [BUGGY]  if(a  <  maximumIterations)  {  numIterations++;  int  numIterations++;  }  [CE]  ';'  expected  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  maximumIterations)  {  numIterations++;  int  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  maximumIterations)  {  numIterations++;  int  numIterations++;  }	          numIterations++;    int    numIterations++;    	non-compiled	[CE]  ';'  expected	91	None	replace
376	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [CE]  ';'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }	          numIterations++;    int    numIterations++;    	non-compiled	[CE]  ';'  expected	91	None	replace
377	[BUG]  [BUGGY]  int  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(a  -  1.0,  lowerBound);	  numIterations    =    Math.min(lowerBound    -    1.0,    a);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	130	None	replace
378	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	48	1	add
379	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	48	1	add
380	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	48	None	add
381	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  lowestBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  lowestBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	48	None	add
382	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  bottomBound);  [CE]  cannot  find  symbol  bottomBound  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  bottomBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  bottomBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  bottomBound	48	None	add
383	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
384	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
385	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
386	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
387	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.min(a  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
388	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.min(a  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
389	[BUG]  [BUGGY]  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.max(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
390	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.max(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	37	1	add
391	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
392	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
393	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
394	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
395	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	97	1	add
396	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	97	1	add
397	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
398	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
399	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  /  1.0,  lowerBound);	  a    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	111	1	replace
400	[BUG]  [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  /  1.0,  lowerBound);	  a    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	111	1	replace
401	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  higherBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	26	None	replace
402	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
403	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
404	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
405	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
406	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(a  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
407	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(a  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(a  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
408	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a;  b  =  Math.min(b  +  1.0,  a);  [CE]  ')'  expected  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a;  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a;  b  =  Math.min(b  +  1.0,  a);	  timeout    	non-compiled	[CE]  ')'  expected	34	None	add
409	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
410	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
411	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
412	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
413	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
414	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
415	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  lowBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	73	None	replace
416	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  higherBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	73	None	replace
417	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	78	2	add
418	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	78	2	add
419	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
420	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
421	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	78	1	add
422	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	78	1	add
423	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	78	2	add
424	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(b  -  1.0,  upperBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	78	2	add
425	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
426	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
427	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  *  1.0,  upperBound);	  a    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	timeout	88	1	replace
428	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  *  1.0,  upperBound);	  a    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	timeout	88	1	replace
429	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  /  1.0,  lowerBound);	  a    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	88	2	replace
430	[BUG]  [BUGGY]  a  =  Math.min(a  /  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  /  1.0,  lowerBound);	  a    =    Math.min(a    *    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	88	2	replace
431	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(a,  upperBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
432	[BUG]  [BUGGY]  numIterations  +=  Math.min(a,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(a,  upperBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
433	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(a,  lowerBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
434	[BUG]  [BUGGY]  numIterations  +=  Math.min(a,  lowerBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(a,  lowerBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
435	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a,  maximumIterations);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
436	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  maximumIterations);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a,  maximumIterations);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
437	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
438	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
439	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	110	1	add
440	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	110	1	add
441	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	110	2	add
442	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	110	2	add
443	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
444	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
445	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	110	None	add
446	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(a,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
447	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  upperBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(a,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
448	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.min(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.min(a,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
449	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.min(a,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.min(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.min(a,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
450	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  int  numIterations  +=  Math.max(a,  upperBound);  [CE]  ';'  expected  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  int  numIterations  +=  Math.max(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a,    upperBound);    int  numIterations  +=  Math.max(a,  upperBound);	  timeout    	non-compiled	[CE]  ';'  expected	143	None	add
451	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(a,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
452	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  lowerBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(a,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
453	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a  -  1.0,  maximumIterations);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
454	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  maximumIterations);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a  -  1.0,  maximumIterations);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
455	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a  -  1.0,  lowerBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
456	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a  -  1.0,  lowerBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
457	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
458	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
459	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
460	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
461	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	1	add
462	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	1	add
463	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	1	add
464	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	1	add
465	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
466	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
467	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
468	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
469	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
470	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
471	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
472	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
473	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
474	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	9	1	add
475	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowBound);  b  =  Math.min(a  -  1.0,  lowerBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	9	None	add
476	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
477	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
478	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
479	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
480	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
481	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
482	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	60	1	add
483	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	60	1	add
484	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.min(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	60	None	add
485	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  =  1;	  numIterations    =    0;    timeout    	compilable	timeout	105	1	replace
486	[BUG]  [BUGGY]  numIterations  =  1;  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  1;	  numIterations    =    0;    timeout    	compilable	timeout	105	1	replace
487	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  -1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  =  -1;	  numIterations    =    0;    timeout    	compilable	timeout	105	1	replace
488	[BUG]  [BUGGY]  numIterations  =  -1;  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  -1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  -1;	  numIterations    =    0;    timeout    	compilable	timeout	105	1	replace
489	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
490	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
491	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
492	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
493	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(upperBound  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(upperBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	120	2	add
494	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(upperBound  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(upperBound  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(upperBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	120	2	add
495	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	120	1	add
496	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	120	1	add
497	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(higherBound  -  1.0,  upperBound);  [CE]  cannot  find  symbol  higherBound  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(higherBound  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(higherBound  -  1.0,  upperBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	120	None	add
498	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
499	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
500	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	4	2	add
501	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	4	2	add
502	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
503	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
504	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
505	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	4	2	add
506	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	4	2	add
507	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	4	2	add
508	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
509	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
510	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
511	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
512	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
513	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
514	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	99	None	add
515	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	67	1	add
516	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	67	1	add
517	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	67	2	add
518	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	67	2	add
519	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	67	2	add
520	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	67	2	add
521	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	67	None	add
522	[BUG]  [BUGGY]  int  numIterations  =  0;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  0;	  int    numIterations++;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	30	None	replace
523	[BUG]  [BUGGY]  boolean  numIterations++;  [CE]  ';'  expected  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  boolean  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	boolean  numIterations++;	  int    numIterations++;    	non-compiled	[CE]  ';'  expected	30	None	replace
524	[BUG]  [BUGGY]  double  numIterations++;  [CE]  ';'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  double  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	double  numIterations++;	  int    numIterations++;    	non-compiled	[CE]  ';'  expected	30	None	replace
525	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  +  1.0,  upperBound);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
526	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  maximumIterations);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
527	[BUG]  [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(a  +  1.0,  lowerBound);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
528	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  +  1.0,  maximumIterations);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
529	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
530	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
531	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
532	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	52	2	add
533	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
534	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
535	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
536	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
537	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	123	2	replace
538	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	123	2	replace
539	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
540	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
541	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
542	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
543	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
544	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
545	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
546	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(a  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
547	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  int  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [CE]  ';'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  int  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.min(a    -    1.0,    upperBound);    int  numIterations  +=  Math.min(a  -  1.0,  upperBound);	  timeout    	non-compiled	[CE]  ';'  expected	141	None	add
548	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
549	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
550	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
551	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
552	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	65	2	add
553	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	65	2	add
554	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
555	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
556	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	65	None	add
557	[BUG]  [BUGGY]  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
558	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	65	1	add
559	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  upperBound  +  1.0);	  numIterations    =    Math.max(initial    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	128	None	replace
560	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
561	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
562	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
563	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
564	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
565	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
566	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	71	None	add
567	[BUG]  [BUGGY]  initMajorBounds(fa,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMajorBounds(fa,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMajorBounds(fa,  initial,  upperBound);	          numIterations++;    initMajorBounds(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
568	[BUG]  [BUGGY]  numIterations++;  initMajorBounds(fa,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  initMajorBounds(fa,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  initMajorBounds(fa,  initial,  upperBound);	          numIterations++;    initMajorBounds(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
569	[BUG]  [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMajorBounds(a,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMajorBounds(a,  lowerBound,  upperBound);	          numIterations++;    initMajorBounds(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
570	[BUG]  [BUGGY]  initMajorBounds(fa,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMajorBounds(fa,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMajorBounds(fa,  lowerBound,  upperBound);	          numIterations++;    initMajorBounds(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
571	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
572	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
573	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
574	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  upperBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
575	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(upperBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(upperBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
576	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(upperBound  -  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(upperBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(upperBound  -  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	114	2	add
577	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	114	None	add
578	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  lowestBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  lowestBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	114	None	add
579	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
580	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
581	[BUG]  [BUGGY]  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
582	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
583	[BUG]  [BUGGY]  timeout  [FE]                            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
584	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
585	[BUG]  [BUGGY]  timeout  [FE]                              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
586	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
587	[BUG]  [BUGGY]  timeout  [FE]                                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
588	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
589	[BUG]  [BUGGY]  initMajorBounds(a,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMajorBounds(a,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMajorBounds(a,  initial,  upperBound);	          numIterations++;    initMajorBounds(a,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
590	[BUG]  [BUGGY]  numIterations++;  initMajorBounds(a,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  initMajorBounds(a,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  initMajorBounds(a,  initial,  upperBound);	          numIterations++;    initMajorBounds(a,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
591	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  0.0,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	51	2	replace
592	[BUG]  [BUGGY]  b  =  Math.min(a  -  0.0,  lowerBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  0.0,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	51	2	replace
593	[BUG]  [BUGGY]  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.5,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  0.5,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	51	2	replace
594	[BUG]  [BUGGY]  b  =  Math.min(a  -  0.5,  lowerBound);  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.5,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  0.5,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	51	2	replace
595	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	21	2	replace
596	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	21	2	replace
597	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
598	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
599	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
600	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
601	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	62	1	add
602	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	62	1	add
603	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
604	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
605	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
606	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	62	1	add
607	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	62	1	add
608	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	62	1	add
609	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  -  1.0,  upperBound);	  numIterations    =    Math.min(initial    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
610	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  -  1.0,  lowerBound  +  1.0);	  numIterations    =    Math.min(initial    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
611	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  fb);  [CE]  variable  fb  might  not  have  been  initialized  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  fb);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  -  1.0,  fb);	  b    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  fb  might  not  have  been  initialized	168	None	replace
612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  -  1.0,  maximumIterations);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  AssertionFailedError  	168	1	replace
613	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  maximumIterations);  [FE]  AssertionFailedError  [FE]      MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  -  1.0,  maximumIterations);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  AssertionFailedError  	168	1	replace
614	[BUG]  [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(a  +  1.0,  upperBound);	          numIterations++;    int    numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	150	None	replace
615	[BUG]  [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(a  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(a  +  1.0,  maximumIterations);	          numIterations++;    int    numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	150	None	replace
616	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations,  fb);  [CE]  no  suitable  method  found  for  max(double,int,double)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations,  fb);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  +  1.0,  maximumIterations,  fb);	  numIterations    =    Math.max(a    +    1.0,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,int,double)	95	None	replace
617	[BUG]  [BUGGY]  numIterations  +=  a  *  fb;  [CE]  variable  fb  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a  *  fb;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a  *  fb;	  numIterations    +=    a;    timeout    	non-compiled	[CE]  variable  fb  might  not  have  been  initialized	33	None	replace
618	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a  +  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  a  +  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
619	[BUG]  [BUGGY]  numIterations  +=  a  +  1;  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a  +  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a  +  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
620	[BUG]  [BUGGY]  numIterations  +=  fb;  [CE]  variable  fb  might  not  have  been  initialized  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  fb;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  fb;	  numIterations    +=    a;    timeout    	non-compiled	[CE]  variable  fb  might  not  have  been  initialized	33	None	replace
621	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a  -  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  a  -  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
622	[BUG]  [BUGGY]  numIterations  +=  a  -  1;  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a  -  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a  -  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
623	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	23	2	replace
624	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	23	2	replace
625	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
626	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
627	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
628	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
629	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
630	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
631	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
632	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
633	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  higherBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	69	None	add
634	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
635	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
636	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
637	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
638	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
639	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
640	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
641	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	58	2	add
642	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
643	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
644	[BUG]  [BUGGY]  int  numIterations  =  a.numIterations();  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  a.numIterations();  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  a.numIterations();	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	92	None	replace
645	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a,  upperBound);	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	92	None	replace
646	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  2.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  /  2.0,  b);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
647	[BUG]  [BUGGY]  b  =  Math.min(a  /  2.0,  b);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  2.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  /  2.0,  b);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
648	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  numIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  a  +  numIterations);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
649	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  numIterations);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  numIterations);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  a  +  numIterations);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
650	[BUG]  [BUGGY]  b  =  Math.min(a  /  2.0);  [CE]  no  suitable  method  found  for  min(double)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  2.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  /  2.0);	  b    =    Math.min(b    /    2.0,    a);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double)	164	None	replace
651	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  /  1.0,  lowerBound);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	68	1	replace
652	[BUG]  [BUGGY]  b  =  Math.max(a  /  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  /  1.0,  lowerBound);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	68	1	replace
653	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  +  1.0,  lowBound);	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  lowBound	64	None	replace
654	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  +  1.0,  higherBound);	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	64	None	replace
655	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	147	None	replace
656	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  initial);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  initial);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0,  initial);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	147	None	replace
657	[BUG]  [BUGGY]  int  numIterations  =  Math.min(a  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(a  -  1.0,  upperBound);	          numIterations++;    int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	148	None	replace
658	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	54	2	add
659	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	54	2	add
660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	54	2	add
661	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	54	2	add
662	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	54	1	add
663	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    a  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	timeout	54	1	add
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	54	2	add
665	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  AssertionFailedError  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  AssertionFailedError  	54	2	add
666	[BUG]  [BUGGY]  numIterations  +=  a.length  -  1;  [CE]  double  cannot  be  dereferenced  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a.length  -  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a.length  -  1;	  numIterations    +=    a.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
667	[BUG]  [BUGGY]  numIterations  +=  a,  fb.length;  [CE]  ';'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a,  fb.length;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a,  fb.length;	  numIterations    +=    a.length;    	non-compiled	[CE]  ';'  expected	31	None	replace
668	[BUG]  [BUGGY]  numIterations  +=  a.length  *  fb.length;  [CE]  double  cannot  be  dereferenced  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a.length  *  fb.length;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a.length  *  fb.length;	  numIterations    +=    a.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
669	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  numIterations  =  0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    =    0;    numIterations  =  0;	  timeout    	compilable	  [FE]  MathException  	104	1	add
670	[BUG]  [BUGGY]  numIterations  =  0;  numIterations  =  0;  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  numIterations  =  0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    =    0;    numIterations  =  0;	  timeout    	compilable	  [FE]  MathException  	104	1	add
671	[BUG]  [BUGGY]  numIterations  =  0;  int  numIterations  =  0;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  int  numIterations  =  0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    =    0;    int  numIterations  =  0;	  timeout    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	104	None	add
672	[BUG]  [BUGGY]  numIterations  =  0;  double  numIterations  =  0;  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  double  numIterations  =  0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    =    0;    double  numIterations  =  0;	  timeout    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	104	None	add
673	[BUG]  [BUGGY]  numIterations  =  0;  numIterations  =  0.0;  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  numIterations  =  0.0;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    =    0;    numIterations  =  0.0;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	104	None	add
674	[BUG]  [BUGGY]  int  b  =  Math.min(b  +  1.0,  a);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  b  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    int    b    =    Math.min(b    +    1.0,    a);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	166	None	replace
675	[BUG]  [BUGGY]  a  =  Math.min(b  +  1.0,  a);  int  b  =  Math.min(b  +  1.0,  a);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  a);  int  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(b  +  1.0,  a);  int  b  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    int    b    =    Math.min(b    +    1.0,    a);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	166	None	replace
676	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
677	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
678	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
679	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
680	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  0.5,  b);	  b    =    Math.min(a    +    1.0,    b);    timeout    	compilable	timeout	77	1	replace
681	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  b);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  0.5,  b);	  b    =    Math.min(a    +    1.0,    b);    timeout    	compilable	timeout	77	1	replace
682	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	85	2	add
683	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	85	2	add
684	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	85	2	add
685	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	85	2	add
686	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
687	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
688	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
689	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
690	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
691	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	85	1	add
692	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  /  1.0,  upperBound);	  b    =    Math.min(a    *    1.0,    upperBound);    timeout    	compilable	timeout	155	1	replace
693	[BUG]  [BUGGY]  b  =  Math.min(a  /  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  /  1.0,  upperBound);	  b    =    Math.min(a    *    1.0,    upperBound);    timeout    	compilable	timeout	155	1	replace
694	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  b);	  b    =    Math.min(b    -    1.0,    a);    timeout    	compilable	timeout	117	1	replace
695	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  b);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  b);	  b    =    Math.min(b    -    1.0,    a);    timeout    	compilable	timeout	117	1	replace
696	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a,  maximumIterations);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a,  maximumIterations);	          numIterations++;    numIterations++;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	90	None	replace
697	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	35	1	replace
698	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	35	1	replace
699	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
700	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
701	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	  	compilable	timeout	11	1	add
702	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	  	compilable	timeout	11	1	add
703	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
704	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
705	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
706	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	11	2	add
707	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowBound);  a  =  Math.min(b  -  1.0,  lowerBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	11	None	add
708	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound  +  1);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  upperBound  +  1);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
709	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound  +  1);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound  +  1);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  upperBound  +  1);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
710	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  0.0,  upperBound);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
711	[BUG]  [BUGGY]  b  =  Math.min(a  -  0.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  0.0,  upperBound);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
712	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    upperBound);    	compilable	timeout	25	1	replace
713	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    upperBound);    	compilable	timeout	25	1	replace
714	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    upperBound);    	compilable	timeout	25	1	replace
715	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    upperBound);    	compilable	timeout	25	1	replace
716	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a);	  timeout    	compilable	timeout	163	1	add
717	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a);	  timeout    	compilable	timeout	163	1	add
718	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a));  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a));	  timeout    	non-compiled	[CE]  ';'  expected	163	None	add
719	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a)  [CE]  ';'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a)	  timeout    	non-compiled	[CE]  ';'  expected	163	None	add
720	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  a  =  Math.min(b  /  2.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    /    2.0,    a);    a  =  Math.min(b  /  2.0,  a);	  timeout    	compilable	timeout	163	1	add
721	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  a  =  Math.min(b  /  2.0,  a);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  a  =  Math.min(b  /  2.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    a  =  Math.min(b  /  2.0,  a);	  timeout    	compilable	timeout	163	1	add
722	[BUG]  [BUGGY]  initializeMajorBounds(fa,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initializeMajorBounds(fa,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initializeMajorBounds(fa,  lowerBound,  upperBound);	          numIterations++;    initMajorBounds(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
723	[BUG]  [BUGGY]  initializeMajorBounds(a,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initializeMajorBounds(a,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initializeMajorBounds(a,  lowerBound,  upperBound);	          numIterations++;    initMajorBounds(a,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
724	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations  =  Math.min(a  +  1.0,  upperBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	89	None	add
725	[BUG]  [BUGGY]          numIterations++;    numIterations++;  init();  numIterations++;  numIterations++;  [CE]  cannot  find  symbol  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  init();  numIterations++;  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    init();  numIterations++;  numIterations++;	  	non-compiled	[CE]  cannot  find  symbol	89	None	add
726	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations  =  Math.min(a  +  1.0,  lowerBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	89	None	add
727	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  +  1.0,  maximumIterations);	  numIterations    =    Math.max(a    +    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
728	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	6	1	add
729	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	6	1	add
730	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
731	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	161	2	add
732	[BUG]  [BUGGY]  numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(numIterations  -  1.0,  lowerBound);	  numIterations    =    Math.max(initial    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	106	None	replace
733	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  /  1.0,  lowerBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
734	[BUG]  [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound  +  1.0);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  /  1.0,  lowerBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
735	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
736	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
737	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
738	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	69	1	add
739	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
740	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	123	1	replace
741	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.51,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.51,  upperBound);	  timeout    	compilable	timeout	81	1	add
742	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.51,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.51,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.51,  upperBound);	  timeout    	compilable	timeout	81	1	add
743	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
744	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
745	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	99	1	add
746	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	99	1	add
747	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0),  upperBound);  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0),  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0),  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.0),    upperBound);    	non-compiled	[CE]  ';'  expected	45	None	replace
748	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0),  upperBound);  [CE]  ';'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0),  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0),  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.0),    upperBound);    	non-compiled	[CE]  ';'  expected	45	None	replace
749	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  higherBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  higherBound	112	None	add
750	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  a  =  Math.min(lowerBound  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    a  =  Math.min(lowerBound  +  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	112	None	add
751	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  a  +  1.0);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  a  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  a  +  1.0);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	147	None	replace
752	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound  +  1.0);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	147	None	replace
753	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  +  1.0,  b);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
754	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  b);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  +  1.0,  b);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
755	[BUG]  [BUGGY]  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
756	[BUG]  [BUGGY]  a  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
757	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound,  upperBound);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	1	None	replace
758	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  lowerBound,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	1	None	replace
759	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  initial,  lowerBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  initial,  lowerBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  initial,  lowerBound,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	1	None	replace
760	[BUG]  [BUGGY]  numIterations  +=  a;  numIterations  +=  a.;  [CE]  <identifier>  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a;  numIterations  +=  a.;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    a;    numIterations  +=  a.;	  timeout    	non-compiled	[CE]  <identifier>  expected	32	None	add
761	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  /  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a  /  1.0,  upperBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
762	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  /  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  /  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a  /  1.0,  upperBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
763	[BUG]  [BUGGY]  numIterations  +=  fa;  [CE]  variable  fa  might  not  have  been  initialized  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  fa;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  fa;	  numIterations    +=    a;    timeout    	non-compiled	[CE]  variable  fa  might  not  have  been  initialized	33	None	replace
764	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
765	[BUG]  [BUGGY]  numIterations  +=  1;  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  1;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  1;	  numIterations    +=    a;    timeout    	compilable	timeout	33	1	replace
766	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  +  1.0,  a);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(lowerBound  +  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  +  1.0,  a);	  numIterations    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	96	None	replace
767	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	27	2	add
768	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	27	2	add
769	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	118	2	add
770	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [FE]  MathRuntimeException$4  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	118	2	add
771	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
772	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(b  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  numIterations  +=  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.min(a    -    1.0,    upperBound);    numIterations  +=  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	141	1	add
773	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
774	[BUG]  [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
775	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(lowerBound  >  0.0)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
776	[BUG]  [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(lowerBound  >  0.0)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
777	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  0.5,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  0.5,  upperBound);	  b    =    Math.min(a    +    0.5,    upperBound);    timeout    	compilable	timeout	82	1	replace
778	[BUG]  [BUGGY]  b  =  Math.min(a  *  0.5,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  0.5,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  0.5,  upperBound);	  b    =    Math.min(a    +    0.5,    upperBound);    timeout    	compilable	timeout	82	1	replace
779	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a;  a  =  Math.min(b  +  1.0,  a);  [CE]  ')'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a;  a  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        a    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a;  a  =  Math.min(b  +  1.0,  a);	  timeout    	non-compiled	[CE]  ')'  expected	37	None	add
780	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  initial);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  initial);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  -  1.0,  initial);	  numIterations    =    Math.min(initial    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
781	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowestBound);    	compilable	timeout	57	1	replace
782	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowestBound);    	compilable	timeout	57	1	replace
783	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
784	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
785	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
786	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  upperBound);	  timeout    	compilable	  [FE]  MaxIterationsExceededException  	156	2	add
787	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  upperBound++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations++;  upperBound++;	          numIterations++;    nIterations++;    	compilable	timeout	93	1	replace
788	[BUG]  [BUGGY]  numIterations++;  upperBound++;  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  upperBound++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  upperBound++;	          numIterations++;    nIterations++;    	compilable	timeout	93	1	replace
789	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  lowerBound++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations++;  lowerBound++;	          numIterations++;    nIterations++;    	compilable	  [FE]  MathException  	93	2	replace
790	[BUG]  [BUGGY]  numIterations++;  lowerBound++;  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations++;  lowerBound++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations++;  lowerBound++;	          numIterations++;    nIterations++;    	compilable	  [FE]  MathException  	93	2	replace
791	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	5	1	replace
792	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	5	1	replace
793	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(lowerBound  -  1.0,  lowerBound);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	68	2	replace
794	[BUG]  [BUGGY]  b  =  Math.max(lowerBound  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(lowerBound  -  1.0,  lowerBound);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	  [FE]  MathException  	68	2	replace
795	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	60	1	add
796	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	timeout	60	1	add
797	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  1.0,  b);	  b    =    Math.min(a    +    1.0,    b);    timeout    	compilable	timeout	77	1	replace
798	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  b);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  1.0,  b);	  b    =    Math.min(a    +    1.0,    b);    timeout    	compilable	timeout	77	1	replace
799	[BUG]  [BUGGY]  initMatrix(fa,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(fa,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(fa,  lowerBound,  upperBound);	          numIterations++;    initMatrix(fa,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
800	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,double)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  upperBound);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double)	80	None	replace
801	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  upperBound);  [CE]  no  suitable  method  found  for  max(double,double,int,double)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  upperBound);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int,double)	80	None	replace
802	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  initial,  numIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  initial,  numIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  initial,  numIterations);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	80	None	replace
803	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
804	[BUG]  [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(initial  <  lowerBound)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
805	[BUG]  [BUGGY]  int  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(lowerBound  -  1.0,  lowerBound);	          numIterations++;    int    numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	149	None	replace
806	[BUG]  [BUGGY]  int  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);	          numIterations++;    int    numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	149	None	replace
807	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(lowerBound  -  1.0,  upperBound);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
808	[BUG]  [BUGGY]  numIterations  +=  Math.min(lowerBound  -  1.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(lowerBound  -  1.0,  upperBound);	  numIterations    +=    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	142	1	replace
809	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  upperBound);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
810	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  upperBound);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
811	[BUG]  [BUGGY]  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  lowerBound);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	  [FE]  MathException  	164	2	replace
812	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound);  [FE]  MathException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  lowerBound);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	  [FE]  MathException  	164	2	replace
813	[BUG]  [BUGGY]  [FE]  MathException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  lowerBound  +  1.0);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	  [FE]  MathException  	164	2	replace
814	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  lowerBound  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  lowerBound  +  1.0);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	  [FE]  MathException  	164	2	replace
815	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	16	1	replace
816	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);	  a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	16	1	replace
817	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
818	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
819	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
820	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.max(a    +    1.0,    lowerBound);    	compilable	timeout	119	1	replace
821	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	54	2	add
822	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	54	2	add
823	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  /  1.0,  a);  [CE]  possible  loss  of  precision  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  /  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  /  1.0,  a);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
824	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  2.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  /  2.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  2.0,  upperBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
825	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
826	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
827	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
828	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
829	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(lowerBound  >  0.0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
830	[BUG]  [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(lowerBound  >  0.0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(lowerBound  >  0.0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
831	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  *  1.0,  lowerBound);	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    *    1.0,    lowerBound);    	compilable	timeout	153	1	replace
832	[BUG]  [BUGGY]  a  =  Math.max(a  *  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  *  1.0,  lowerBound);	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    *    1.0,    lowerBound);    	compilable	timeout	153	1	replace
833	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	24	2	add
834	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathRuntimeException$4  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathRuntimeException$4  	24	2	add
835	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).  [CE]  double  cannot  be  dereferenced  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a).	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	163	None	add
836	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
837	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
838	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	100	2	replace
839	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	100	2	replace
840	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
841	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	20	2	add
842	[BUG]  [BUGGY]  numIterations  =  0;  numIterations  =  0.;  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0;  numIterations  =  0.;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    =    0;    numIterations  =  0.;	  timeout    	non-compiled	[CE]  possible  loss  of  precision	104	None	add
843	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	52	None	add
844	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	timeout	114	1	add
845	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  b  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    b  =  Math.min(lowerBound  -  1.0,  lowerBound);	  timeout    	compilable	timeout	114	1	add
846	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  bottomBound);  [CE]  cannot  find  symbol  bottomBound  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(lowerBound  -  1.0,  bottomBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    a  =  Math.min(lowerBound  -  1.0,  bottomBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  bottomBound	114	None	add
847	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	46	1	add
848	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	46	1	add
849	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	72	1	replace
850	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	72	1	replace
851	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowestBound  +  1.0);  [CE]  cannot  find  symbol  lowestBound  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  -  1.0,  lowestBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  -  1.0,  lowestBound  +  1.0);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	15	None	add
852	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  higherBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  higherBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  +  1.0,  higherBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  +  1.0,  higherBound);  a  =  Math.min(a  +  1.0,  lowerBound);	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  higherBound	64	None	replace
853	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  higherBound);  [CE]  cannot  find  symbol  higherBound  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  higherBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  higherBound);	  	non-compiled	[CE]  cannot  find  symbol  higherBound	108	None	add
854	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	22	1	add
855	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	timeout	22	1	add
856	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(initial,  upperBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
857	[BUG]  [BUGGY]  numIterations  +=  Math.min(initial,  upperBound);  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.min(initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(initial,  upperBound);	  numIterations    +=    Math.max(a,    upperBound);    timeout    	compilable	timeout	144	1	replace
858	[BUG]  [BUGGY]  int  numIterations  =  Math.max(lowerBound  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(lowerBound  +  1.0,  lowerBound);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
859	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.0,    lowerBound);    timeout    	compilable	timeout	43	1	replace
860	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    b    =    Math.min(b    -    1.0,    lowerBound);    timeout    	compilable	timeout	43	1	replace
861	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  0.0,  upperBound);	  b    =    Math.min(a    +    0.0,    upperBound);    timeout    	compilable	timeout	84	1	replace
862	[BUG]  [BUGGY]  b  =  Math.min(a  *  0.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  0.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  0.0,  upperBound);	  b    =    Math.min(a    +    0.0,    upperBound);    timeout    	compilable	timeout	84	1	replace
863	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
864	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    upperBound);    	compilable	timeout	61	1	replace
865	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations,  upperBound);  [CE]  possible  loss  of  precision  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(numIterations,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(numIterations,  upperBound);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
866	[BUG]  [BUGGY]  numIterations  =  Math.max(initial,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial,  upperBound);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
867	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  lowerBound);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  lowerBound);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
868	[BUG]  [BUGGY]  numIterations  +=  a.length  *  numIterations;  [CE]  double  cannot  be  dereferenced  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  a.length  *  numIterations;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a.length  *  numIterations;	  numIterations    +=    a.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
869	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	35	1	replace
870	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	35	1	replace
871	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  upperBound);	  numIterations    =    Math.max(lowerBound    -    1.0,    a);    	non-compiled	[CE]  possible  loss  of  precision	107	None	replace
872	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	120	None	add
873	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0),  upperBound);  [CE]  ';'  expected  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.0),  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.0),  upperBound);	  timeout    	non-compiled	[CE]  ';'  expected	120	None	add
874	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	  	compilable	timeout	11	1	add
875	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(b    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	  	compilable	timeout	11	1	add
876	[BUG]  [BUGGY]  numIterations  =  0  -  lowerBound;  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  0  -  lowerBound;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  0  -  lowerBound;	  numIterations    =    0;    timeout    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
877	[BUG]  [BUGGY]  numIterations  =  Math.max(maximumIterations  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(maximumIterations  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(maximumIterations  -  1.0,  lowerBound);	  numIterations    =    Math.max(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
878	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
879	[BUG]  [BUGGY]  numIterations  =  Math.min(maximumIterations  -  1.0,  a);  [CE]  possible  loss  of  precision  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(maximumIterations  -  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(maximumIterations  -  1.0,  a);	  numIterations    =    Math.min(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
880	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  -  1.0,  maximumIterations);	  numIterations    =    Math.min(a    -    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
881	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  b  =  Math.min(a  +  0.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.0,    upperBound);    b  =  Math.min(a  +  0.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	83	None	add
882	[BUG]  [BUGGY]  initMatrix(lowerBound,  initial,  upperBound);  [CE]  cannot  find  symbol  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  initMatrix(lowerBound,  initial,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	initMatrix(lowerBound,  initial,  upperBound);	          numIterations++;    initMatrix(initial,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
883	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
884	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
885	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
886	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
887	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
888	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
889	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
890	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
891	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  B  =  Math.max(a  -  1.0,  upperBound);  [CE]  cannot  find  symbol  B  [FE]      MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  B  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    B  =  Math.max(a  -  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  B	167	None	add
892	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
893	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
894	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
895	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(b  -  1.0,  lowerBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
896	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0,  topBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	124	None	add
897	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a));  [CE]  ';'  expected  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(b  +  1.0,  a));	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a));    	non-compiled	[CE]  ';'  expected	36	None	replace
898	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound));  [CE]  ';'  expected  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  upperBound));	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a));    	non-compiled	[CE]  ';'  expected	36	None	replace
899	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  a));  [CE]  ';'  expected  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  a));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  a));	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a));    	non-compiled	[CE]  ';'  expected	36	None	replace
900	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  a));  [CE]  ';'  expected  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  a));  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  a));	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a));    	non-compiled	[CE]  ';'  expected	36	None	replace
901	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
902	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	58	2	add
903	[BUG]  [BUGGY]  char  numIterations++;  [CE]  ';'  expected  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  char  numIterations++;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	char  numIterations++;	  int    numIterations++;    	non-compiled	[CE]  ';'  expected	30	None	replace
904	[BUG]  [BUGGY]  int  numIterations  =  a.doubleValue();  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  a.doubleValue();  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  a.doubleValue();	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	92	None	replace
905	[BUG]  [BUGGY]  n  =  Math.max(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  n  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  n  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	n  =  Math.max(a  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	non-compiled	[CE]  cannot  find  symbol  n	98	None	replace
906	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  upperBound,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	29	None	replace
907	[BUG]  [BUGGY]  numIterations  =  Math.max(maximumIterations  -  1.0,  upperBound,  numIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(maximumIterations  -  1.0,  upperBound,  numIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(maximumIterations  -  1.0,  upperBound,  numIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	29	None	replace
908	[BUG]  [BUGGY]  int  numIterations  =  Math.min(lowerBound  -  1.0,  a);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(lowerBound  -  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(lowerBound  -  1.0,  a);	  numIterations    =    Math.min(lowerBound    -    1.0,    a);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	130	None	replace
909	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
910	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	110	1	add
911	[BUG]  [BUGGY]  int  numIterations  =  Math.min(lowerBound  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(lowerBound  +  1.0,  lowerBound);	          numIterations++;    int    numIterations    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	151	None	replace
912	[BUG]  [BUGGY]  int  numIterations  =  Math.min(lowerBound  +  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.min(lowerBound  +  1.0,  upperBound);	          numIterations++;    int    numIterations    =    Math.min(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	151	None	replace
913	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  a  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    a);    a  =  Math.min(b  -  1.0,  a);	  timeout    	compilable	timeout	116	1	add
914	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  a  =  Math.min(b  -  1.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  a  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    a  =  Math.min(b  -  1.0,  a);	  timeout    	compilable	timeout	116	1	add
915	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
916	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
917	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound  +  1.0);	  numIterations    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
918	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  initial);  a  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowBound);    	compilable	timeout	26	1	replace
919	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  a  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  initial);  a  =  Math.max(a  -  1.0,  lowerBound);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowBound);    	compilable	timeout	26	1	replace
920	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a)  >>  ';'  [CE]  ';'  expected  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a)  >>  ';'  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a)  >>  ';'	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a)    	non-compiled	[CE]  ';'  expected	39	None	replace
921	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(b,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(b,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
922	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(b,  upperBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  numIterations  +=  Math.max(b,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations    +=    Math.max(a,    upperBound);    numIterations  +=  Math.max(b,  upperBound);	  timeout    	compilable	  [FE]  MathException  	143	1	add
923	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
924	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.max(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
925	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
926	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
927	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
928	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
929	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	157	2	replace
930	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  [FE]  MaxIterationsExceededException  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	157	2	replace
931	[BUG]  [BUGGY]  [FE]  MathException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	157	2	replace
932	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [FE]  MathException  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	157	2	replace
933	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.max(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
934	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.max(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.max(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	34	1	add
935	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	timeout	139	1	add
936	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  timeout    	compilable	timeout	139	1	add
937	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	152	2	add
938	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  upperBound);	  	compilable	  [FE]  MathException  	152	2	add
939	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  buf  =  Math.min(a  +  1.0,  upperBound);  [CE]  cannot  find  symbol  buf  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  lowerBound);  buf  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  lowerBound);  buf  =  Math.min(a  +  1.0,  upperBound);	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowBound);    	non-compiled	[CE]  cannot  find  symbol  buf	73	None	replace
940	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
941	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	74	1	add
942	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }  [CE]  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  numIterations++;  int  numIterations++;  }  else  {  throw  new  ConvergenceException( " ");  }	          numIterations++;    int    numIterations++;    	non-compiled	[CE]  	91	None	replace
943	[BUG]  [BUGGY]  numIterations  =  Math.min(numIterations  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(numIterations  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(numIterations  +  1.0,  upperBound);	  numIterations    =    Math.min(a    +    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	103	None	replace
944	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
945	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
946	[BUG]  [BUGGY]  int  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(initial  -  1.0,  upperBound);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
947	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
948	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
949	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        b    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  upperBound);	  timeout    	compilable	timeout	9	1	add
950	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(initial  -  1.0,  upperBound);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	168	2	replace
951	[BUG]  [BUGGY]  b  =  Math.max(initial  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(initial  -  1.0,  upperBound);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	168	2	replace
952	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
953	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	20	2	add
954	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.01,  lowerBound);	  timeout    	compilable	timeout	48	1	add
955	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.01,  lowerBound);	  timeout    	compilable	timeout	48	1	add
956	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).doubleValue();  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a).doubleValue();	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	116	None	add
957	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).value(b);  [CE]  double  cannot  be  dereferenced  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  b  =  Math.min(b  -  1.0,  a).value(b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    b  =  Math.min(b  -  1.0,  a).value(b);	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	116	None	add
958	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  int  b  =  Math.min(b  -  1.0,  a);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  a);  int  b  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    a);    int  b  =  Math.min(b  -  1.0,  a);	  timeout    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	116	None	add
959	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
960	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
961	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  upperBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
962	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  upperBound);  }  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.min(lowerBound  +  1.0,  upperBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
963	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
964	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
965	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
966	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    +    1.0,    lowerBound);    if(lowerBound  >  1.0)  {  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  }	  timeout    	compilable	  [FE]  MathException  	112	2	add
967	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
968	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.min(a    +    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	60	2	add
969	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
970	[BUG]  [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
971	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
972	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(b    -    1.0,    lowerBound);    	compilable	timeout	12	1	replace
973	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.7,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.7,  upperBound);	  timeout    	compilable	timeout	81	1	add
974	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.7,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  b  =  Math.min(a  +  0.7,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    0.5,    upperBound);    b  =  Math.min(a  +  0.7,  upperBound);	  timeout    	compilable	timeout	81	1	add
975	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.01,  upperBound);	  timeout    	compilable	timeout	126	1	add
976	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.01,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  b  =  Math.min(initial  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(initial    +    1.0,    upperBound);    b  =  Math.min(initial  +  1.01,  upperBound);	  timeout    	compilable	timeout	126	1	add
977	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  /  2.0,  upperBound);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	168	2	replace
978	[BUG]  [BUGGY]  b  =  Math.max(a  /  2.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  /  2.0,  upperBound);	  b    =    Math.max(a    -    1.0,    upperBound);    	compilable	  [FE]  MaxIterationsExceededException  	168	2	replace
979	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	5	1	replace
980	[BUG]  [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	5	1	replace
981	[BUG]  [BUGGY]  int  b  =  Math.min(a  +  1.0,  b);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  b  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  b  =  Math.min(a  +  1.0,  b);	  b    =    Math.min(b    +    1.0,    a);    int    b    =    Math.min(b    +    1.0,    a);    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	166	None	replace
982	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
983	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.max(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	78	1	add
984	[BUG]  [BUGGY]  numIterations  =  a;  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  a;  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  a;	  numIterations    =    0;    timeout    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
985	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  initial);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowBound);    	compilable	timeout	26	1	replace
986	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  initial);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  initial);	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowBound);    	compilable	timeout	26	1	replace
987	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(b  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(b  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
988	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(b  *  1.0,  lowerBound);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.min(b  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    *    1.0,    lowerBound);    a  =  Math.min(b  *  1.0,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	87	2	add
989	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
990	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
991	[BUG]  [BUGGY]  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  numIterations++;  }	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
992	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  numIterations++;  }  timeout  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  numIterations++;  }	  a    =    Math.min(lowerBound    -    1.0,    lowerBound);    timeout    	compilable	timeout	115	1	replace
993	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	157	1	replace
994	[BUG]  [BUGGY]  if(numIterations  >  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	157	1	replace
995	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	157	1	replace
996	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.max(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	157	1	replace
997	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.01,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
998	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.01,  upperBound);  [FE]  MaxIterationsExceededException  [FE]    MaxIterationsExceededException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  b  =  Math.max(a  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    upperBound);    b  =  Math.max(a  -  1.01,  upperBound);	  	compilable	  [FE]  MaxIterationsExceededException  	167	2	add
999	[BUG]  [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowestBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        -        1.0,        upperBound);        b    =    Math.min(b    -    1.0,    lowerBound);    b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowestBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowestBound	42	None	add
1000	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	timeout	170	1	replace
1001	[BUG]  [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	timeout	170	1	replace
1002	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	  [FE]  MathException  	170	2	replace
1003	[BUG]  [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [FE]  MathException  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  throw  new  ConvergenceException( " ");  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	  [FE]  MathException  	170	2	replace
1004	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	timeout	170	1	replace
1005	[BUG]  [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  else  {  numIterations++;  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.01,    upperBound);    timeout    	compilable	timeout	170	1	replace
1006	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
1007	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	171	1	add
1008	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.1,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.1,  upperBound);	  timeout    	compilable	timeout	154	1	add
1009	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.1,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.1,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    *    1.0,    upperBound);    b  =  Math.min(a  *  1.1,  upperBound);	  timeout    	compilable	timeout	154	1	add
1010	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	55	1	replace
1011	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    upperBound);    	compilable	timeout	55	1	replace
1012	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  a);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  -  1.0,  a);	  numIterations    =    Math.min(lowerBound    -    1.0,    a);    	non-compiled	[CE]  possible  loss  of  precision	130	None	replace
1013	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
1014	[BUG]  [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	6	2	add
1015	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  initial);  [CE]  possible  loss  of  precision  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a,  initial);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  initial);	  numIterations    =    Math.max(a,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
1016	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  0);  [CE]  no  suitable  method  found  for  max(double,double,int,int)  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  0);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int,int)	80	None	replace
1017	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  fa);  [CE]  no  suitable  method  found  for  max(double,double,int,double)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  fa);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations,  fa);	  a    =    Math.max(a    -    1.0,    lowerBound,    numIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int,double)	80	None	replace
1018	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  /  2.0,  upperBound);	  b    =    Math.min(a    *    1.0,    upperBound);    timeout    	compilable	timeout	155	1	replace
1019	[BUG]  [BUGGY]  b  =  Math.min(a  /  2.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  /  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  /  2.0,  upperBound);	  b    =    Math.min(a    *    1.0,    upperBound);    timeout    	compilable	timeout	155	1	replace
1020	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);	  b    =    Math.min(lowerBound    +    1.0,    upperBound);    timeout    	compilable	timeout	125	1	replace
1021	[BUG]  [BUGGY]  b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  lowerBound  +  1.0,  upperBound);	  b    =    Math.min(lowerBound    +    1.0,    upperBound);    timeout    	compilable	timeout	125	1	replace
1022	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
1023	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    upperBound);    	compilable	timeout	7	1	replace
1024	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	162	1	replace
1025	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	162	1	replace
1026	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	162	1	replace
1027	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    -    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	162	1	replace
1028	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  2.0,  upperBound);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
1029	[BUG]  [BUGGY]  b  =  Math.min(a  -  2.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  2.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  2.0,  upperBound);	  b    =    Math.min(a    -    1.0,    upperBound);    timeout    	compilable	timeout	47	1	replace
1030	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  *  lowerBound);  [CE]  no  suitable  method  found  for  max(double)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a  *  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a  *  lowerBound);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	65	None	add
1031	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a,  lowerBound);	  timeout    	compilable	timeout	65	1	add
1032	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a,  lowerBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.max(a,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.max(a,  lowerBound);	  timeout    	compilable	timeout	65	1	add
1033	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  /  2.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a  /  2.0,  upperBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
1034	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  /  2.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  +=  Math.max(a  /  2.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a  /  2.0,  upperBound);	  numIterations    +=    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	146	1	replace
1035	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
1036	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	122	1	add
1037	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	122	None	add
1038	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
1039	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.max(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  timeout    	compilable	timeout	52	1	add
1040	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
1041	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	21	1	replace
1042	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  [CE]  ')'  expected  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }	  timeout    	non-compiled	[CE]  ')'  expected	114	None	add
1043	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [CE]  ')'  expected  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  -  1.0,  lowerBound);  }	  timeout    	non-compiled	[CE]  ')'  expected	114	None	add
1044	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  upperBound);  }  [CE]  ')'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  upperBound);  }	  timeout    	non-compiled	[CE]  ')'  expected	114	None	add
1045	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  lowerBound);  }  [CE]  ')'  expected  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(lowerBound    -    1.0,    lowerBound);    if(lowerBound  -  1.0,  lowerBound)  {  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  }  else  {  a  =  Math.max(a  +  1.0,  lowerBound);  }	  timeout    	non-compiled	[CE]  ')'  expected	114	None	add
1046	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  }  [CE]  cannot  find  symbol  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  }	          numIterations++;    initMajorBounds(a,    lowerBound,    upperBound);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1047	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
1048	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	97	1	add
1049	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	23	1	replace
1050	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	23	1	replace
1051	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	23	1	replace
1052	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.max(a    -    1.0,    lowerBound);    a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	23	1	replace
1053	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
1054	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	71	1	add
1055	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a  -  1.0)  [CE]  ';'  expected  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a  -  1.0)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a  -  1.0)	  b    =    Math.min(b    +    1.0,    a);    b    =    Math.min(b    +    1.0,    a)    	non-compiled	[CE]  ';'  expected	39	None	replace
1056	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
1057	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	69	1	add
1058	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  b  =  Math.min(lowerBound  +  1.0,  lowBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    lowerBound);    b  =  Math.min(lowerBound  +  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	108	None	add
1059	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
1060	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);  a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.max(a    -    1.0,    upperBound);    a  =  Math.min(a  *  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	24	2	add
1061	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
1062	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
1063	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
1064	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);	  timeout    	compilable	timeout	27	1	add
1065	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	59	1	replace
1066	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	59	1	replace
1067	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  <  0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	59	1	replace
1068	[BUG]  [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	59	1	replace
1069	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  2.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  /  2.0,  upperBound);	  a    =    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	79	1	replace
1070	[BUG]  [BUGGY]  a  =  Math.max(a  /  2.0,  upperBound);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  2.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  /  2.0,  upperBound);	  a    =    Math.max(a    -    1.0,    upperBound);    timeout    	compilable	timeout	79	1	replace
1071	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  <  0)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	70	1	replace
1072	[BUG]  [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	          b    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	70	1	replace
1073	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  numIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  numIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound,  numIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	29	None	replace
1074	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximalIterations);  [CE]  cannot  find  symbol  maximalIterations  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximalIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximalIterations);	  numIterations    =    Math.max(a    -    1.0,    upperBound,    maximumIterations);    	non-compiled	[CE]  cannot  find  symbol  maximalIterations	29	None	replace
1075	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	62	None	add
1076	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a)  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a)  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        a);        b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a)	  timeout    	non-compiled	[CE]  ';'  expected	34	None	add
1077	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.01,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	50	2	add
1078	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.01,  lowerBound);  [FE]  MathException  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.01,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.01,  lowerBound);	  timeout    	compilable	  [FE]  MathException  	50	2	add
1079	[BUG]  [BUGGY]  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
1080	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.min(a    *    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	74	1	add
1081	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  initial);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  initial);  b  =  Math.min(a  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    topBound);    	compilable	timeout	101	1	replace
1082	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  initial);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  initial);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  initial);  b  =  Math.min(a  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    topBound);    	compilable	timeout	101	1	replace
1083	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
1084	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.min(a    -    1.0,    lowerBound);    b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	10	1	replace
1085	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  int  b  =  Math.min(a  +  1.0,  b);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  int  b  =  Math.min(a  +  1.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    int  b  =  Math.min(a  +  1.0,  b);	  timeout    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	76	None	add
1086	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.01,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.01,  b);	  timeout    	compilable	timeout	76	1	add
1087	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.01,  b);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  +  1.0,  b);  b  =  Math.min(a  +  1.01,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    b);    b  =  Math.min(a  +  1.01,  b);	  timeout    	compilable	timeout	76	1	add
1088	[BUG]  [BUGGY]  if(numIterations  <  maximumIterations)  {  numIterations++;  nIterations++;  }  [CE]  cannot  find  symbol  nIterations  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  <  maximumIterations)  {  numIterations++;  nIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  <  maximumIterations)  {  numIterations++;  nIterations++;  }	          numIterations++;    nIterations++;    	non-compiled	[CE]  cannot  find  symbol  nIterations	93	None	replace
1089	[BUG]  [BUGGY]  if(numIterations  >  0)  {  numIterations++;  nIterations++;  }  [CE]  cannot  find  symbol  nIterations  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  0)  {  numIterations++;  nIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  0)  {  numIterations++;  nIterations++;  }	          numIterations++;    nIterations++;    	non-compiled	[CE]  cannot  find  symbol  nIterations	93	None	replace
1090	[BUG]  [BUGGY]  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  2.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  /  2.0,  lowerBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
1091	[BUG]  [BUGGY]  a  =  Math.max(a  /  2.0,  lowerBound  +  1.0);  timeout  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.max(a  /  2.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  /  2.0,  lowerBound  +  1.0);	  a    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    timeout    	compilable	timeout	140	1	replace
1092	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  <  0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	98	1	replace
1093	[BUG]  [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  <  0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  <  0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	98	1	replace
1094	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	1	add
1095	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    upperBound);    a  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	  [FE]  MathException  	13	1	add
1096	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
1097	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
1098	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
1099	[BUG]  [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.max(a        -        1.0,        lowerBound);        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	22	2	add
1100	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  +  1.0,  lowerBound,  upperBound);	  int    numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	165	None	replace
1101	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	67	1	add
1102	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	67	1	add
1103	[BUG]  [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [CE]  cannot  find  symbol  lowBound  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);  b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(b        +        1.0,        lowerBound);        b    =    Math.min(b    +    1.0,    upperBound);    b  =  Math.min(b  +  1.0,  lowBound);  b  =  Math.min(b  +  1.0,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	54	None	add
1104	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  [CE]  ';'  expected  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  ';'  expected	92	None	replace
1105	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  +  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }  [CE]  ';'  expected  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  +  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  +  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  ';'  expected	92	None	replace
1106	[BUG]  [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  -  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }  [CE]  ';'  expected  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  -  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  lowerBound)  {  numIterations++;  double  numIterations++;  }  else  {  a  =  Math.min(a  -  1.0,  upperBound);  fb  =  function.value(a);  numIterations++  ;  }	          numIterations++;    double    numIterations++;    	non-compiled	[CE]  ';'  expected	92	None	replace
1107	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).doubleValue();  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a).doubleValue();	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	163	None	add
1108	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  int  b  =  Math.min(b  /  2.0,  a);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  int  b  =  Math.min(b  /  2.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    int  b  =  Math.min(b  /  2.0,  a);	  timeout    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	163	None	add
1109	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).value(b);  [CE]  double  cannot  be  dereferenced  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a);  b  =  Math.min(b  /  2.0,  a).value(b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    /    2.0,    a);    b  =  Math.min(b  /  2.0,  a).value(b);	  timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	163	None	add
1110	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.01,  upperBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
1111	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.01,  upperBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  b  =  Math.min(lowerBound  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    -    1.0,    upperBound);    b  =  Math.min(lowerBound  -  1.01,  upperBound);	  timeout    	compilable	  [FE]  MathException  	120	2	add
1112	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  a  +  1.0);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
1113	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  1.0);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  /  2.0,  a  +  1.0);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  a  +  1.0);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
1114	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  2.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  /  2.0,  b);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
1115	[BUG]  [BUGGY]  b  =  Math.max(a  /  2.0,  b);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  /  2.0,  b);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  /  2.0,  b);	  b    =    Math.min(b    /    2.0,    a);    timeout    	compilable	timeout	164	1	replace
1116	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations  -  1);  [CE]  possible  loss  of  precision  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations  -  1);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  +  1.0,  maximumIterations  -  1);	  numIterations    =    Math.max(a    +    1.0,    maximumIterations);    	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
1117	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
1118	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
1119	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
1120	[BUG]  [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b        =        Math.min(a        +        1.0,        upperBound);        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	99	1	add
1121	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
1122	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	          a    =    Math.min(a    +    1.0,    lowerBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	63	1	replace
1123	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations  =  Math.max(a  -  1.0,  upperBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	89	None	add
1124	[BUG]  [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          numIterations++;    numIterations++;  int  numIterations  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                numIterations++;        numIterations++;    int  numIterations  =  Math.min(a  -  1.0,  upperBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	89	None	add
1125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.01,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	124	2	add
1126	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.01,  upperBound);  [FE]  AssertionFailedError  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.01,  upperBound);	  timeout    	compilable	  [FE]  AssertionFailedError  	124	2	add
1127	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0, "  upperBound);  [CE]  unclosed  string  literal  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  b  =  Math.min(lowerBound  +  1.0, "  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(lowerBound    +    1.0,    upperBound);    b  =  Math.min(lowerBound  +  1.0, "  upperBound);	  timeout    	non-compiled	[CE]  unclosed  string  literal	124	None	add
1128	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  2.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  2.0,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	51	1	replace
1129	[BUG]  [BUGGY]  b  =  Math.min(a  -  2.0,  lowerBound);  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  2.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  2.0,  lowerBound);	  b    =    Math.min(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	51	1	replace
1130	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
1131	[BUG]  [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                b        =        Math.min(a        +        1.0,        lowerBound);        b    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);  b  =  Math.max(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	156	1	add
1132	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);	  int    numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	158	None	replace
1133	[BUG]  [BUGGY]  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.01,  upperBound);	  timeout    	compilable	timeout	46	1	add
1134	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.01,  upperBound);  timeout  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  b  =  Math.min(a  -  1.01,  upperBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    -    1.0,    upperBound);    b  =  Math.min(a  -  1.01,  upperBound);	  timeout    	compilable	timeout	46	1	add
1135	[BUG]  [BUGGY]  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  +  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  +  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
1136	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  +  1.0,  lowerBound  +  1.0);  [FE]  MathException  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  a  =  Math.min(a  +  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a    =    Math.min(a    -    1.0,    lowerBound    +    1.0);    a  =  Math.min(a  +  1.0,  lowerBound  +  1.0);	  timeout    	compilable	  [FE]  MathException  	15	2	add
1137	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	68	1	replace
1138	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	  b    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	68	1	replace
1139	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	118	1	add
1140	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	timeout	118	1	add
1141	[BUG]  [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [CE]  cannot  find  symbol  lowBound  [FE]      MathException    [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]          a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	                a        =        Math.min(a        +        1.0,        lowerBound);        a    =    Math.max(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowBound);  a  =  Math.max(a  +  1.0,  lowerBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	118	None	add
1142	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  *  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  *  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowBound);    	compilable	  [FE]  MathException  	56	2	replace
1143	[BUG]  [BUGGY]  b  =  Math.min(b  *  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  b  =  Math.min(b  *  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  *  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);	  b    =    Math.min(b    +    1.0,    lowerBound);    b    =    Math.min(b    +    1.0,    lowBound);    	compilable	  [FE]  MathException  	56	2	replace
1144	[BUG]  [BUGGY]  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(b  -  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
1145	[BUG]  [BUGGY]  a  =  Math.min(b  -  1.0,  a);  timeout  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  a  =  Math.min(b  -  1.0,  a);  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(b  -  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    a    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	38	1	replace
1146	[BUG]  [BUGGY]  if(a  >  upperBound)  {  numIterations++;  int  numIterations++;  }  [CE]  ';'  expected  [FE]          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  upperBound)  {  numIterations++;  int  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  upperBound)  {  numIterations++;  int  numIterations++;  }	          numIterations++;    int    numIterations++;    	non-compiled	[CE]  ';'  expected	91	None	replace
1147	[BUG]  [BUGGY]  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
1148	[BUG]  [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  timeout  [FE]              MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
1149	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
1150	[BUG]  [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(a  >  0.0)  {  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  }  else  {  numIterations++;  }	  b    =    Math.min(a    +    1.0,    upperBound);    b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	100	1	replace
1151	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  a);  [CE]  possible  loss  of  precision  [FE]            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  a);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  +  1.0,  a);	  numIterations    =    Math.max(lowerBound    +    1.0,    a);    	non-compiled	[CE]  possible  loss  of  precision	133	None	replace
1152	[BUG]  [BUGGY]  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
1153	[BUG]  [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  timeout  [FE]                MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
1154	[BUG]  [BUGGY]  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
1155	[BUG]  [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  timeout  [FE]                  MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	if(numIterations  >=  1)  {  a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  }  else  {  numIterations++;  }	          a    =    Math.max(a    -    1.0,    lowerBound);    b    =    Math.max(a    -    1.0,    lowerBound);    timeout    	compilable	timeout	28	1	replace
1156	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound  +  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  lowerBound  +  1.0);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	147	None	replace
1157	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  *  1.0);  [CE]  possible  loss  of  precision  [FE]                      MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  *  1.0);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound  *  1.0);	  numIterations    =    Math.max(a    -    1.0,    lowerBound    +    1.0);    	non-compiled	[CE]  possible  loss  of  precision	147	None	replace
1158	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  initial,  upperBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,double,int)  [FE]                    MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  -  1.0,  initial,  upperBound,  maximumIterations);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  initial,  upperBound,  maximumIterations);	  numIterations    =    Math.max(a    -    1.0,    lowerBound,    maximumIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,int)	1	None	replace
1159	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  /  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                        MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(initial  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  /  1.0,  lowerBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
1160	[BUG]  [BUGGY]  numIterations  =  Math.min(a  /  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                          MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.min(a  /  1.0,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  /  1.0,  lowerBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
1161	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.5,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                            MathException      [CONTEXT]      lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);      [BUGGY]  numIterations  =  Math.max(a  /  1.5,  lowerBound);  [BUGGY]      b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(       "number  of  iterations={0},  maximum  iterations={1},       "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  1.5,  lowerBound);	  numIterations    =    Math.max(a    /    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
