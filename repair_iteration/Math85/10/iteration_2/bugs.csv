bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound,  maximumIterations);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	9	None	replace
2	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]                  MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  maximumIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  maximumIterations);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
3	[BUG]  [BUGGY]  numIterations  =  Math.max(a  /  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  /  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  /  1.0,  lowerBound);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
4	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
5	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
6	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	3	2	add
7	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	3	2	add
8	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	3	None	add
9	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	timeout	3	1	add
10	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    b  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	timeout	3	1	add
11	[BUG]  [BUGGY]  [FE]  MathException  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
12	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [FE]  MathException  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(b  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
13	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  upperBound);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
14	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  upperBound);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
15	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
16	[BUG]  [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
17	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  upperBound);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
18	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  lowerBound  +  1.0);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
19	[BUG]  [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(a  -  1.0,  maximumIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  -  1.0,  maximumIterations);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
20	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	1	1	add
21	[BUG]  [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	1	1	add
22	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	1	2	add
23	[BUG]  [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.min(a  -  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	1	2	add
24	[BUG]  [BUGGY]  [FE]  MathException  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	1	2	add
25	[BUG]  [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [FE]  MathException  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  upperBound);	  	compilable	  [FE]  MathException  	1	2	add
26	[BUG]  [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  a  =  Math.max(a  -  1.0,  lowBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.max(a    -    1.0,    lowerBound);    a  =  Math.max(a  -  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	1	None	add
27	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	1	1	add
28	[BUG]  [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.max(a  -  1.0,  lowerBound);  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.max(a    -    1.0,    lowerBound);    b  =  Math.max(a  -  1.0,  lowerBound);	  	compilable	timeout	1	1	add
29	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound,  maximumIterations);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	19	None	replace
30	[BUG]  [BUGGY]  int  numIterations++;  [CE]  ';'  expected  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  int  numIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations++;	      numIterations++;    	non-compiled	[CE]  ';'  expected	22	None	replace
31	[BUG]  [BUGGY]  numIterations  +=  a.length;  [CE]  double  cannot  be  dereferenced  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  a.length;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a.length;	      numIterations++;    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
32	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  a;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  a;	      numIterations++;    	compilable	timeout	22	1	replace
33	[BUG]  [BUGGY]  numIterations  +=  a;  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  a;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  a;	      numIterations++;    	compilable	timeout	22	1	replace
34	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	14	1	add
35	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	14	1	add
36	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a));  [CE]  ';'  expected  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a));  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a));	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
37	[BUG]  [BUGGY]  timeout  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	14	1	add
38	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  timeout  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  a  =  Math.min(b  +  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    a);    a  =  Math.min(b  +  1.0,  a);	  timeout    	compilable	timeout	14	1	add
39	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a)  [CE]  ';'  expected  [FE]                  MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  b  =  Math.min(b  +  1.0,  a)  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    a);    b  =  Math.min(b  +  1.0,  a)	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
40	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	17	1	add
41	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  upperBound);	  timeout    	compilable	timeout	17	1	add
42	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	17	1	add
43	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  lowerBound);	  timeout    	compilable	timeout	17	1	add
44	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0,  topBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	17	None	add
45	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0),  upperBound);  [CE]  ';'  expected  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.0),  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.0),  upperBound);	  timeout    	non-compiled	[CE]  ';'  expected	17	None	add
46	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
47	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
48	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
49	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
50	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
51	[BUG]  [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  -  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  -  1.0,  lowerBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
52	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	12	1	add
53	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowerBound);	  	compilable	timeout	12	1	add
54	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	12	2	add
55	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	12	2	add
56	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	12	None	add
57	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowestBound);  [CE]  cannot  find  symbol  lowestBound  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(b  +  1.0,  lowestBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(b  +  1.0,  lowestBound);	  	non-compiled	[CE]  cannot  find  symbol  lowestBound	12	None	add
58	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
59	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
60	[BUG]  [BUGGY]  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	2	add
61	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [FE]  MathException  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  upperBound);	  	compilable	  [FE]  MathException  	5	2	add
62	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	5	1	add
63	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	5	1	add
64	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowBound);	  	non-compiled	[CE]  cannot  find  symbol  lowBound	5	None	add
65	[BUG]  [BUGGY]  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  +  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	8	1	replace
66	[BUG]  [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  +  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	timeout	8	1	replace
67	[BUG]  [BUGGY]  [FE]  MathException  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  -  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	8	2	replace
68	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  [FE]  MathException  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  -  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	8	2	replace
69	[BUG]  [BUGGY]  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
70	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
71	[BUG]  [BUGGY]  timeout  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	7	1	add
72	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	7	1	add
73	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowBound);  [CE]  cannot  find  symbol  lowBound  [FE]                  MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  lowBound	7	None	add
74	[BUG]  [BUGGY]  timeout  [FE]                    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
75	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]                    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.min(a  *  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
76	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  b);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  1.0,  b);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
77	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  b);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  b);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  1.0,  b);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
78	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  upperBound);	      a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	2	1	replace
79	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  upperBound);	      a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	2	1	replace
80	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound,  numIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound,  numIterations);	      a    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	2	None	replace
81	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  0.5,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
82	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  0.5,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  0.5,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
83	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  +  0.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
84	[BUG]  [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  0.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  +  0.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
85	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  +  1.0,  upperBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
86	[BUG]  [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  +  1.0,  upperBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
87	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(a  *  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
88	[BUG]  [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(a  *  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
89	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  numIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        numIterations++;    numIterations++;	  	compilable	  [FE]  MathException  	21	1	add
90	[BUG]  [BUGGY]      numIterations++;  numIterations++;  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  numIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    numIterations++;	  	compilable	  [FE]  MathException  	21	1	add
91	[BUG]  [BUGGY]      numIterations++;  int  numIterations++;  [CE]  ';'  expected  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  int  numIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    int  numIterations++;	  	non-compiled	[CE]  ';'  expected	21	None	add
92	[BUG]  [BUGGY]      numIterations++;  double  numIterations++;  [CE]  ';'  expected  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  double  numIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    double  numIterations++;	  	non-compiled	[CE]  ';'  expected	21	None	add
93	[BUG]  [BUGGY]      numIterations++;  nIterations++;  [CE]  cannot  find  symbol  nIterations  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  nIterations++;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    nIterations++;	  	non-compiled	[CE]  cannot  find  symbol  nIterations	21	None	add
94	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  +  1.0,  upperBound);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
95	[BUG]  [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  +  1.0,  maximumIterations);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  +  1.0,  maximumIterations);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
96	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  +  1.0,  lowerBound);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
97	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	10	1	add
98	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  upperBound);	  timeout    	compilable	timeout	10	1	add
99	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	10	1	add
100	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	10	1	add
101	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  topBound);  [CE]  cannot  find  symbol  topBound  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.0,  topBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.0,  topBound);	  timeout    	non-compiled	[CE]  cannot  find  symbol  topBound	10	None	add
102	[BUG]  [BUGGY]  numIterations  =  Math.max(a,  upperBound);  [CE]  possible  loss  of  precision  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a,  upperBound);	      numIterations++;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
103	[BUG]  [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(a  +  1.0,  upperBound);	      numIterations++;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
104	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  0;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  =  0;	      numIterations++;    	compilable	timeout	22	1	replace
105	[BUG]  [BUGGY]  numIterations  =  0;  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  0;  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  0;	      numIterations++;    	compilable	timeout	22	1	replace
106	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  lowerBound);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
107	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  a);  [CE]  possible  loss  of  precision  [FE]                  MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(lowerBound  -  1.0,  a);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  -  1.0,  a);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
108	[BUG]  [BUGGY]  [FE]  MathException  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(lowerBound  +  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	8	2	replace
109	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [FE]  MathException  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  +  1.0,  lowerBound);	      b    =    Math.min(a    +    1.0,    lowerBound);    timeout    	compilable	  [FE]  MathException  	8	2	replace
110	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  +  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
111	[BUG]  [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  +  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
112	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  +  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
113	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(lowerBound  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  +  1.0,  lowerBound);	      a    =    Math.min(a    +    1.0,    lowerBound);    	compilable	timeout	6	1	replace
114	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.min(lowerBound  -  1.0,  lowerBound);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
115	[BUG]  [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.min(lowerBound  -  1.0,  lowerBound);	      a    =    Math.min(a    -    1.0,    lowerBound);    	compilable	timeout	4	1	replace
116	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  -  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
117	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  a);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  -  1.0,  a);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
118	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
119	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.max(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
120	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(lowerBound  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
121	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	timeout	18	1	replace
122	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	12	1	add
123	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  lowerBound);  b  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    lowerBound);    b  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	timeout	12	1	add
124	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(lowerBound  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
125	[BUG]  [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(lowerBound  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(lowerBound  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
126	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(initial  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
127	[BUG]  [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(initial  +  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(initial  +  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
128	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(initial  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  -  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
129	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  upperBound  +  1.0);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
130	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  a);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  a);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  -  1.0,  a);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
131	[BUG]  [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(lowerBound  -  1.0,  lowerBound);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
132	[BUG]  [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.min(initial  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.min(initial  -  1.0,  lowerBound);	      numIterations    =    Math.min(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
133	[BUG]  [BUGGY]  numIterations  =  Math.max(lowerBound  +  1.0,  a);  [CE]  possible  loss  of  precision  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(lowerBound  +  1.0,  a);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(lowerBound  +  1.0,  a);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
134	[BUG]  [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  lowerBound);  [CE]  possible  loss  of  precision  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(initial  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(initial  +  1.0,  lowerBound);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
135	[BUG]  [BUGGY]      numIterations++;  initMatrix(initial,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  initMatrix(initial,  lowerBound,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    initMatrix(initial,  lowerBound,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
136	[BUG]  [BUGGY]      numIterations++;  initMatrix(fa,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  initMatrix(fa,  lowerBound,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    initMatrix(fa,  lowerBound,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
137	[BUG]  [BUGGY]      numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  initMajorBounds(a,  lowerBound,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    initMajorBounds(a,  lowerBound,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
138	[BUG]  [BUGGY]      numIterations++;  initMajorBounds(fa,  lowerBound,  upperBound);  [CE]  cannot  find  symbol  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  initMajorBounds(fa,  lowerBound,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    initMajorBounds(fa,  lowerBound,  upperBound);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
139	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	      a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	2	1	replace
140	[BUG]  [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	a  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	      a    =    Math.max(a    -    1.0,    lowerBound);    	compilable	timeout	2	1	replace
141	[BUG]  [BUGGY]  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.min(a  -  1.0,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
142	[BUG]  [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  timeout  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.min(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.min(a  -  1.0,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
143	[BUG]  [BUGGY]  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
144	[BUG]  [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  timeout  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.max(a,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
145	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	numIterations  +=  Math.max(a  -  1.0,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
146	[BUG]  [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  +=  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  +=  Math.max(a  -  1.0,  upperBound);	      numIterations++;    	compilable	timeout	22	1	replace
147	[BUG]  [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [CE]  possible  loss  of  precision  [FE]                MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	numIterations  =  Math.max(a  -  1.0,  lowerBound  +  1.0);	      numIterations    =    Math.max(a    -    1.0,    lowerBound);    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
148	[BUG]  [BUGGY]      numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    int  numIterations  =  Math.max(a  -  1.0,  upperBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	21	None	add
149	[BUG]  [BUGGY]      numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]      MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  int  numIterations  =  Math.max(a  -  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    int  numIterations  =  Math.max(a  -  1.0,  lowerBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	21	None	add
150	[BUG]  [BUGGY]      numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    int  numIterations  =  Math.min(a  +  1.0,  upperBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	21	None	add
151	[BUG]  [BUGGY]      numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      numIterations++;  int  numIterations  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        numIterations++;    int  numIterations  =  Math.min(a  +  1.0,  lowerBound);	  	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	21	None	add
152	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
153	[BUG]  [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  +  1.0,  lowerBound);  a  =  Math.min(a  *  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    +    1.0,    lowerBound);    a  =  Math.min(a  *  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	5	2	add
154	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(a  *  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
155	[BUG]  [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(a  *  1.0,  upperBound);	  b    =    Math.min(a    +    1.0,    upperBound);    timeout    	compilable	timeout	11	1	replace
156	[BUG]  [BUGGY]  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
157	[BUG]  [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  timeout  [FE]              MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      b  =  Math.min(a  +  1.0,  lowerBound);  b  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        b    =    Math.min(a    +    1.0,    lowerBound);    b  =  Math.max(a  +  1.0,  lowerBound);	  timeout    	compilable	timeout	7	1	add
158	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  int  numIterations  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  -  1.0,  upperBound);	      numIterations    =    Math.max(a    -    1.0,    upperBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	19	None	replace
159	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	17	1	add
160	[BUG]  [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  -  1.0,  upperBound);  b  =  Math.min(b  -  1.01,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    -    1.0,    upperBound);    b  =  Math.min(b  -  1.01,  upperBound);	  timeout    	compilable	timeout	17	1	add
161	[BUG]  [BUGGY]  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
162	[BUG]  [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [FE]  MathException  [FE]    MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]      a  =  Math.min(a  -  1.0,  lowerBound);  a  =  Math.min(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	        a    =    Math.min(a    -    1.0,    lowerBound);    a  =  Math.min(a  +  1.0,  lowerBound);	  	compilable	  [FE]  MathException  	3	2	add
163	[BUG]  [BUGGY]  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  /  2.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.min(b  /  2.0,  a);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
164	[BUG]  [BUGGY]  b  =  Math.min(b  /  2.0,  a);  timeout  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  /  2.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.min(b  /  2.0,  a);	  b    =    Math.min(b    +    1.0,    a);    timeout    	compilable	timeout	15	1	replace
165	[BUG]  [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound);  [CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  int  numIterations  =  Math.max(a  +  1.0,  lowerBound);  [BUGGY]    b  =  Math.min(b  +  1.0,  upperBound);  fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	int  numIterations  =  Math.max(a  +  1.0,  lowerBound);	      numIterations    =    Math.max(a    +    1.0,    lowerBound);    	non-compiled	[CE]  variable  numIterations  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	16	None	replace
166	[BUG]  [BUGGY]  b  =  Math.min(b  +  1.0,  a);  int  b  =  Math.min(b  +  1.0,  a);  [CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)  [FE]            MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(b  +  1.0,  a);  int  b  =  Math.min(b  +  1.0,  a);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(b    +    1.0,    a);    int  b  =  Math.min(b  +  1.0,  a);	  timeout    	non-compiled	[CE]  variable  b  is  already  defined  in  method  bracket(UnivariateRealFunction,double,double,double,int)	14	None	add
167	[BUG]  [BUGGY]  [FE]  MaxIterationsExceededException  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b  =  Math.max(a  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	18	2	replace
168	[BUG]  [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  [FE]  MaxIterationsExceededException  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.max(a  -  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b  =  Math.max(a  -  1.0,  upperBound);	  b    =    Math.min(b    -    1.0,    upperBound);    timeout    	compilable	  [FE]  MaxIterationsExceededException  	18	2	replace
169	[BUG]  [BUGGY]  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	10	1	add
170	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  timeout  [FE]        MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  +  1.01,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  +  1.01,  upperBound);	  timeout    	compilable	timeout	10	1	add
171	[BUG]  [BUGGY]  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	add	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	10	1	add
172	[BUG]  [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  timeout  [FE]          MathException    [CONTEXT]    lowerBound,  initial,  upperBound);  }  double  a  =  initial;  double  b  =  initial;  double  fa;  double  fb;  int  numIterations  =  0  ;  do  {  a  =  Math.max(a  -  1.0,  lowerBound);    [BUGGY]  b  =  Math.min(a  +  1.0,  upperBound);  b  =  Math.min(a  *  1.0,  upperBound);  [BUGGY]    fa  =  function.value(a);  fb  =  function.value(b);  numIterations++  ;  }  while  ((fa  *  fb  >  0.0)  &&  (numIterations  <  maximumIterations)  &&  ((a  >  lowerBound)  ||  (b  <  upperBound)));  if  (fa  *  fb  >=  0.0  )  {  throw  new  ConvergenceException(     "number  of  iterations={0},  maximum  iterations={1},     "  +  [CLASS]  UnivariateRealSolverUtils  LazyHolder  [METHOD]  bracket  [RETURN_TYPE]  double[]  UnivariateRealFunction  function  double  initial  double  lowerBound  double  upperBound  int  maximumIterations  [VARIABLES]  UnivariateRealSolverFactory  FACTORY  UnivariateRealFunction  function  boolean  double  a  b  fa  fb  initial  lowerBound  upperBound  int  maximumIterations  numIterations  	projects/Math85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java	0.7071067811865475	190	190	1	replace	b    =    Math.min(a    +    1.0,    upperBound);    b  =  Math.min(a  *  1.0,  upperBound);	  timeout    	compilable	timeout	10	1	add
