bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  real  *  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getReal(),    real    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
2	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  /  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getReal(),  real  /  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getReal(),    real    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  return  addInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  addInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  addInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    createInfinite(imaginary    +    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imagined  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imagined  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getReal(),  imagined  +  rhs.getImaginary());	  return    createInfinite(imaginary    +    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
5	[BUG]  [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getInfinite());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getInfinite());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  return  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());	  return    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
7	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
8	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getNaN());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getNaN());	  return    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  Real  real  =  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
11	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  Complex    real    =    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
12	[BUG]  [BUGGY]  return  add(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getINF(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  Complex  real  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  rhs.getNaN();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  rhs.getNaN();	  Complex    real    =    rhs.getRal();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
14	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  /  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  real  /  rhs.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    /    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  MathUtils.checkState(imaginary  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(imaginary  ==  null);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(imaginary  ==  null);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
16	[BUG]  [BUGGY]  Complex  rhs  =  rhs.getRaw();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  rhs  =  rhs.getRaw();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  rhs  =  rhs.getRaw();	  Complex    rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  Complex  rhs  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  rhs  =  rhs.getNaN();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  rhs  =  rhs.getNaN();	  Complex    rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
18	[BUG]  [BUGGY]  MathUtils.checkState(isNaN);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(isNaN);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(isNaN);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(isInfinite  ||  isNaN);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(isInfinite  ||  isNaN);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  MathUtils.checkState(imaginary  ==  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(imaginary  ==  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(imaginary  ==  rhs.getImaginary());	  MathUtils.checkState(real    ==    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
21	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  ==  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  ==  rhs.getINF());	  MathUtils.checkState(real    ==    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
22	[BUG]  [BUGGY]  MathUtils.checkState(imaginary  >=  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(imaginary  >=  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(imaginary  >=  rhs.getImaginary());	  MathUtils.checkState(real    ==    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
23	[BUG]  [BUGGY]  Real  real  =  rhs.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  rhs.getQualifiedName();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  rhs.getQualifiedName();	  Real    real    =    rhs.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  MathUtils.checkState(real  >=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  >=  null);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  >=  null);	  MathUtils.checkState(real!=    null);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  rhs.isInfinite());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(isInfinite  ||  rhs.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(isInfinite  ||  rhs.isInfinite());	  MathUtils.checkState(rhs.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
26	[BUG]  [BUGGY]  MathUtils.checkState(isNaN  ||  rhs.isInfinite());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(isNaN  ||  rhs.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(isNaN  ||  rhs.isInfinite());	  MathUtils.checkState(rhs.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
27	[BUG]  [BUGGY]  MathUtils.checkState(rhs.isInfinite()  ||  rhs.isInfinite());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(rhs.isInfinite()  ||  rhs.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(rhs.isInfinite()  ||  rhs.isInfinite());	  MathUtils.checkState(rhs.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
28	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  rhs.getReal());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  ==  rhs.getReal());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  ==  rhs.getReal());	  MathUtils.checkState(real    ==    rhs);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
29	[BUG]  [BUGGY]  MathUtils.checkState(real!=  rhs);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real!=  rhs);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real!=  rhs);	  MathUtils.checkState(real    ==    rhs);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
30	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  rhs,  imaginary);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  ==  rhs,  imaginary);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  ==  rhs,  imaginary);	  MathUtils.checkState(real    ==    rhs);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
31	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getNaN());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getNaN(),  q);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getNaN(),  q);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(rhs.getReal(),  imaginary  +  rhs.getNaN(),  q);	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getNaN());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  MathUtils.checkState(rhs  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(rhs  ==  null);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(rhs  ==  null);	  MathUtils.checkState(real    ==    null);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
34	[BUG]  [BUGGY]  MathUtils.checkState(real.isInfinite()  ||  real.isInfinite());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real.isInfinite()  ||  real.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real.isInfinite()  ||  real.isInfinite());	  MathUtils.checkState(real.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
35	[BUG]  [BUGGY]  MathUtils.checkState(isInfinite  ||  real.isInfinite());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(isInfinite  ||  real.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(isInfinite  ||  real.isInfinite());	  MathUtils.checkState(real.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
36	[BUG]  [BUGGY]  Real  rhs  =  INF.getRaw();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  INF.getRaw();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  INF.getRaw();	  Real    rhs    =    INF.getReal();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  Real  rhs  =  NaN.getReal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  NaN.getReal();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  NaN.getReal();	  Real    rhs    =    INF.getReal();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  rhs  =  rhs.getRaw();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  rhs  =  rhs.getRaw();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	rhs  =  rhs.getRaw();	  rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
39	[BUG]  [BUGGY]  rhs  =  rhs.getNaN();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  rhs  =  rhs.getNaN();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	rhs  =  rhs.getNaN();	  rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  Real    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
41	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());	  Real    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
42	[BUG]  [BUGGY]  Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());	  Real    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
43	[BUG]  [BUGGY]  Real  =  rhs.getINF();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  =  rhs.getINF();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  =  rhs.getINF();	  Real    =    rhs.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
44	[BUG]  [BUGGY]  Real  =  rhs.getReal();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  =  rhs.getReal();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  =  rhs.getReal();	  Real    =    rhs.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
45	[BUG]  [BUGGY]  Real  =  imaginary  +  rhs.getImaginary();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  =  imaginary  +  rhs.getImaginary();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  =  imaginary  +  rhs.getImaginary();	  Real    =    rhs.getImaginary();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
46	[BUG]  [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getNaN());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
47	[BUG]  [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getInfinite());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getInfinite());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
48	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());	  Complex    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
49	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  /  q.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  /  q.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  imaginary  /  q.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    q.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  *  q.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  *  q.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getReal(),  real  *  q.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    q.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
51	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  *  q.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  *  q.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  real  *  q.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    q.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  MathUtils.checkNotNull(imaginary  +  rhs.getReal());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkNotNull(imaginary  +  rhs.getReal());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkNotNull(imaginary  +  rhs.getReal());	  MathUtils.checkNotNull(real    +    rhs.getReal());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
53	[BUG]  [BUGGY]  MathUtils.checkNotNull(real  +  rhs.getReal(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkNotNull(real  +  rhs.getReal(),  imaginary);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkNotNull(real  +  rhs.getReal(),  imaginary);	  MathUtils.checkNotNull(real    +    rhs.getReal());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
54	[BUG]  [BUGGY]  MathUtils.checkState(real  +  rhs.getReal());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  +  rhs.getReal());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  +  rhs.getReal());	  MathUtils.checkNotNull(real    +    rhs.getReal());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
55	[BUG]  [BUGGY]  Real  rhs  =  isInfinite?  q.getRaw()  :  null;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  isInfinite?  q.getRaw()  :  null;  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  isInfinite?  q.getRaw()  :  null;	  Real    rhs    =    q.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  Real  rhs  =  isNaN?  q.getRaw()  :  null;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  isNaN?  q.getRaw()  :  null;  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  isNaN?  q.getRaw()  :  null;	  Real    rhs    =    q.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getImaginary(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getImaginary(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getImaginary(),  real  +  rhs.getImaginary());	  return    createComplex(real    +    rhs.getImaginary(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
59	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getImaginary(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getImaginary(),  imaginary  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getImaginary(),  imaginary  +  rhs.getINF());	  return    createComplex(real    +    rhs.getImaginary(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
60	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  real  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  real  +  rhs.getINF());	  return    createComplex(imaginary    +    rhs.getReal(),    real    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  return  add(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(real  +  rhs.getReal(),  imaginary  +  rhs.getINF());	  return    createComplex(imaginary    +    rhs.getReal(),    real    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());	  return    createComplex(imaginary    +    rhs.getReal(),    real    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getInF(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getInF(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getInF(),  imaginary  +  rhs.getImaginary());	  return    createComplex(real    +    rhs.getINF(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  *  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  real  *  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getReal(),  real  *  rhs.getINF());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  /  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  /  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  imaginary  /  rhs.getINF());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  Real  rhs  =  real.getInfinite();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  real.getInfinite();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  real.getInfinite();	  Real    rhs    =    rhs.getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
67	[BUG]  [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  /  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(rhs.getReal(),  imaginary  /  rhs.getINF());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(rhs.getReal(),  imaginary  /  rhs.getINF());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    /    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getINF(),  real  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getINF(),  real  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getINF(),  real  +  rhs.getINF());	  return    createComplex(real    +    rhs.getINF(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(imaginary    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
70	[BUG]  [BUGGY]  return  add(real  +  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(real  +  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(real  +  rhs.getReal(),  real  +  rhs.getImaginary());	  return    add(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
71	[BUG]  [BUGGY]  return  real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary();	  return    add(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  ';'  expected	29	None	replace
72	[BUG]  [BUGGY]  Real  rhs  =  q.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  q.getReal();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  q.getReal();	  Real    rhs    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
73	[BUG]  [BUGGY]  Real  real  =  rhs.getInFull();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  rhs.getInFull();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  rhs.getInFull();	  Real    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  return  createComplex(real  /  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  /  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  /  rhs.getReal(),  real  +  rhs.getImaginary());	  return    createComplex(imaginary    /    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
75	[BUG]  [BUGGY]  return  add(real  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(real  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(real  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    createComplex(imaginary    /    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
76	[BUG]  [BUGGY]  Real  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(rhs.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
77	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  +  rhs.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
78	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getReal(),  imaginary  /  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  return  createInfinite(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  real  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  real  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(imaginary  +  rhs.getReal(),  real  *  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  real  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  real  +  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(imaginary  +  rhs.getReal(),  real  +  rhs.getINF());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getReal(),  imaginary  +  rhs.getNaN());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  Complex  real  =  rhs.getInf();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  rhs.getInf();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  rhs.getInf();	  Complex    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  return  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  /  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  return    createComplex(real    /    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
85	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getNaN());	  Complex    real    =    createComplex(imaginary    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
86	[BUG]  [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(real.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  *  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getReal(),  imaginary  *  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getReal(),  imaginary  *  rhs.getINF());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
88	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getINF());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
89	[BUG]  [BUGGY]  Real  rhs  =  q.getInfinite();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  q.getInfinite();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  q.getInfinite();	  Real    rhs    =    rhs.getInfinite();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
90	[BUG]  [BUGGY]  rhs  =  rhs.getInfinite();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  rhs  =  rhs.getInfinite();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	rhs  =  rhs.getInfinite();	  rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
91	[BUG]  [BUGGY]  Real  rhs  =  q.getINF();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  q.getINF();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  q.getINF();	  Real    rhs    =    q.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  imaginary  *  rhs.getINF());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  return  add(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(real  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    add(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  return  add(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  add(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  add(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());	  return    add(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
95	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getINF(),  imaginary  +  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getINF(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  return  createComplex(imaginary  /  rhs.getINF(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  /  rhs.getINF(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  /  rhs.getINF(),  real  +  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getINF(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
97	[BUG]  [BUGGY]  Real  rhs  =  real.add(real);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  real.add(real);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  real.add(real);	  Real    rhs    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
98	[BUG]  [BUGGY]  MathUtils.checkState(real.isNaN());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real.isNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real.isNaN());	  MathUtils.checkState(real.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
99	[BUG]  [BUGGY]  MathUtils.checkState(real.isInfinite(),  imaginary);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real.isInfinite(),  imaginary);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real.isInfinite(),  imaginary);	  MathUtils.checkState(real.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
100	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getNaN());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getNaN());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getNaN());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
101	[BUG]  [BUGGY]  Real  real  =  rhs.getInf();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  rhs.getInf();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  rhs.getInf();	  Real    real    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
102	[BUG]  [BUGGY]  Real  rhs  =  real.getRal();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  real.getRal();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  real.getRal();	  Real    rhs    =    rhs.getRal();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
103	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  isInfinite);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  ==  isInfinite);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  ==  isInfinite);	  MathUtils.checkState(isInfinite);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  q.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  *  q.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  imaginary  *  q.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    q.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  /  rhs.getReal(),  imaginary  /  rhs.getImaginary());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    /    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
106	[BUG]  [BUGGY]  return  createComplex(imaginary  /  rhs.getReal(),  real  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  /  rhs.getReal(),  real  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  /  rhs.getReal(),  real  *  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getReal(),    real    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  return  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  return    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
108	[BUG]  [BUGGY]  Real  rhs  =  INF.create(real);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  INF.create(real);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  INF.create(real);	  Real    rhs    =    INF.getReal();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
109	[BUG]  [BUGGY]  MathUtils.checkState(real  ==  rhs.isInfinite());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  ==  rhs.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  ==  rhs.isInfinite());	  MathUtils.checkState(real    ==    rhs);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
110	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());	  Real    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
111	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  Complex    real    =    createComplex(imaginary    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
112	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  real  *  rhs.getImaginary());	  Complex    real    =    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
113	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  real  +  rhs.getImaginary());	  return    createComplex(imaginary    /    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
114	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  +  rhs.getReal(),  real  +  rhs.getImaginary());	  Complex    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
115	[BUG]  [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  *  rhs.getReal(),  imaginary  /  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  *  rhs.getReal(),  imaginary  /  rhs.getImaginary());	  return    createComplex(real    +    rhs.getReal(),    imaginary    /    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
116	[BUG]  [BUGGY]  Real  real  =  rhs.getDouble();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  rhs.getDouble();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  rhs.getDouble();	  Real    real    =    rhs.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
117	[BUG]  [BUGGY]  MathUtils.checkNotNull(real  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkNotNull(real  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkNotNull(real  +  rhs.getImaginary());	  MathUtils.checkNotNull(real    +    rhs.getReal());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
118	[BUG]  [BUGGY]  MathUtils.checkState(real  >=  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real  >=  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real  >=  rhs.getImaginary());	  MathUtils.checkState(real    ==    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getINF());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  *  rhs.getINF());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getImaginary(),  imaginary  *  rhs.getINF());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getImaginary(),  imaginary  *  rhs.getINF());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getImaginary(),  imaginary  *  rhs.getINF());	  return    createComplex(real    +    rhs.getReal(),    imaginary    *    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
121	[BUG]  [BUGGY]  Real  rhs  =  isNaN?  q.getRaw()  :  rhs.getRaw();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  isNaN?  q.getRaw()  :  rhs.getRaw();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  isNaN?  q.getRaw()  :  rhs.getRaw();	  Real    rhs    =    q.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
122	[BUG]  [BUGGY]  Real  rhs  =  rhs.getImaginary();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  rhs.getImaginary();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  rhs.getImaginary();	  Real    rhs    =    rhs.getRal();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
123	[BUG]  [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  +  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  +  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  return    createComplex(imaginary    +    rhs.getReal(),    real    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  return  create(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  create(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  create(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    add(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
125	[BUG]  [BUGGY]  Real  rhs  =  this.real.getReal();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  this.real.getReal();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  this.real.getReal();	  Real    rhs    =    real.getReal();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
126	[BUG]  [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInfinite());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInfinite());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
127	[BUG]  [BUGGY]  Real  rhs  =  this.real.getRaw();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  this.real.getRaw();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  this.real.getRaw();	  Real    rhs    =    real.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
128	[BUG]  [BUGGY]  return  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(imaginary  /  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    createComplex(imaginary    /    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
129	[BUG]  [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(imaginary  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    real    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
130	[BUG]  [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInf());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInf());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getInf());	  return    createComplex(imaginary    +    rhs.getReal(),    real    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
131	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  true  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(imaginary  +  rhs.getReal(),  true  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(imaginary  +  rhs.getReal(),  true  +  rhs.getImaginary());	  Real    real    =    createComplex(real    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
132	[BUG]  [BUGGY]  Complex  rhs  =  rhs.getInfinite();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  rhs  =  rhs.getInfinite();  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  rhs  =  rhs.getInfinite();	  Complex    rhs    =    rhs.getINF();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  MathUtils.checkState(real.isInfinite()  ||  imaginary.isInfinite());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkState(real.isInfinite()  ||  imaginary.isInfinite());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkState(real.isInfinite()  ||  imaginary.isInfinite());	  MathUtils.checkState(real.isInfinite());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
134	[BUG]  [BUGGY]  Real  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  *  rhs.getImaginary());	  Complex    real    =    createComplex(real    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());	  Complex    real    =    createComplex(imaginary    +    rhs.getReal(),    imaginary    +    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
136	[BUG]  [BUGGY]  return  createInfinite(real  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  return  createInfinite(real  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());  [BUGGY]      imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	return  createInfinite(real  +  rhs.getImaginary(),  imaginary  +  rhs.getImaginary());	  return    createInfinite(real    +    rhs.getReal(),    imaginary    +    rhs.getINF());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
137	[BUG]  [BUGGY]  Real  real  =  rhs.getreal();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  real  =  rhs.getreal();  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  real  =  rhs.getreal();	  Real    real    =    rhs.getRaw();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(imaginary  *  rhs.getReal(),  imaginary  +  rhs.getImaginary());	  Complex    real    =    createComplex(imaginary    *    rhs.getReal(),    imaginary    *    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
139	[BUG]  [BUGGY]  MathUtils.checkArgument(imaginary  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  MathUtils.checkArgument(imaginary  ==  null);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	MathUtils.checkArgument(imaginary  ==  null);	  MathUtils.checkNotNull(imaginary);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
140	[BUG]  [BUGGY]  Real  rhs  =  INF.createComplex(real);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Real  rhs  =  INF.createComplex(real);  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Real  rhs  =  INF.createComplex(real);	  Real    rhs    =    INF.getReal();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
141	[BUG]  [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  /  rhs.getImaginary());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);      [BUGGY]  Complex  real  =  createComplex(real.getReal(),  imaginary  /  rhs.getImaginary());  [BUGGY]      return  createComplex(real  +  rhs.getReal(),    imaginary  +  rhs.getImaginary());  imaginary  +  rhs.getImaginary());  }  [CLASS]  Complex  [METHOD]  add  [RETURN_TYPE]  Complex  Complex  rhs  [VARIABLES]  boolean  isInfinite  isNaN  double  imaginary  q  real  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  rhs  	projects/Math53/src/main/java/org/apache/commons/math/complex/Complex.java	0.31622776601683794	153	154	1	replace	Complex  real  =  createComplex(real.getReal(),  imaginary  /  rhs.getImaginary());	  Complex    real    =    createComplex(rhs.getReal(),    imaginary    /    rhs.getImaginary());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
